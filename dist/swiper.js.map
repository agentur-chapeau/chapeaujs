{"version":3,"file":"swiper.js","sources":["../src/scripts/swiper/configurations.js","../src/scripts/swiper/index.js"],"sourcesContent":["export const swiperConfigurations = {\n  /** @returns {import(\"swiper/types\").SwiperOptions} */\n  auto: ({ pagination, prev, next }) => {\n    return {\n      slidesPerView: \"auto\",\n      pagination: {\n        el: pagination,\n        clickable: true,\n        type: \"bullets\",\n      },\n      navigation: {\n        prevEl: prev,\n        nextEl: next,\n      },\n    };\n  },\n};\n","import { exportChapeau } from \"../../utils/export_chapeau.js\";\nimport { onReady } from \"../../utils/on_ready.js\";\nimport { exportGlobal } from \"../../utils/export_global.js\";\nimport { swiperConfigurations } from \"./configurations.js\";\n\nconst swipers = {};\n\nfunction getSwiper(name) {\n  const element = document.querySelector(`[c-swiper=\"${name}\"]`);\n  return element.swiper ?? null;\n}\n\nasync function configureSwiper(name, options) {\n  if (!window.Swiper) {\n    await loadSwiper();\n  }\n\n  const element = swipers[name].wrapper;\n  if (element.swiper) {\n    element.swiper.destroy();\n  }\n\n  return new Swiper(element, options);\n}\n\nonReady(async () => {\n  const swiperElements = document.querySelectorAll(\"[c-swiper]\");\n  for (const swiperEl of swiperElements) {\n    const name = swiperEl.attributes.getNamedItem(\"c-swiper\").value;\n    const elementType =\n      swiperEl.attributes.getNamedItem(\"c-swiper-element\")?.value ?? \"wrapper\";\n\n    swipers[name] = {\n      ...(swipers[name] ?? {}),\n      [elementType]: swiperEl,\n    };\n  }\n\n  console.log(swipers);\n  for (const [swiperName, swiper] of Object.entries(swipers)) {\n    const configurationName = swiper.wrapper.dataset.configuration;\n    if (!configurationName) continue;\n\n    let configuration = swiperConfigurations[configurationName];\n    if (!configuration) {\n      console.error(\n        `Swiper Configuration with name \"${configurationName}\" not found!`,\n      );\n      continue;\n    }\n\n    if (configuration instanceof Function) {\n      configuration = configuration(swiper);\n    }\n\n    await configureSwiper(swiperName, configuration);\n  }\n});\n\nasync function loadSwiper() {\n  await import(\"../../dependencies/swiper.js\").then(exportGlobal);\n}\n\nexportChapeau({\n  getSwiper,\n  configureSwiper,\n  swipers,\n});\n"],"names":[],"mappings":";;AAAO,MAAM,uBAAuB;AAAA;AAAA,EAElC,MAAM,CAAC,EAAE,YAAY,MAAM,KAAI,MAAO;AACpC,WAAO;AAAA,MACL,eAAe;AAAA,MACf,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,WAAW;AAAA,QACX,MAAM;AAAA,MACP;AAAA,MACD,YAAY;AAAA,QACV,QAAQ;AAAA,QACR,QAAQ;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACH;ACXA,MAAM,UAAU,CAAE;AAElB,SAAS,UAAU,MAAM;AACvB,QAAM,UAAU,SAAS,cAAc,cAAc,IAAI,IAAI;AAC7D,SAAO,QAAQ,UAAU;AAC3B;AAEA,eAAe,gBAAgB,MAAM,SAAS;AAC5C,MAAI,CAAC,OAAO,QAAQ;AAClB,UAAM,WAAY;AAAA,EACtB;AAEE,QAAM,UAAU,QAAQ,IAAI,EAAE;AAC9B,MAAI,QAAQ,QAAQ;AAClB,YAAQ,OAAO,QAAS;AAAA,EAC5B;AAEE,SAAO,IAAI,OAAO,SAAS,OAAO;AACpC;AAEA,QAAQ,YAAY;;AAClB,QAAM,iBAAiB,SAAS,iBAAiB,YAAY;AAC7D,aAAW,YAAY,gBAAgB;AACrC,UAAM,OAAO,SAAS,WAAW,aAAa,UAAU,EAAE;AAC1D,UAAM,gBACJ,cAAS,WAAW,aAAa,kBAAkB,MAAnD,mBAAsD,UAAS;AAEjE,YAAQ,IAAI,IAAI;AAAA,MACd,GAAI,QAAQ,IAAI,KAAK;MACrB,CAAC,WAAW,GAAG;AAAA,IAChB;AAAA,EACL;AAEE,UAAQ,IAAI,OAAO;AACnB,aAAW,CAAC,YAAY,MAAM,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC1D,UAAM,oBAAoB,OAAO,QAAQ,QAAQ;AACjD,QAAI,CAAC,kBAAmB;AAExB,QAAI,gBAAgB,qBAAqB,iBAAiB;AAC1D,QAAI,CAAC,eAAe;AAClB,cAAQ;AAAA,QACN,mCAAmC,iBAAiB;AAAA,MACrD;AACD;AAAA,IACN;AAEI,QAAI,yBAAyB,UAAU;AACrC,sBAAgB,cAAc,MAAM;AAAA,IAC1C;AAEI,UAAM,gBAAgB,YAAY,aAAa;AAAA,EACnD;AACA,CAAC;AAED,eAAe,aAAa;AAC1B,QAAM,OAAO,sBAA8B,EAAE,KAAK,YAAY;AAChE;AAEA,cAAc;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AACF,CAAC;"}
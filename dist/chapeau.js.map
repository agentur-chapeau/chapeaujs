{"version":3,"file":"chapeau.js","sources":["../src/async_form.js","../src/main.js"],"sourcesContent":["export class AsyncForm {\n\tconstructor(el) {\n\t\tif (el.dataset.refAsyncForm) {\n\t\t\treturn AsyncForm.refs[el.dataset.refAsyncForm];\n\t\t}\n\n\t\tthis.ref = Math.random();\n\t\tAsyncForm.refs[this.ref] = this;\n\t\tel.dataset.refAsyncForm = this.ref;\n\n\t\tthis.el = el;\n\n\t\tthis.form = el.querySelector(\"form\");\n\t\tthis.formSuccess = el.querySelector(\".w-form-done\");\n\t\tthis.formFail = el.querySelector(\".w-form-fail\");\n\n\t\tthis.submitButton = el.querySelector('[type=\"submit\"]');\n\t\tthis.buttonText = this.getSubmitText();\n\t\tthis.waitingText = this.submitButton.dataset.wait;\n\n\t\t/** @type {BeforeSubmitHandler[]} */\n\t\tthis.beforeSubmitHandlers = [];\n\t\t/** @type {PayloadHandler[]} */\n\t\tthis.payloadHandlers = [];\n\t\t/** @type {InputHandler[]} */\n\t\tthis.inputHandlers = [];\n\t\t/** @type {StateHandler[]} */\n\t\tthis.onStateHandlers = [];\n\n\t\tthis.el.addEventListener(\"submit\", (e) => this.submit(e));\n\t}\n\n\t/**\n\t * @callback BeforeSubmitHandler\n\t * @returns {bool} if false then the form is not submitted\n\t */\n\n\t/**\n\t * Gets called before the form starts to submit\n\t * Allows to cancel the submit by returning false\n\t * @type {BeforeSubmitHandler}\n\t */\n\tset onBeforeSubmit(fn) {\n\t\tthis.beforeSubmitHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback PayloadHandler\n\t * @param {Object} payload The current payload\n\t * @returns {Object} The new payload\n\t */\n\n\t/**\n\t * Allows for adding custom value to the payload\n\t * Gets called before form elements are converted\n\t * All handlers will be called in the order they were registered\n\t * @type {PayloadHandler}\n\t */\n\tset onPayload(fn) {\n\t\tthis.payloadHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback InputHandler\n\t * @param {HTMLElement} input The input element\n\t * @param {String} value The current value\n\t * @returns {String} The new value\n\t */\n\n\t/**\n\t * Allows for transforming the values of the form elements\n\t * All handlers will be called in the order they were registered\n\t * Can be async\n\t * @type {InputHandler}\n\t */\n\tset onInput(fn) {\n\t\tthis.inputHandlers.push(fn);\n\t}\n\n\t/**\n\t * @callback StateHandler\n\t * @param {'loading' | 'success' | 'error'} state\n\t */\n\n\t/**\n\t * Gets called when the forms state changes\n\t * @type {StateHandler}\n\t */\n\tset onState(fn) {\n\t\tthis.onStateHandlers.push(fn);\n\t}\n\n\tasync submit(event) {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst shouldSubmit = this.beforeSubmitHandlers.reduce((prev, handler) => handler() && prev, true);\n\t\t\tif (!shouldSubmit) return;\n\n\t\t\tthis.setState(\"loading\");\n\n\t\t\tconst payload = await this.createPayload();\n\t\t\tconst url = this.form.action;\n\t\t\tconst method = this.form.method;\n\n\t\t\tconst options = {\n\t\t\t\tmethod: method,\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t};\n\n\t\t\tconst response = await fetch(url, options);\n\n\t\t\tif (response.ok) {\n\t\t\t\tthis.setState(\"success\");\n\t\t\t} else {\n\t\t\t\tthis.setState(\"error\");\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tthis.setState(\"error\");\n\t\t}\n\t}\n\n\tasync createPayload() {\n\t\tlet payload = this.payloadHandlers.reduce((payload, handler) => handler(payload), {});\n\n\t\tconst inputElements = this.elements.filter((el) => el.name !== \"\");\n\t\tfor (const input of inputElements) {\n\t\t\tconst name = input.name;\n\t\t\tlet value = input.value;\n\n\t\t\tfor (const inputHandler of this.inputHandlers) {\n\t\t\t\tvalue = await inputHandler(input, value);\n\t\t\t}\n\n\t\t\tif (value === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (input.type === \"checkbox\") {\n\t\t\t\tvalue = input.checked;\n\t\t\t}\n\n\t\t\tif (input.type === \"radio\" && !input.checked) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof payload[name] !== \"undefined\") {\n\t\t\t\tif (!Array.isArray(payload[name])) {\n\t\t\t\t\tpayload[name] = [payload[name]];\n\t\t\t\t}\n\n\t\t\t\tpayload[name].push(value);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpayload[name] = value;\n\t\t}\n\n\t\treturn payload;\n\t}\n\n\t/**\n\t * @param {'loading' | 'success' | 'error'} state\n\t */\n\tsetState(state) {\n\t\tswitch (state) {\n\t\t\tcase \"loading\":\n\t\t\t\tthis.form.style.display = null;\n\t\t\t\tthis.formSuccess.style.display = null;\n\t\t\t\tthis.formFail.style.display = null;\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = true));\n\t\t\t\tthis.setSubmitText(this.waitingText);\n\t\t\t\tbreak;\n\t\t\tcase \"success\":\n\t\t\t\tthis.form.style.display = \"none\";\n\t\t\t\tthis.formSuccess.style.display = \"block\";\n\t\t\t\tthis.formFail.style.display = \"none\";\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = false));\n\t\t\t\tthis.setSubmitText(this.buttonText);\n\n\t\t\t\tthis.form.reset();\n\t\t\t\tthis.formSuccess.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"center\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"error\":\n\t\t\t\tthis.form.style.display = null;\n\t\t\t\tthis.formSuccess.style.display = null;\n\t\t\t\tthis.formFail.style.display = \"block\";\n\t\t\t\tthis.elements.forEach((el) => (el.disabled = false));\n\t\t\t\tthis.setSubmitText(this.buttonText);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.onStateHandlers.forEach((handler) => handler(state));\n\t}\n\n\tgetSubmitText() {\n\t\tif (this.submitButton instanceof HTMLInputElement) {\n\t\t\treturn this.submitButton.value;\n\t\t} else {\n\t\t\treturn this.submitButton.textContent;\n\t\t}\n\t}\n\n\tsetSubmitText(value) {\n\t\tif (this.submitButton instanceof HTMLInputElement) {\n\t\t\tthis.submitButton.value = value;\n\t\t} else {\n\t\t\tthis.submitButton.textContent = value;\n\t\t}\n\t}\n\n\tget elements() {\n\t\treturn Array.from(this.form.elements);\n\t}\n}\n\nAsyncForm.refs = {};\n\nwindow.AsyncForm = AsyncForm;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tArray.from(document.querySelectorAll(\"[c-async-form]\")).forEach((el) => new AsyncForm(el));\n});\n","import { AsyncForm } from \"./async_form.js\";\n\nif (document.querySelector(\"[c-fileupload]\")) {\n\timport(\"./fileupload.js\");\n}\n\nexport { AsyncForm };\n"],"names":["AsyncForm","el","fn","event","prev","handler","payload","url","options","err","inputElements","input","name","value","inputHandler","state"],"mappings":"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"}
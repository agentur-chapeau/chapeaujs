{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-9cefd4e946f80d6e.js","src/index.js","src/async_form.js","src/on_ready.js","src/fileupload.js"],"sourcesContent":["module.exports = (__parcel__import__(\"./\" + \"filepond.63b8299b.js\")).then(() => parcelRequire('3ggSV'));","import { AsyncForm } from \"./async_form.js\";\nimport { FileUpload } from \"./fileupload.js\";\n\nconst Chapeau = {\n  AsyncForm,\n  FileUpload,\n};\n\nwindow.Chapeau = Chapeau;\n\nexport default Chapeau;\n","import { onReady } from \"./on_ready.js\";\nimport * as _ from \"lodash-es\";\n\nexport class AsyncForm {\n  constructor(el) {\n    if (el.dataset.refAsyncForm) {\n      return AsyncForm.refs[el.dataset.refAsyncForm];\n    }\n\n    this.ref = Math.random();\n    AsyncForm.refs[this.ref] = this;\n    el.dataset.refAsyncForm = this.ref;\n\n    this.el = el;\n\n    this.form = el.querySelector(\"form\");\n    this.formSuccess = el.querySelector(\".w-form-done\");\n    this.formFail = el.querySelector(\".w-form-fail\");\n\n    this.submitButton = el.querySelector('[type=\"submit\"]');\n    this.buttonText = this.getSubmitText();\n    this.waitingText = this.submitButton.dataset.wait;\n\n    /** @type {BeforeSubmitHandler[]} */\n    this.beforeSubmitHandlers = [];\n    /** @type {PayloadHandler[]} */\n    this.payloadHandlers = [];\n    /** @type {InputHandler[]} */\n    this.inputHandlers = [];\n    /** @type {StateHandler[]} */\n    this.onStateHandlers = [];\n\n    this.el.addEventListener(\"submit\", (e) => this.submit(e));\n  }\n\n  /**\n   * @callback BeforeSubmitHandler\n   * @returns {bool} if false then the form is not submitted\n   */\n\n  /**\n   * Gets called before the form starts to submit\n   * Allows to cancel the submit by returning false\n   * @param {BeforeSubmitHandler} fn\n   */\n  set onBeforeSubmit(fn) {\n    this.beforeSubmitHandlers.push(fn);\n  }\n\n  /**\n   * @callback PayloadHandler\n   * @param {Object} payload The current payload\n   * @returns {Object} The new payload\n   */\n\n  /**\n   * Allows for adding custom value to the payload\n   * Gets called before form elements are converted\n   * All handlers will be called in the order they were registered\n   * @param {PayloadHandler} fn\n   */\n  set onPayload(fn) {\n    this.payloadHandlers.push(fn);\n  }\n\n  /**\n   * @callback InputHandler\n   * @param {HTMLElement} input The input element\n   * @param {String} value The current value\n   * @returns {String | Promise<String>} The new value\n   */\n\n  /**\n   * Allows for transforming the values of the form elements\n   * All handlers will be called in the order they were registered\n   * Can be async\n   * @param {InputHandler} fn\n   */\n  set onInput(fn) {\n    this.inputHandlers.push(fn);\n  }\n\n  /**\n   * @callback StateHandler\n   * @param {'loading' | 'success' | 'error'} state\n   */\n\n  /**\n   * Gets called when the forms state changes\n   * @param {StateHandler} fn\n   */\n  set onState(fn) {\n    this.onStateHandlers.push(fn);\n  }\n\n  async submit(event) {\n    event.preventDefault();\n\n    try {\n      const shouldSubmit = this.beforeSubmitHandlers.reduce(\n        (prev, handler) => handler() && prev,\n        true,\n      );\n      if (!shouldSubmit) return;\n\n      this.setState(\"loading\");\n\n      const payload = await this.createPayload();\n      const url = this.form.action;\n      const method = this.form.method;\n\n      const options = {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      };\n\n      const response = await fetch(url, options);\n\n      if (response.ok) {\n        this.setState(\"success\");\n      } else {\n        this.setState(\"error\");\n      }\n    } catch (err) {\n      console.error(err);\n      this.setState(\"error\");\n    }\n  }\n\n  async createPayload() {\n    let payload = this.payloadHandlers.reduce(\n      (payload, handler) => handler(payload),\n      {},\n    );\n\n    const inputElements = this.elements.filter((el) => el.name !== \"\");\n    for (const input of inputElements) {\n      const name = input.name;\n      let value = input.value;\n\n      if (input.type === \"checkbox\") {\n        value = input.checked;\n      }\n\n      if (input.type === \"radio\" && !input.checked) {\n        value = null;\n      }\n\n      for (const inputHandler of this.inputHandlers) {\n        value = await inputHandler(input, value);\n      }\n\n      if (value === null) {\n        continue;\n      }\n\n      const group = input.dataset.group;\n      const path = [group, name].filter((item) => item); // Remove group if undefined\n\n      const existingValue = _.get(payload, path);\n      if (typeof existingValue !== \"undefined\") {\n        value = [existingValue, value].flat();\n      }\n\n      _.set(payload, path, value);\n    }\n\n    return payload;\n  }\n\n  /**\n   * @param {'loading' | 'success' | 'error'} state\n   */\n  setState(state) {\n    switch (state) {\n      case \"loading\":\n        this.form.style.display = null;\n        this.formSuccess.style.display = null;\n        this.formFail.style.display = null;\n        this.elements.forEach((el) => (el.disabled = true));\n        this.setSubmitText(this.waitingText);\n        break;\n      case \"success\":\n        this.form.style.display = \"none\";\n        this.formSuccess.style.display = \"block\";\n        this.formFail.style.display = \"none\";\n        this.elements.forEach((el) => (el.disabled = false));\n        this.setSubmitText(this.buttonText);\n\n        this.form.reset();\n        this.formSuccess.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\",\n        });\n        break;\n      case \"error\":\n        this.form.style.display = null;\n        this.formSuccess.style.display = null;\n        this.formFail.style.display = \"block\";\n        this.elements.forEach((el) => (el.disabled = false));\n        this.setSubmitText(this.buttonText);\n        break;\n      default:\n        break;\n    }\n\n    this.onStateHandlers.forEach((handler) => handler(state));\n  }\n\n  getSubmitText() {\n    if (this.submitButton instanceof HTMLInputElement) {\n      return this.submitButton.value;\n    } else {\n      return this.submitButton.textContent;\n    }\n  }\n\n  setSubmitText(value) {\n    if (this.submitButton instanceof HTMLInputElement) {\n      this.submitButton.value = value;\n    } else {\n      this.submitButton.textContent = value;\n    }\n  }\n\n  get elements() {\n    return Array.from(this.form.elements);\n  }\n}\n\nAsyncForm.refs = {};\n\nwindow.AsyncForm = AsyncForm;\n\nonReady(() => {\n  Array.from(document.querySelectorAll(\"[c-async-form]\")).forEach(\n    (el) => new AsyncForm(el),\n  );\n});\n","export function onReady(callback) {\n\tif (document.readyState === \"loading\") {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", callback);\n\t} else {\n\t\tcallback();\n\t}\n}\n","import \"../styles/fileupload.css\";\n\nimport { AsyncForm } from \"./async_form.js\";\nimport { onReady } from \"./on_ready.js\";\n\nexport class FileUpload {\n  constructor(el) {\n    if (el.dataset.refFileUpload) {\n      return FileUpload.refs[el.dataset.refFileUpload];\n    }\n\n    this.ref = Math.random();\n    FileUpload.refs[this.ref] = this;\n    el.dataset.refFileUpload = this.ref;\n\n    this.inputs = el.querySelectorAll('input[type=\"file\"]');\n\n    this.fileponds = {};\n    this.headers = {\n      Authorization: \"pFdRC99ihTG!C%BQB6EJKjc!n%\",\n    };\n\n    document.addEventListener(\"FilePond:loaded\", () => this.onload());\n    const asyncForm = new AsyncForm(el.closest(\"[c-async-form]\"));\n    asyncForm.onBeforeSubmit = () => this.beforeSubmit();\n    asyncForm.onPayload = (payload) => this.onPayload(payload);\n    asyncForm.onInput = async (input, value) =>\n      await this.inputHandler(input, value);\n\n    import(\"./filepond.js\").then((module) => {\n      Object.assign(globalThis, module);\n    });\n  }\n\n  onload() {\n    FilePond.registerPlugin(FilePondPluginFileValidateType);\n    FilePond.registerPlugin(FilePondPluginFileValidateSize);\n\n    const options = {\n      server: {\n        url: \"https://formupload.agentur-chapeau.de/\",\n        process: {\n          url: \"process\",\n          headers: this.headers,\n        },\n        revert: {\n          url: \"revert\",\n          headers: this.headers,\n        },\n        restore: null,\n        load: null,\n        fetch: null,\n      },\n      credits: false,\n      ...defaultLabels,\n      ...window.c_fileupload_options,\n    };\n\n    for (const input of this.inputs) {\n      this.fileponds[input.name] = FilePond.create(input, {\n        ...options,\n        maxFiles: input.dataset.maxFiles || null,\n        maxFileSize: input.dataset.maxFileSize || null,\n        maxTotalFileSize: input.dataset.maxTotalFileSize || null,\n      });\n    }\n  }\n\n  beforeSubmit() {\n    for (const [_, filepond] of Object.entries(this.fileponds)) {\n      if (\n        !(\n          filepond.status == FilePond.Status.EMPTY ||\n          filepond.status == FilePond.Status.READY\n        )\n      ) {\n        alert(\"Es sind noch nicht alle Dateien hochgeladen!\");\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  onPayload(payload) {\n    for (const input of this.inputs) {\n      if (input.multiple) {\n        payload[input.name] = [];\n      }\n    }\n\n    return payload;\n  }\n\n  async inputHandler(input, value) {\n    if (!input.closest(\".filepond--root\")) {\n      return value;\n    }\n\n    if (!input.closest(\".filepond--data\")) {\n      return null;\n    }\n\n    const filepond = this.fileponds[input.name];\n    const fileObject = filepond.getFiles().find((f) => f.serverId === value);\n\n    const res = await fetch(`${filepond.server.url}finish`, {\n      method: \"POST\",\n      body: value,\n      headers: this.headers,\n    });\n\n    if (!res.ok) {\n      throw new Error(\"Upload could not finish \", res);\n    }\n\n    const fileUrl = await res.text();\n    const fileName = fileObject.filename;\n    const fileSize = fileObject.fileSize;\n\n    return {\n      url: fileUrl,\n      name: fileName,\n      size: fileSize,\n    };\n  }\n}\n\nFileUpload.refs = {};\n\nwindow.FileUpload = FileUpload;\n\nonReady(() => {\n  Array.from(document.querySelectorAll(\"[c-file-upload]\")).forEach(\n    (el) => new FileUpload(el),\n  );\n});\n\nconst defaultLabels = {\n  labelIdle: `Dateien hierher ziehen oder <span class=\"filepond--label-action\">auswählen</span>`,\n  labelInvalidField: \"Feld enthält ungültige Dateien\",\n  labelFileWaitingForSize: \"Auf Größe warten\",\n  labelFileSizeNotAvailable: \"Größe nicht verfügbar\",\n  labelFileLoading: \"Laden\",\n  labelFileLoadError: \"Fehler beim Laden\",\n  labelFileProcessing: \"Hochladen\",\n  labelFileProcessingComplete: \"Hochgeladen\",\n  labelFileProcessingAborted: \"Hochladen abgebrochen\",\n  labelFileProcessingError: \"Fehler beim Hochladen\",\n  labelFileProcessingRevertError: \"Fehler beim Entfernen\",\n  labelFileRemoveError: \"Fehler beim Löschen\",\n  labelTapToCancel: \"Tippen zum Abbrechen \",\n  labelTapToRetry: \"Tippen zum Wiederholen\",\n  labelTapToUndo: \"Tippen zum Entfernen\",\n  labelButtonRemoveItem: \"Entfernen\",\n  labelButtonAbortItemLoad: \"Abbrechen\",\n  labelButtonRetryItemLoad: \"Wiederholen\",\n  labelButtonAbortItemProcessing: \"Abbrechen\",\n  labelButtonUndoItemProcessing: \"Entfernen\",\n  labelButtonRetryItemProcessing: \"Wiederholen\",\n  labelButtonProcessItem: \"Hochladen\",\n  labelMaxFileSizeExceeded: \"Datei ist zu groß\",\n  labelMaxFileSize: \"Maximale Dateigröße beträgt {filesize}\",\n  labelMaxTotalFileSizeExceeded: \"Maximale Gesamtgröße überschritten\",\n  labelMaxTotalFileSize: \"Maximale Gesamtgröße beträgt {filesize}\",\n  labelFileTypeNotAllowed: \"Ungültiger Dateityp\",\n  fileValidateTypeLabelExpectedTypes:\n    \"Gültige Dateitypen: {allButLastType} und {lastType}\",\n  fileValidateTypeLabelExpectedTypesMap: {\n    \"image/*\": \"Bilddateien\",\n    \"image/png\": \".png\",\n    \"image/jpg\": \".jpg\",\n    \"image/jpeg\": \".jpeg\",\n    \"application/pdf\": \".pdf\",\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n      \".docx\",\n  },\n};\n"],"names":[],"version":3,"file":"chapeau.esm.js.map"}
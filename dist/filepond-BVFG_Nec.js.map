{"version":3,"file":"filepond-BVFG_Nec.js","sources":["../node_modules/filepond/dist/filepond.esm.js","../node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.esm.js","../node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.esm.js","../src/filepond.js"],"sourcesContent":["/*!\n * FilePond 4.30.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isNode = value => value instanceof HTMLElement;\n\nconst createStore = (initialState, queries = [], actions = []) => {\n    // internal state\n    const state = {\n        ...initialState,\n    };\n\n    // contains all actions for next frame, is clear when actions are requested\n    const actionQueue = [];\n    const dispatchQueue = [];\n\n    // returns a duplicate of the current state\n    const getState = () => ({ ...state });\n\n    // returns a duplicate of the actions array and clears the actions array\n    const processActionQueue = () => {\n        // create copy of actions queue\n        const queue = [...actionQueue];\n\n        // clear actions queue (we don't want no double actions)\n        actionQueue.length = 0;\n\n        return queue;\n    };\n\n    // processes actions that might block the main UI thread\n    const processDispatchQueue = () => {\n        // create copy of actions queue\n        const queue = [...dispatchQueue];\n\n        // clear actions queue (we don't want no double actions)\n        dispatchQueue.length = 0;\n\n        // now dispatch these actions\n        queue.forEach(({ type, data }) => {\n            dispatch(type, data);\n        });\n    };\n\n    // adds a new action, calls its handler and\n    const dispatch = (type, data, isBlocking) => {\n        // is blocking action (should never block if document is hidden)\n        if (isBlocking && !document.hidden) {\n            dispatchQueue.push({ type, data });\n            return;\n        }\n\n        // if this action has a handler, handle the action\n        if (actionHandlers[type]) {\n            actionHandlers[type](data);\n        }\n\n        // now add action\n        actionQueue.push({\n            type,\n            data,\n        });\n    };\n\n    const query = (str, ...args) => (queryHandles[str] ? queryHandles[str](...args) : null);\n\n    const api = {\n        getState,\n        processActionQueue,\n        processDispatchQueue,\n        dispatch,\n        query,\n    };\n\n    let queryHandles = {};\n    queries.forEach(query => {\n        queryHandles = {\n            ...query(state),\n            ...queryHandles,\n        };\n    });\n\n    let actionHandlers = {};\n    actions.forEach(action => {\n        actionHandlers = {\n            ...action(dispatch, query, state),\n            ...actionHandlers,\n        };\n    });\n\n    return api;\n};\n\nconst defineProperty = (obj, property, definition) => {\n    if (typeof definition === 'function') {\n        obj[property] = definition;\n        return;\n    }\n    Object.defineProperty(obj, property, { ...definition });\n};\n\nconst forin = (obj, cb) => {\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n\n        cb(key, obj[key]);\n    }\n};\n\nconst createObject = definition => {\n    const obj = {};\n    forin(definition, property => {\n        defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n};\n\nconst attr = (node, name, value = null) => {\n    if (value === null) {\n        return node.getAttribute(name) || node.hasAttribute(name);\n    }\n    node.setAttribute(name, value);\n};\n\nconst ns = 'http://www.w3.org/2000/svg';\nconst svgElements = ['svg', 'path']; // only svg elements used\n\nconst isSVGElement = tag => svgElements.includes(tag);\n\nconst createElement = (tag, className, attributes = {}) => {\n    if (typeof className === 'object') {\n        attributes = className;\n        className = null;\n    }\n    const element = isSVGElement(tag)\n        ? document.createElementNS(ns, tag)\n        : document.createElement(tag);\n    if (className) {\n        if (isSVGElement(tag)) {\n            attr(element, 'class', className);\n        } else {\n            element.className = className;\n        }\n    }\n    forin(attributes, (name, value) => {\n        attr(element, name, value);\n    });\n    return element;\n};\n\nconst appendChild = parent => (child, index) => {\n    if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n    } else {\n        parent.appendChild(child);\n    }\n};\n\nconst appendChildView = (parent, childViews) => (view, index) => {\n    if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n    } else {\n        childViews.push(view);\n    }\n\n    return view;\n};\n\nconst removeChildView = (parent, childViews) => view => {\n    // remove from child views\n    childViews.splice(childViews.indexOf(view), 1);\n\n    // remove the element\n    if (view.element.parentNode) {\n        parent.removeChild(view.element);\n    }\n\n    return view;\n};\n\nconst IS_BROWSER = (() =>\n    typeof window !== 'undefined' && typeof window.document !== 'undefined')();\nconst isBrowser = () => IS_BROWSER;\n\nconst testElement = isBrowser() ? createElement('svg') : {};\nconst getChildCount =\n    'children' in testElement ? el => el.children.length : el => el.childNodes.length;\n\nconst getViewRect = (elementRect, childViews, offset, scale) => {\n    const left = offset[0] || elementRect.left;\n    const top = offset[1] || elementRect.top;\n    const right = left + elementRect.width;\n    const bottom = top + elementRect.height * (scale[1] || 1);\n\n    const rect = {\n        // the rectangle of the element itself\n        element: {\n            ...elementRect,\n        },\n\n        // the rectangle of the element expanded to contain its children, does not include any margins\n        inner: {\n            left: elementRect.left,\n            top: elementRect.top,\n            right: elementRect.right,\n            bottom: elementRect.bottom,\n        },\n\n        // the rectangle of the element expanded to contain its children including own margin and child margins\n        // margins will be added after we've recalculated the size\n        outer: {\n            left,\n            top,\n            right,\n            bottom,\n        },\n    };\n\n    // expand rect to fit all child rectangles\n    childViews\n        .filter(childView => !childView.isRectIgnored())\n        .map(childView => childView.rect)\n        .forEach(childViewRect => {\n            expandRect(rect.inner, { ...childViewRect.inner });\n            expandRect(rect.outer, { ...childViewRect.outer });\n        });\n\n    // calculate inner width and height\n    calculateRectSize(rect.inner);\n\n    // append additional margin (top and left margins are included in top and left automatically)\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight;\n\n    // calculate outer width and height\n    calculateRectSize(rect.outer);\n\n    return rect;\n};\n\nconst expandRect = (parent, child) => {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n        parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n        parent.right = child.right;\n    }\n};\n\nconst calculateRectSize = rect => {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n};\n\nconst isNumber = value => typeof value === 'number';\n\n/**\n * Determines if position is at destination\n * @param position\n * @param destination\n * @param velocity\n * @param errorMargin\n * @returns {boolean}\n */\nconst thereYet = (position, destination, velocity, errorMargin = 0.001) => {\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n};\n\n/**\n * Spring animation\n */\nconst spring =\n    // default options\n    ({ stiffness = 0.5, damping = 0.75, mass = 10 } = {}) =>\n        // method definition\n        {\n            let target = null;\n            let position = null;\n            let velocity = 0;\n            let resting = false;\n\n            // updates spring state\n            const interpolate = (ts, skipToEndState) => {\n                // in rest, don't animate\n                if (resting) return;\n\n                // need at least a target or position to do springy things\n                if (!(isNumber(target) && isNumber(position))) {\n                    resting = true;\n                    velocity = 0;\n                    return;\n                }\n\n                // calculate spring force\n                const f = -(position - target) * stiffness;\n\n                // update velocity by adding force based on mass\n                velocity += f / mass;\n\n                // update position by adding velocity\n                position += velocity;\n\n                // slow down based on amount of damping\n                velocity *= damping;\n\n                // we've arrived if we're near target and our velocity is near zero\n                if (thereYet(position, target, velocity) || skipToEndState) {\n                    position = target;\n                    velocity = 0;\n                    resting = true;\n\n                    // we done\n                    api.onupdate(position);\n                    api.oncomplete(position);\n                } else {\n                    // progress update\n                    api.onupdate(position);\n                }\n            };\n\n            /**\n             * Set new target value\n             * @param value\n             */\n            const setTarget = value => {\n                // if currently has no position, set target and position to this value\n                if (isNumber(value) && !isNumber(position)) {\n                    position = value;\n                }\n\n                // next target value will not be animated to\n                if (target === null) {\n                    target = value;\n                    position = value;\n                }\n\n                // let start moving to target\n                target = value;\n\n                // already at target\n                if (position === target || typeof target === 'undefined') {\n                    // now resting as target is current position, stop moving\n                    resting = true;\n                    velocity = 0;\n\n                    // done!\n                    api.onupdate(position);\n                    api.oncomplete(position);\n\n                    return;\n                }\n\n                resting = false;\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    set: setTarget,\n                    get: () => target,\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst easeLinear = t => t;\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\nconst tween =\n    // default values\n    ({ duration = 500, easing = easeInOutQuad, delay = 0 } = {}) =>\n        // method definition\n        {\n            let start = null;\n            let t;\n            let p;\n            let resting = true;\n            let reverse = false;\n            let target = null;\n\n            const interpolate = (ts, skipToEndState) => {\n                if (resting || target === null) return;\n\n                if (start === null) {\n                    start = ts;\n                }\n\n                if (ts - start < delay) return;\n\n                t = ts - start - delay;\n\n                if (t >= duration || skipToEndState) {\n                    t = 1;\n                    p = reverse ? 0 : 1;\n                    api.onupdate(p * target);\n                    api.oncomplete(p * target);\n                    resting = true;\n                } else {\n                    p = t / duration;\n                    api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n                }\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    get: () => (reverse ? 0 : target),\n                    set: value => {\n                        // is initial value\n                        if (target === null) {\n                            target = value;\n                            api.onupdate(value);\n                            api.oncomplete(value);\n                            return;\n                        }\n\n                        // want to tween to a smaller value and have a current value\n                        if (value < target) {\n                            target = 1;\n                            reverse = true;\n                        } else {\n                            // not tweening to a smaller value\n                            reverse = false;\n                            target = value;\n                        }\n\n                        // let's go!\n                        resting = false;\n                        start = null;\n                    },\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst animator = {\n    spring,\n    tween,\n};\n\n/*\n { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n { translation: { type: 'spring', ... }, ... }\n { translation: { x: { type: 'spring', ... } } }\n*/\nconst createAnimator = (definition, category, property) => {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    const def =\n        definition[category] && typeof definition[category][property] === 'object'\n            ? definition[category][property]\n            : definition[category] || definition;\n\n    const type = typeof def === 'string' ? def : def.type;\n    const props = typeof def === 'object' ? { ...def } : {};\n\n    return animator[type] ? animator[type](props) : null;\n};\n\nconst addGetSet = (keys, obj, props, overwrite = false) => {\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(o => {\n        keys.forEach(key => {\n            let name = key;\n            let getter = () => props[key];\n            let setter = value => (props[key] = value);\n\n            if (typeof key === 'object') {\n                name = key.key;\n                getter = key.getter || getter;\n                setter = key.setter || setter;\n            }\n\n            if (o[name] && !overwrite) {\n                return;\n            }\n\n            o[name] = {\n                get: getter,\n                set: setter,\n            };\n        });\n    });\n};\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// setup animators\n\nconst animations = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI }) => {\n    // initial properties\n    const initialProps = { ...viewProps };\n\n    // list of all active animations\n    const animations = [];\n\n    // setup animators\n    forin(mixinConfig, (property, animation) => {\n        const animator = createAnimator(animation);\n        if (!animator) {\n            return;\n        }\n\n        // when the animator updates, update the view state value\n        animator.onupdate = value => {\n            viewProps[property] = value;\n        };\n\n        // set animator target\n        animator.target = initialProps[property];\n\n        // when value is set, set the animator target value\n        const prop = {\n            key: property,\n            setter: value => {\n                // if already at target, we done!\n                if (animator.target === value) {\n                    return;\n                }\n\n                animator.target = value;\n            },\n            getter: () => viewProps[property],\n        };\n\n        // add getters and setters\n        addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);\n\n        // add it to the list for easy updating from the _write method\n        animations.push(animator);\n    });\n\n    // expose internal write api\n    return {\n        write: ts => {\n            let skipToEndState = document.hidden;\n            let resting = true;\n            animations.forEach(animation => {\n                if (!animation.resting) resting = false;\n                animation.interpolate(ts, skipToEndState);\n            });\n            return resting;\n        },\n        destroy: () => {},\n    };\n};\n\nconst addEvent = element => (type, fn) => {\n    element.addEventListener(type, fn);\n};\n\nconst removeEvent = element => (type, fn) => {\n    element.removeEventListener(type, fn);\n};\n\n// mixin\nconst listeners = ({\n    mixinConfig,\n    viewProps,\n    viewInternalAPI,\n    viewExternalAPI,\n    viewState,\n    view,\n}) => {\n    const events = [];\n\n    const add = addEvent(view.element);\n    const remove = removeEvent(view.element);\n\n    viewExternalAPI.on = (type, fn) => {\n        events.push({\n            type,\n            fn,\n        });\n        add(type, fn);\n    };\n\n    viewExternalAPI.off = (type, fn) => {\n        events.splice(events.findIndex(event => event.type === type && event.fn === fn), 1);\n        remove(type, fn);\n    };\n\n    return {\n        write: () => {\n            // not busy\n            return true;\n        },\n        destroy: () => {\n            events.forEach(event => {\n                remove(event.type, event.fn);\n            });\n        },\n    };\n};\n\n// add to external api and link to props\n\nconst apis = ({ mixinConfig, viewProps, viewExternalAPI }) => {\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n};\n\nconst isDefined = value => value != null;\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// set initial state based on props in viewProps\n// apply as transforms each frame\n\nconst defaults = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0,\n};\n\nconst styles = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI, view }) => {\n    // initial props\n    const initialProps = { ...viewProps };\n\n    // current props\n    const currentProps = {};\n\n    // we will add those properties to the external API and link them to the viewState\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);\n\n    // override rect on internal and external rect getter so it takes in account transforms\n    const getOffset = () => [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    const getScale = () => [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    const getRect = () =>\n        view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    viewInternalAPI.rect = { get: getRect };\n    viewExternalAPI.rect = { get: getRect };\n\n    // apply view props\n    mixinConfig.forEach(key => {\n        viewProps[key] =\n            typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n    });\n\n    // expose api\n    return {\n        write: () => {\n            // see if props have changed\n            if (!propsHaveChanged(currentProps, viewProps)) {\n                return;\n            }\n\n            // moves element to correct position on screen\n            applyStyles(view.element, viewProps);\n\n            // store new transforms\n            Object.assign(currentProps, { ...viewProps });\n\n            // no longer busy\n            return true;\n        },\n        destroy: () => {},\n    };\n};\n\nconst propsHaveChanged = (currentProps, newProps) => {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n        return true;\n    }\n\n    // lets analyze the individual props\n    for (const prop in newProps) {\n        if (newProps[prop] !== currentProps[prop]) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nconst applyStyles = (\n    element,\n    {\n        opacity,\n        perspective,\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        rotateX,\n        rotateY,\n        rotateZ,\n        originX,\n        originY,\n        width,\n        height,\n    }\n) => {\n    let transforms = '';\n    let styles = '';\n\n    // handle transform origin\n    if (isDefined(originX) || isDefined(originY)) {\n        styles += `transform-origin: ${originX || 0}px ${originY || 0}px;`;\n    }\n\n    // transform order is relevant\n    // 0. perspective\n    if (isDefined(perspective)) {\n        transforms += `perspective(${perspective}px) `;\n    }\n\n    // 1. translate\n    if (isDefined(translateX) || isDefined(translateY)) {\n        transforms += `translate3d(${translateX || 0}px, ${translateY || 0}px, 0) `;\n    }\n\n    // 2. scale\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n        transforms += `scale3d(${isDefined(scaleX) ? scaleX : 1}, ${\n            isDefined(scaleY) ? scaleY : 1\n        }, 1) `;\n    }\n\n    // 3. rotate\n    if (isDefined(rotateZ)) {\n        transforms += `rotateZ(${rotateZ}rad) `;\n    }\n\n    if (isDefined(rotateX)) {\n        transforms += `rotateX(${rotateX}rad) `;\n    }\n\n    if (isDefined(rotateY)) {\n        transforms += `rotateY(${rotateY}rad) `;\n    }\n\n    // add transforms\n    if (transforms.length) {\n        styles += `transform:${transforms};`;\n    }\n\n    // add opacity\n    if (isDefined(opacity)) {\n        styles += `opacity:${opacity};`;\n\n        // if we reach zero, we make the element inaccessible\n        if (opacity === 0) {\n            styles += `visibility:hidden;`;\n        }\n\n        // if we're below 100% opacity this element can't be clicked\n        if (opacity < 1) {\n            styles += `pointer-events:none;`;\n        }\n    }\n\n    // add height\n    if (isDefined(height)) {\n        styles += `height:${height}px;`;\n    }\n\n    // add width\n    if (isDefined(width)) {\n        styles += `width:${width}px;`;\n    }\n\n    // apply styles\n    const elementCurrentStyle = element.elementCurrentStyle || '';\n\n    // if new styles does not match current styles, lets update!\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n        element.style.cssText = styles;\n        // store current styles so we can compare them to new styles later on\n        // _not_ getting the style value is faster\n        element.elementCurrentStyle = styles;\n    }\n};\n\nconst Mixins = {\n    styles,\n    listeners,\n    animations,\n    apis,\n};\n\nconst updateRect = (rect = {}, element = {}, style = {}) => {\n    if (!element.layoutCalculated) {\n        rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n        rect.marginTop = parseInt(style.marginTop, 10) || 0;\n        rect.marginRight = parseInt(style.marginRight, 10) || 0;\n        rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n        rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n        element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n\n    rect.scrollTop = element.scrollTop;\n\n    rect.hidden = element.offsetParent === null;\n\n    return rect;\n};\n\nconst createView =\n    // default view definition\n    ({\n        // element definition\n        tag = 'div',\n        name = null,\n        attributes = {},\n\n        // view interaction\n        read = () => {},\n        write = () => {},\n        create = () => {},\n        destroy = () => {},\n\n        // hooks\n        filterFrameActionsForChild = (child, actions) => actions,\n        didCreateView = () => {},\n        didWriteView = () => {},\n\n        // rect related\n        ignoreRect = false,\n        ignoreRectUpdate = false,\n\n        // mixins\n        mixins = [],\n    } = {}) => (\n        // each view requires reference to store\n        store,\n        // specific properties for this view\n        props = {}\n    ) => {\n        // root element should not be changed\n        const element = createElement(tag, `filepond--${name}`, attributes);\n\n        // style reference should also not be changed\n        const style = window.getComputedStyle(element, null);\n\n        // element rectangle\n        const rect = updateRect();\n        let frameRect = null;\n\n        // rest state\n        let isResting = false;\n\n        // pretty self explanatory\n        const childViews = [];\n\n        // loaded mixins\n        const activeMixins = [];\n\n        // references to created children\n        const ref = {};\n\n        // state used for each instance\n        const state = {};\n\n        // list of writers that will be called to update this view\n        const writers = [\n            write, // default writer\n        ];\n\n        const readers = [\n            read, // default reader\n        ];\n\n        const destroyers = [\n            destroy, // default destroy\n        ];\n\n        // core view methods\n        const getElement = () => element;\n        const getChildViews = () => childViews.concat();\n        const getReference = () => ref;\n        const createChildView = store => (view, props) => view(store, props);\n        const getRect = () => {\n            if (frameRect) {\n                return frameRect;\n            }\n            frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n            return frameRect;\n        };\n        const getStyle = () => style;\n\n        /**\n         * Read data from DOM\n         * @private\n         */\n        const _read = () => {\n            frameRect = null;\n\n            // read child views\n            childViews.forEach(child => child._read());\n\n            const shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n            if (shouldUpdate) {\n                updateRect(rect, element, style);\n            }\n\n            // readers\n            const api = { root: internalAPI, props, rect };\n            readers.forEach(reader => reader(api));\n        };\n\n        /**\n         * Write data to DOM\n         * @private\n         */\n        const _write = (ts, frameActions, shouldOptimize) => {\n            // if no actions, we assume that the view is resting\n            let resting = frameActions.length === 0;\n\n            // writers\n            writers.forEach(writer => {\n                const writerResting = writer({\n                    props,\n                    root: internalAPI,\n                    actions: frameActions,\n                    timestamp: ts,\n                    shouldOptimize,\n                });\n                if (writerResting === false) {\n                    resting = false;\n                }\n            });\n\n            // run mixins\n            activeMixins.forEach(mixin => {\n                // if one of the mixins is still busy after write operation, we are not resting\n                const mixinResting = mixin.write(ts);\n                if (mixinResting === false) {\n                    resting = false;\n                }\n            });\n\n            // updates child views that are currently attached to the DOM\n            childViews\n                .filter(child => !!child.element.parentNode)\n                .forEach(child => {\n                    // if a child view is not resting, we are not resting\n                    const childResting = child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n                    if (!childResting) {\n                        resting = false;\n                    }\n                });\n\n            // append new elements to DOM and update those\n            childViews\n                //.filter(child => !child.element.parentNode)\n                .forEach((child, index) => {\n                    // skip\n                    if (child.element.parentNode) {\n                        return;\n                    }\n\n                    // append to DOM\n                    internalAPI.appendChild(child.element, index);\n\n                    // call read (need to know the size of these elements)\n                    child._read();\n\n                    // re-call write\n                    child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n\n                    // we just added somthing to the dom, no rest\n                    resting = false;\n                });\n\n            // update resting state\n            isResting = resting;\n\n            didWriteView({\n                props,\n                root: internalAPI,\n                actions: frameActions,\n                timestamp: ts,\n            });\n\n            // let parent know if we are resting\n            return resting;\n        };\n\n        const _destroy = () => {\n            activeMixins.forEach(mixin => mixin.destroy());\n            destroyers.forEach(destroyer => {\n                destroyer({ root: internalAPI, props });\n            });\n            childViews.forEach(child => child._destroy());\n        };\n\n        // sharedAPI\n        const sharedAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            style: {\n                get: getStyle,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n        };\n\n        // private API definition\n        const internalAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: getRect,\n            },\n\n            // access to custom children references\n            ref: {\n                get: getReference,\n            },\n\n            // dom modifiers\n            is: needle => name === needle,\n            appendChild: appendChild(element),\n            createChildView: createChildView(store),\n            linkView: view => {\n                childViews.push(view);\n                return view;\n            },\n            unlinkView: view => {\n                childViews.splice(childViews.indexOf(view), 1);\n            },\n            appendChildView: appendChildView(element, childViews),\n            removeChildView: removeChildView(element, childViews),\n            registerWriter: writer => writers.push(writer),\n            registerReader: reader => readers.push(reader),\n            registerDestroyer: destroyer => destroyers.push(destroyer),\n            invalidateLayout: () => (element.layoutCalculated = false),\n\n            // access to data store\n            dispatch: store.dispatch,\n            query: store.query,\n        };\n\n        // public view API methods\n        const externalAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n            rect: {\n                get: getRect,\n            },\n            resting: {\n                get: () => isResting,\n            },\n            isRectIgnored: () => ignoreRect,\n            _read,\n            _write,\n            _destroy,\n        };\n\n        // mixin API methods\n        const mixinAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: () => rect,\n            },\n        };\n\n        // add mixin functionality\n        Object.keys(mixins)\n            .sort((a, b) => {\n                // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n                if (a === 'styles') {\n                    return 1;\n                } else if (b === 'styles') {\n                    return -1;\n                }\n                return 0;\n            })\n            .forEach(key => {\n                const mixinAPI = Mixins[key]({\n                    mixinConfig: mixins[key],\n                    viewProps: props,\n                    viewState: state,\n                    viewInternalAPI: internalAPIDefinition,\n                    viewExternalAPI: externalAPIDefinition,\n                    view: createObject(mixinAPIDefinition),\n                });\n\n                if (mixinAPI) {\n                    activeMixins.push(mixinAPI);\n                }\n            });\n\n        // construct private api\n        const internalAPI = createObject(internalAPIDefinition);\n\n        // create the view\n        create({\n            root: internalAPI,\n            props,\n        });\n\n        // append created child views to root node\n        const childCount = getChildCount(element); // need to know the current child count so appending happens in correct order\n        childViews.forEach((child, index) => {\n            internalAPI.appendChild(child.element, childCount + index);\n        });\n\n        // call did create\n        didCreateView(internalAPI);\n\n        // expose public api\n        return createObject(externalAPIDefinition);\n    };\n\nconst createPainter = (read, write, fps = 60) => {\n    const name = '__framePainter';\n\n    // set global painter\n    if (window[name]) {\n        window[name].readers.push(read);\n        window[name].writers.push(write);\n        return;\n    }\n\n    window[name] = {\n        readers: [read],\n        writers: [write],\n    };\n\n    const painter = window[name];\n\n    const interval = 1000 / fps;\n    let last = null;\n    let id = null;\n    let requestTick = null;\n    let cancelTick = null;\n\n    const setTimerType = () => {\n        if (document.hidden) {\n            requestTick = () => window.setTimeout(() => tick(performance.now()), interval);\n            cancelTick = () => window.clearTimeout(id);\n        } else {\n            requestTick = () => window.requestAnimationFrame(tick);\n            cancelTick = () => window.cancelAnimationFrame(id);\n        }\n    };\n\n    document.addEventListener('visibilitychange', () => {\n        if (cancelTick) cancelTick();\n        setTimerType();\n        tick(performance.now());\n    });\n\n    const tick = ts => {\n        // queue next tick\n        id = requestTick(tick);\n\n        // limit fps\n        if (!last) {\n            last = ts;\n        }\n\n        const delta = ts - last;\n\n        if (delta <= interval) {\n            // skip frame\n            return;\n        }\n\n        // align next frame\n        last = ts - (delta % interval);\n\n        // update view\n        painter.readers.forEach(read => read());\n        painter.writers.forEach(write => write(ts));\n    };\n\n    setTimerType();\n    tick(performance.now());\n\n    return {\n        pause: () => {\n            cancelTick(id);\n        },\n    };\n};\n\nconst createRoute = (routes, fn) => ({ root, props, actions = [], timestamp, shouldOptimize }) => {\n    actions\n        .filter(action => routes[action.type])\n        .forEach(action =>\n            routes[action.type]({ root, props, action: action.data, timestamp, shouldOptimize })\n        );\n    if (fn) {\n        fn({ root, props, actions, timestamp, shouldOptimize });\n    }\n};\n\nconst insertBefore = (newNode, referenceNode) =>\n    referenceNode.parentNode.insertBefore(newNode, referenceNode);\n\nconst insertAfter = (newNode, referenceNode) => {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\n\nconst isArray = value => Array.isArray(value);\n\nconst isEmpty = value => value == null;\n\nconst trim = str => str.trim();\n\nconst toString = value => '' + value;\n\nconst toArray = (value, splitter = ',') => {\n    if (isEmpty(value)) {\n        return [];\n    }\n    if (isArray(value)) {\n        return value;\n    }\n    return toString(value)\n        .split(splitter)\n        .map(trim)\n        .filter(str => str.length);\n};\n\nconst isBoolean = value => typeof value === 'boolean';\n\nconst toBoolean = value => (isBoolean(value) ? value : value === 'true');\n\nconst isString = value => typeof value === 'string';\n\nconst toNumber = value =>\n    isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n\nconst toInt = value => parseInt(toNumber(value), 10);\n\nconst toFloat = value => parseFloat(toNumber(value));\n\nconst isInt = value => isNumber(value) && isFinite(value) && Math.floor(value) === value;\n\nconst toBytes = (value, base = 1000) => {\n    // is in bytes\n    if (isInt(value)) {\n        return value;\n    }\n\n    // is natural file size\n    let naturalFileSize = toString(value).trim();\n\n    // if is value in megabytes\n    if (/MB$/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n        return toInt(naturalFileSize) * base * base;\n    }\n\n    // if is value in kilobytes\n    if (/KB/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n        return toInt(naturalFileSize) * base;\n    }\n\n    return toInt(naturalFileSize);\n};\n\nconst isFunction = value => typeof value === 'function';\n\nconst toFunctionReference = string => {\n    let ref = self;\n    let levels = string.split('.');\n    let level = null;\n    while ((level = levels.shift())) {\n        ref = ref[level];\n        if (!ref) {\n            return null;\n        }\n    }\n    return ref;\n};\n\nconst methods = {\n    process: 'POST',\n    patch: 'PATCH',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET',\n};\n\nconst createServerAPI = outline => {\n    const api = {};\n\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    api.headers = outline.headers ? outline.headers : {};\n\n    forin(methods, key => {\n        api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);\n    });\n\n    // remove process if no url or process on outline\n    api.process = outline.process || isString(outline) || outline.url ? api.process : null;\n\n    // special treatment for remove\n    api.remove = outline.remove || null;\n\n    // remove generic headers from api object\n    delete api.headers;\n\n    return api;\n};\n\nconst createAction = (name, outline, method, timeout, headers) => {\n    // is explicitely set to null so disable\n    if (outline === null) {\n        return null;\n    }\n\n    // if is custom function, done! Dev handles everything.\n    if (typeof outline === 'function') {\n        return outline;\n    }\n\n    // build action object\n    const action = {\n        url: method === 'GET' || method === 'PATCH' ? `?${name}=` : '',\n        method,\n        headers,\n        withCredentials: false,\n        timeout,\n        onload: null,\n        ondata: null,\n        onerror: null,\n    };\n\n    // is a single url\n    if (isString(outline)) {\n        action.url = outline;\n        return action;\n    }\n\n    // overwrite\n    Object.assign(action, outline);\n\n    // see if should reformat headers;\n    if (isString(action.headers)) {\n        const parts = action.headers.split(/:(.+)/);\n        action.headers = {\n            header: parts[0],\n            value: parts[1],\n        };\n    }\n\n    // if is bool withCredentials\n    action.withCredentials = toBoolean(action.withCredentials);\n\n    return action;\n};\n\nconst toServerAPI = value => createServerAPI(value);\n\nconst isNull = value => value === null;\n\nconst isObject = value => typeof value === 'object' && value !== null;\n\nconst isAPI = value => {\n    return (\n        isObject(value) &&\n        isString(value.url) &&\n        isObject(value.process) &&\n        isObject(value.revert) &&\n        isObject(value.restore) &&\n        isObject(value.fetch)\n    );\n};\n\nconst getType = value => {\n    if (isArray(value)) {\n        return 'array';\n    }\n\n    if (isNull(value)) {\n        return 'null';\n    }\n\n    if (isInt(value)) {\n        return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n        return 'bytes';\n    }\n\n    if (isAPI(value)) {\n        return 'api';\n    }\n\n    return typeof value;\n};\n\nconst replaceSingleQuotes = str =>\n    str\n        .replace(/{\\s*'/g, '{\"')\n        .replace(/'\\s*}/g, '\"}')\n        .replace(/'\\s*:/g, '\":')\n        .replace(/:\\s*'/g, ':\"')\n        .replace(/,\\s*'/g, ',\"')\n        .replace(/'\\s*,/g, '\",');\n\nconst conversionTable = {\n    array: toArray,\n    boolean: toBoolean,\n    int: value => (getType(value) === 'bytes' ? toBytes(value) : toInt(value)),\n    number: toFloat,\n    float: toFloat,\n    bytes: toBytes,\n    string: value => (isFunction(value) ? value : toString(value)),\n    function: value => toFunctionReference(value),\n    serverapi: toServerAPI,\n    object: value => {\n        try {\n            return JSON.parse(replaceSingleQuotes(value));\n        } catch (e) {\n            return null;\n        }\n    },\n};\n\nconst convertTo = (value, type) => conversionTable[type](value);\n\nconst getValueByType = (newValue, defaultValue, valueType) => {\n    // can always assign default value\n    if (newValue === defaultValue) {\n        return newValue;\n    }\n\n    // get the type of the new value\n    let newValueType = getType(newValue);\n\n    // is valid type?\n    if (newValueType !== valueType) {\n        // is string input, let's attempt to convert\n        const convertedValue = convertTo(newValue, valueType);\n\n        // what is the type now\n        newValueType = getType(convertedValue);\n\n        // no valid conversions found\n        if (convertedValue === null) {\n            throw `Trying to assign value with incorrect type to \"${option}\", allowed type: \"${valueType}\"`;\n        } else {\n            newValue = convertedValue;\n        }\n    }\n\n    // assign new value\n    return newValue;\n};\n\nconst createOption = (defaultValue, valueType) => {\n    let currentValue = defaultValue;\n    return {\n        enumerable: true,\n        get: () => currentValue,\n        set: newValue => {\n            currentValue = getValueByType(newValue, defaultValue, valueType);\n        },\n    };\n};\n\nconst createOptions = options => {\n    const obj = {};\n    forin(options, prop => {\n        const optionDefinition = options[prop];\n        obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n};\n\nconst createInitialState = options => ({\n    // model\n    items: [],\n\n    // timeout used for calling update items\n    listUpdateTimeout: null,\n\n    // timeout used for stacking metadata updates\n    itemUpdateTimeout: null,\n\n    // queue of items waiting to be processed\n    processingQueue: [],\n\n    // options\n    options: createOptions(options),\n});\n\nconst fromCamels = (string, separator = '-') =>\n    string\n        .split(/(?=[A-Z])/)\n        .map(part => part.toLowerCase())\n        .join(separator);\n\nconst createOptionAPI = (store, options) => {\n    const obj = {};\n    forin(options, key => {\n        obj[key] = {\n            get: () => store.getState().options[key],\n            set: value => {\n                store.dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                    value,\n                });\n            },\n        };\n    });\n    return obj;\n};\n\nconst createOptionActions = options => (dispatch, query, state) => {\n    const obj = {};\n    forin(options, key => {\n        const name = fromCamels(key, '_').toUpperCase();\n\n        obj[`SET_${name}`] = action => {\n            try {\n                state.options[key] = action.value;\n            } catch (e) {\n                // nope, failed\n            }\n\n            // we successfully set the value of this option\n            dispatch(`DID_SET_${name}`, { value: state.options[key] });\n        };\n    });\n    return obj;\n};\n\nconst createOptionQueries = options => state => {\n    const obj = {};\n    forin(options, key => {\n        obj[`GET_${fromCamels(key, '_').toUpperCase()}`] = action => state.options[key];\n    });\n    return obj;\n};\n\nconst InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5,\n};\n\nconst getUniqueId = () =>\n    Math.random()\n        .toString(36)\n        .substring(2, 11);\n\nconst arrayRemove = (arr, index) => arr.splice(index, 1);\n\nconst run = (cb, sync) => {\n    if (sync) {\n        cb();\n    } else if (document.hidden) {\n        Promise.resolve(1).then(cb);\n    } else {\n        setTimeout(cb, 0);\n    }\n};\n\nconst on = () => {\n    const listeners = [];\n    const off = (event, cb) => {\n        arrayRemove(\n            listeners,\n            listeners.findIndex(listener => listener.event === event && (listener.cb === cb || !cb))\n        );\n    };\n    const fire = (event, args, sync) => {\n        listeners\n            .filter(listener => listener.event === event)\n            .map(listener => listener.cb)\n            .forEach(cb => run(() => cb(...args), sync));\n    };\n    return {\n        fireSync: (event, ...args) => {\n            fire(event, args, true);\n        },\n        fire: (event, ...args) => {\n            fire(event, args, false);\n        },\n        on: (event, cb) => {\n            listeners.push({ event, cb });\n        },\n        onOnce: (event, cb) => {\n            listeners.push({\n                event,\n                cb: (...args) => {\n                    off(event, cb);\n                    cb(...args);\n                },\n            });\n        },\n        off,\n    };\n};\n\nconst copyObjectPropertiesToObject = (src, target, excluded) => {\n    Object.getOwnPropertyNames(src)\n        .filter(property => !excluded.includes(property))\n        .forEach(key =>\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key))\n        );\n};\n\nconst PRIVATE = [\n    'fire',\n    'process',\n    'revert',\n    'load',\n    'on',\n    'off',\n    'onOnce',\n    'retryLoad',\n    'extend',\n    'archive',\n    'archived',\n    'release',\n    'released',\n    'requestProcessing',\n    'freeze',\n];\n\nconst createItemAPI = item => {\n    const api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n};\n\nconst removeReleasedItems = items => {\n    items.forEach((item, index) => {\n        if (item.released) {\n            arrayRemove(items, index);\n        }\n    });\n};\n\nconst ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8,\n};\n\nconst FileOrigin = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3,\n};\n\nconst getNonNumeric = str => /[^0-9]+/.exec(str);\n\nconst getDecimalSeparator = () => getNonNumeric((1.1).toLocaleString())[0];\n\nconst getThousandsSeparator = () => {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    const decimalSeparator = getDecimalSeparator();\n    const thousandsStringWithSeparator = (1000.0).toLocaleString();\n    const thousandsStringWithoutSeparator = (1000.0).toString();\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n        return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n    return decimalSeparator === '.' ? ',' : '.';\n};\n\nconst Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    NUMBER: 'number',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex',\n};\n\n// all registered filters\nconst filters = [];\n\n// loops over matching filters and passes options to each filter, returning the mapped results\nconst applyFilterChain = (key, value, utils) =>\n    new Promise((resolve, reject) => {\n        // find matching filters for this key\n        const matchingFilters = filters.filter(f => f.key === key).map(f => f.cb);\n\n        // resolve now\n        if (matchingFilters.length === 0) {\n            resolve(value);\n            return;\n        }\n\n        // first filter to kick things of\n        const initialFilter = matchingFilters.shift();\n\n        // chain filters\n        matchingFilters\n            .reduce(\n                // loop over promises passing value to next promise\n                (current, next) => current.then(value => next(value, utils)),\n\n                // call initial filter, will return a promise\n                initialFilter(value, utils)\n\n                // all executed\n            )\n            .then(value => resolve(value))\n            .catch(error => reject(error));\n    });\n\nconst applyFilters = (key, value, utils) =>\n    filters.filter(f => f.key === key).map(f => f.cb(value, utils));\n\n// adds a new filter to the list\nconst addFilter = (key, cb) => filters.push({ key, cb });\n\nconst extendDefaultOptions = additionalOptions => Object.assign(defaultOptions, additionalOptions);\n\nconst getOptions = () => ({ ...defaultOptions });\n\nconst setOptions = opts => {\n    forin(opts, (key, value) => {\n        // key does not exist, so this option cannot be set\n        if (!defaultOptions[key]) {\n            return;\n        }\n        defaultOptions[key][0] = getValueByType(\n            value,\n            defaultOptions[key][0],\n            defaultOptions[key][1]\n        );\n    });\n};\n\n// default options on app\nconst defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n\n    // input field name to use\n    name: ['filepond', Type.STRING],\n\n    // disable the field\n    disabled: [false, Type.BOOLEAN],\n\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n\n    // is the field required\n    required: [false, Type.BOOLEAN],\n\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n\n    // sync `acceptedFileTypes` property with `accept` attribute\n    allowSyncAcceptAttribute: [true, Type.BOOLEAN],\n\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN], // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN], // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN], // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN], // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN], // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN], // Allows user to revert file upload\n    allowRemove: [true, Type.BOOLEAN], // Allow user to remove a file\n    allowProcess: [true, Type.BOOLEAN], // Allows user to process a file, when set to false, this removes the file upload button\n    allowReorder: [false, Type.BOOLEAN], // Allow reordering of files\n    allowDirectoriesOnly: [false, Type.BOOLEAN], // Allow only selecting directories with browse (no support for filtering dnd at this point)\n\n    // Try store file if `server` not set\n    storeAsFile: [false, Type.BOOLEAN],\n\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN], // Set to 'force' to require the file to be reverted before removal\n\n    // Input requirements\n    maxFiles: [null, Type.INT], // Max number of files\n    checkValidity: [false, Type.BOOLEAN], // Enables custom validity messages\n\n    // Where to put file\n    itemInsertLocationFreedom: [true, Type.BOOLEAN], // Set to false to always add items to begin or end of list\n    itemInsertLocation: ['before', Type.STRING], // Default index in list to add items that have been dropped at the top of the list\n    itemInsertInterval: [75, Type.INT],\n\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN], // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN], // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN], // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN], // Should upload files immediately on drop\n    maxParallelUploads: [2, Type.INT], // Maximum files to upload in parallel\n    allowMinimumUploadDuration: [true, Type.BOOLEAN], // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened\n\n    // Chunks\n    chunkUploads: [false, Type.BOOLEAN], // Enable chunked uploads\n    chunkForce: [false, Type.BOOLEAN], // Force use of chunk uploads even for files smaller than chunk size\n    chunkSize: [5000000, Type.INT], // Size of chunks (5MB default)\n    chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY], // Amount of times to retry upload of a chunk when it fails\n\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n\n    // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000\n    fileSizeBase: [1000, Type.INT],\n\n    // Labels and status messages\n    labelFileSizeBytes: ['bytes', Type.STRING],\n    labelFileSizeKilobytes: ['KB', Type.STRING],\n    labelFileSizeMegabytes: ['MB', Type.STRING],\n    labelFileSizeGigabytes: ['GB', Type.STRING],\n\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING], // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING], // Default is locale separator\n\n    labelIdle: [\n        'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\n        Type.STRING,\n    ],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING], // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING], // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconProcess: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>',\n        Type.STRING,\n    ],\n    iconRetry: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconUndo: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconDone: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onactivatefile: [null, Type.FUNCTION],\n    oninitfile: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onprocessfiles: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    onreorderfiles: [null, Type.FUNCTION],\n\n    // hooks\n    beforeDropFile: [null, Type.FUNCTION],\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    beforePrepareFile: [null, Type.FUNCTION],\n\n    // styles\n    stylePanelLayout: [null, Type.STRING], // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING], // null or '3:2' or 1\n    styleItemPanelAspectRatio: [null, Type.STRING],\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    styleButtonRemoveItemAlign: [false, Type.BOOLEAN],\n\n    // custom initial files array\n    files: [[], Type.ARRAY],\n\n    // show support by displaying credits\n    credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY],\n};\n\nconst getItemByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return items[0] || null;\n    }\n\n    // query is index\n    if (isInt(query)) {\n        return items[query] || null;\n    }\n\n    // if query is item, get the id\n    if (typeof query === 'object') {\n        query = query.id;\n    }\n\n    // assume query is a string and return item by id\n    return items.find(item => item.id === query) || null;\n};\n\nconst getNumericAspectRatioFromString = aspectRatio => {\n    if (isEmpty(aspectRatio)) {\n        return aspectRatio;\n    }\n    if (/:/.test(aspectRatio)) {\n        const parts = aspectRatio.split(':');\n        return parts[1] / parts[0];\n    }\n    return parseFloat(aspectRatio);\n};\n\nconst getActiveItems = items => items.filter(item => !item.archived);\n\nconst Status = {\n    EMPTY: 0,\n    IDLE: 1, // waiting\n    ERROR: 2, // a file is in error state\n    BUSY: 3, // busy processing or loading\n    READY: 4, // all files uploaded\n};\n\nlet res = null;\nconst canUpdateFileInput = () => {\n    if (res === null) {\n        try {\n            const dataTransfer = new DataTransfer();\n            dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));\n            const el = document.createElement('input');\n            el.setAttribute('type', 'file');\n            el.files = dataTransfer.files;\n            res = el.files.length === 1;\n        } catch (err) {\n            res = false;\n        }\n    }\n    return res;\n};\n\nconst ITEM_ERROR = [\n    ItemStatus.LOAD_ERROR,\n    ItemStatus.PROCESSING_ERROR,\n    ItemStatus.PROCESSING_REVERT_ERROR,\n];\nconst ITEM_BUSY = [\n    ItemStatus.LOADING,\n    ItemStatus.PROCESSING,\n    ItemStatus.PROCESSING_QUEUED,\n    ItemStatus.INIT,\n];\nconst ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\n\nconst isItemInErrorState = item => ITEM_ERROR.includes(item.status);\nconst isItemInBusyState = item => ITEM_BUSY.includes(item.status);\nconst isItemInReadyState = item => ITEM_READY.includes(item.status);\n\nconst isAsync = state =>\n    isObject(state.options.server) &&\n    (isObject(state.options.server.process) || isFunction(state.options.server.process));\n\nconst queries = state => ({\n    GET_STATUS: () => {\n        const items = getActiveItems(state.items);\n\n        const { EMPTY, ERROR, BUSY, IDLE, READY } = Status;\n\n        if (items.length === 0) return EMPTY;\n\n        if (items.some(isItemInErrorState)) return ERROR;\n\n        if (items.some(isItemInBusyState)) return BUSY;\n\n        if (items.some(isItemInReadyState)) return READY;\n\n        return IDLE;\n    },\n\n    GET_ITEM: query => getItemByQuery(state.items, query),\n\n    GET_ACTIVE_ITEM: query => getItemByQuery(getActiveItems(state.items), query),\n\n    GET_ACTIVE_ITEMS: () => getActiveItems(state.items),\n\n    GET_ITEMS: () => state.items,\n\n    GET_ITEM_NAME: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n    },\n\n    GET_ITEM_SIZE: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n    },\n\n    GET_STYLES: () =>\n        Object.keys(state.options)\n            .filter(key => /^style/.test(key))\n            .map(option => ({\n                name: option,\n                value: state.options[option],\n            })),\n\n    GET_PANEL_ASPECT_RATIO: () => {\n        const isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        const aspectRatio = isShapeCircle\n            ? 1\n            : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n    },\n\n    GET_ITEM_PANEL_ASPECT_RATIO: () => state.options.styleItemPanelAspectRatio,\n\n    GET_ITEMS_BY_STATUS: status =>\n        getActiveItems(state.items).filter(item => item.status === status),\n\n    GET_TOTAL_ITEMS: () => getActiveItems(state.items).length,\n\n    SHOULD_UPDATE_FILE_INPUT: () =>\n        state.options.storeAsFile && canUpdateFileInput() && !isAsync(state),\n\n    IS_ASYNC: () => isAsync(state),\n\n    GET_FILE_SIZE_LABELS: query => ({\n        labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,\n        labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,\n        labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,\n        labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined,\n    }),\n});\n\nconst hasRoomForItem = state => {\n    const count = getActiveItems(state.items).length;\n\n    // if cannot have multiple items, to add one item it should currently not contain items\n    if (!state.options.allowMultiple) {\n        return count === 0;\n    }\n\n    // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n    const maxFileCount = state.options.maxFiles;\n    if (maxFileCount === null) {\n        return true;\n    }\n\n    // we check if the current count is smaller than the max count, if so, another file can still be added\n    if (count < maxFileCount) {\n        return true;\n    }\n\n    // no more room for another file\n    return false;\n};\n\nconst limit = (value, min, max) => Math.max(Math.min(max, value), min);\n\nconst arrayInsert = (arr, index, item) => arr.splice(index, 0, item);\n\nconst insertItem = (items, item, index) => {\n    if (isEmpty(item)) {\n        return null;\n    }\n\n    // if index is undefined, append\n    if (typeof index === 'undefined') {\n        items.push(item);\n        return item;\n    }\n\n    // limit the index to the size of the items array\n    index = limit(index, 0, items.length);\n\n    // add item to array\n    arrayInsert(items, index, item);\n\n    // expose\n    return item;\n};\n\nconst isBase64DataURI = str =>\n    /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(\n        str\n    );\n\nconst getFilenameFromURL = url =>\n    `${url}`\n        .split('/')\n        .pop()\n        .split('?')\n        .shift();\n\nconst getExtensionFromFilename = name => name.split('.').pop();\n\nconst guesstimateExtension = type => {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n        return '';\n    }\n\n    // get subtype\n    const subtype = type.split('/').pop();\n\n    // is svg subtype\n    if (/svg/.test(subtype)) {\n        return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n        return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n        return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n        return 'doc';\n    }\n\n    // if is valid subtype\n    if (/[a-z]+/.test(subtype)) {\n        // always use jpg extension\n        if (subtype === 'jpeg') {\n            return 'jpg';\n        }\n\n        // return subtype\n        return subtype;\n    }\n\n    return '';\n};\n\nconst leftPad = (value, padding = '') => (padding + value).slice(-padding.length);\n\nconst getDateString = (date = new Date()) =>\n    `${date.getFullYear()}-${leftPad(date.getMonth() + 1, '00')}-${leftPad(\n        date.getDate(),\n        '00'\n    )}_${leftPad(date.getHours(), '00')}-${leftPad(date.getMinutes(), '00')}-${leftPad(\n        date.getSeconds(),\n        '00'\n    )}`;\n\nconst getFileFromBlob = (blob, filename, type = null, extension = null) => {\n    const file =\n        typeof type === 'string'\n            ? blob.slice(0, blob.size, type)\n            : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date();\n\n    // copy relative path\n    if (blob._relativePath) file._relativePath = blob._relativePath;\n\n    // if blob has name property, use as filename if no filename supplied\n    if (!isString(filename)) {\n        filename = getDateString();\n    }\n\n    // if filename supplied but no extension and filename has extension\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n        file.name = filename;\n    } else {\n        extension = extension || guesstimateExtension(file.type);\n        file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n};\n\nconst getBlobBuilder = () => {\n    return (window.BlobBuilder =\n        window.BlobBuilder ||\n        window.WebKitBlobBuilder ||\n        window.MozBlobBuilder ||\n        window.MSBlobBuilder);\n};\n\nconst createBlob = (arrayBuffer, mimeType) => {\n    const BB = getBlobBuilder();\n\n    if (BB) {\n        const bb = new BB();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n        type: mimeType,\n    });\n};\n\nconst getBlobFromByteStringWithMimeType = (byteString, mimeType) => {\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n};\n\nconst getMimeTypeFromBase64DataURI = dataURI => {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n};\n\nconst getBase64DataFromBase64DataURI = dataURI => {\n    // get data part of string (remove data:image/jpeg...,)\n    const data = dataURI.split(',')[1];\n\n    // remove any whitespace as that causes InvalidCharacterError in IE\n    return data.replace(/\\s/g, '');\n};\n\nconst getByteStringFromBase64DataURI = dataURI => {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n};\n\nconst getBlobFromBase64DataURI = dataURI => {\n    const mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    const byteString = getByteStringFromBase64DataURI(dataURI);\n\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n};\n\nconst getFileFromBase64DataURI = (dataURI, filename, extension) => {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n};\n\nconst getFileNameFromHeader = header => {\n    // test if is content disposition header, if not exit\n    if (!/^content-disposition:/i.test(header)) return null;\n\n    // get filename parts\n    const matches = header\n        .split(/filename=|filename\\*=.+''/)\n        .splice(1)\n        .map(name => name.trim().replace(/^[\"']|[;\"']{0,2}$/g, ''))\n        .filter(name => name.length);\n\n    return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n};\n\nconst getFileSizeFromHeader = header => {\n    if (/content-length:/i.test(header)) {\n        const size = header.match(/[0-9]+/)[0];\n        return size ? parseInt(size, 10) : null;\n    }\n    return null;\n};\n\nconst getTranfserIdFromHeader = header => {\n    if (/x-content-transfer-id:/i.test(header)) {\n        const id = (header.split(':')[1] || '').trim();\n        return id || null;\n    }\n    return null;\n};\n\nconst getFileInfoFromHeaders = headers => {\n    const info = {\n        source: null,\n        name: null,\n        size: null,\n    };\n\n    const rows = headers.split('\\n');\n    for (let header of rows) {\n        const name = getFileNameFromHeader(header);\n        if (name) {\n            info.name = name;\n            continue;\n        }\n\n        const size = getFileSizeFromHeader(header);\n        if (size) {\n            info.size = size;\n            continue;\n        }\n\n        const source = getTranfserIdFromHeader(header);\n        if (source) {\n            info.source = source;\n            continue;\n        }\n    }\n\n    return info;\n};\n\nconst createFileLoader = fetchFn => {\n    const state = {\n        source: null,\n        complete: false,\n        progress: 0,\n        size: null,\n        timestamp: null,\n        duration: 0,\n        request: null,\n    };\n\n    const getProgress = () => state.progress;\n    const abort = () => {\n        if (state.request && state.request.abort) {\n            state.request.abort();\n        }\n    };\n\n    // load source\n    const load = () => {\n        // get quick reference\n        const source = state.source;\n\n        api.fire('init', source);\n\n        // Load Files\n        if (source instanceof File) {\n            api.fire('load', source);\n        } else if (source instanceof Blob) {\n            // Load blobs, set default name to current date\n            api.fire('load', getFileFromBlob(source, source.name));\n        } else if (isBase64DataURI(source)) {\n            // Load base 64, set default name to current date\n            api.fire('load', getFileFromBase64DataURI(source));\n        } else {\n            // Deal as if is external URL, let's load it!\n            loadURL(source);\n        }\n    };\n\n    // loads a url\n    const loadURL = url => {\n        // is remote url and no fetch method supplied\n        if (!fetchFn) {\n            api.fire('error', {\n                type: 'error',\n                body: \"Can't load URL\",\n                code: 400,\n            });\n            return;\n        }\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // load file\n        state.request = fetchFn(\n            url,\n            response => {\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // done!\n                state.complete = true;\n\n                // turn blob response into a file\n                if (response instanceof Blob) {\n                    response = getFileFromBlob(response, response.name || getFilenameFromURL(url));\n                }\n\n                api.fire(\n                    'load',\n                    // if has received blob, we go with blob, if no response, we return null\n                    response instanceof Blob ? response : response ? response.body : null\n                );\n            },\n            error => {\n                api.fire(\n                    'error',\n                    typeof error === 'string'\n                        ? {\n                              type: 'error',\n                              code: 0,\n                              body: error,\n                          }\n                        : error\n                );\n            },\n            (computable, current, total) => {\n                // collected some meta data already\n                if (total) {\n                    state.size = total;\n                }\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // if we can't compute progress, we're not going to fire progress events\n                if (!computable) {\n                    state.progress = null;\n                    return;\n                }\n\n                // update progress percentage\n                state.progress = current / total;\n\n                // expose\n                api.fire('progress', state.progress);\n            },\n            () => {\n                api.fire('abort');\n            },\n            response => {\n                const fileinfo = getFileInfoFromHeaders(\n                    typeof response === 'string' ? response : response.headers\n                );\n                api.fire('meta', {\n                    size: state.size || fileinfo.size,\n                    filename: fileinfo.name,\n                    source: fileinfo.source,\n                });\n            }\n        );\n    };\n\n    const api = {\n        ...on(),\n        setSource: source => (state.source = source),\n        getProgress, // file load progress\n        abort, // abort file load\n        load, // start load\n    };\n\n    return api;\n};\n\nconst isGet = method => /GET|HEAD/.test(method);\n\nconst sendRequest = (data, url, options) => {\n    const api = {\n        onheaders: () => {},\n        onprogress: () => {},\n        onload: () => {},\n        ontimeout: () => {},\n        onerror: () => {},\n        onabort: () => {},\n        abort: () => {\n            aborted = true;\n            xhr.abort();\n        },\n    };\n\n    // timeout identifier, only used when timeout is defined\n    let aborted = false;\n    let headersReceived = false;\n\n    // set default options\n    options = {\n        method: 'POST',\n        headers: {},\n        withCredentials: false,\n        ...options,\n    };\n\n    // encode url\n    url = encodeURI(url);\n\n    // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n        url = `${url}${encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data))}`;\n    }\n\n    // create request\n    const xhr = new XMLHttpRequest();\n\n    // progress of load\n    const process = isGet(options.method) ? xhr : xhr.upload;\n    process.onprogress = e => {\n        // no progress event when aborted ( onprogress is called once after abort() )\n        if (aborted) {\n            return;\n        }\n\n        api.onprogress(e.lengthComputable, e.loaded, e.total);\n    };\n\n    // tries to get header info to the app as fast as possible\n    xhr.onreadystatechange = () => {\n        // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n        if (xhr.readyState < 2) {\n            return;\n        }\n\n        // no server response\n        if (xhr.readyState === 4 && xhr.status === 0) {\n            return;\n        }\n\n        if (headersReceived) {\n            return;\n        }\n\n        headersReceived = true;\n\n        // we've probably received some useful data in response headers\n        api.onheaders(xhr);\n    };\n\n    // load successful\n    xhr.onload = () => {\n        // is classified as valid response\n        if (xhr.status >= 200 && xhr.status < 300) {\n            api.onload(xhr);\n        } else {\n            api.onerror(xhr);\n        }\n    };\n\n    // error during load\n    xhr.onerror = () => api.onerror(xhr);\n\n    // request aborted\n    xhr.onabort = () => {\n        aborted = true;\n        api.onabort();\n    };\n\n    // request timeout\n    xhr.ontimeout = () => api.ontimeout(xhr);\n\n    // open up open up!\n    xhr.open(options.method, url, true);\n\n    // set timeout if defined (do it after open so IE11 plays ball)\n    if (isInt(options.timeout)) {\n        xhr.timeout = options.timeout;\n    }\n\n    // add headers\n    Object.keys(options.headers).forEach(key => {\n        const value = unescape(encodeURIComponent(options.headers[key]));\n        xhr.setRequestHeader(key, value);\n    });\n\n    // set type of response\n    if (options.responseType) {\n        xhr.responseType = options.responseType;\n    }\n\n    // set credentials\n    if (options.withCredentials) {\n        xhr.withCredentials = true;\n    }\n\n    // let's send our data\n    xhr.send(data);\n\n    return api;\n};\n\nconst createResponse = (type, code, body, headers) => ({\n    type,\n    code,\n    body,\n    headers,\n});\n\nconst createTimeoutResponse = cb => xhr => {\n    cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n};\n\nconst hasQS = str => /\\?/.test(str);\nconst buildURL = (...parts) => {\n    let url = '';\n    parts.forEach(part => {\n        url += hasQS(url) && hasQS(part) ? part.replace(/\\?/, '&') : part;\n    });\n    return url;\n};\n\nconst createFetchFunction = (apiUrl = '', action) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied\n    if (!action || !isString(action.url)) {\n        return null;\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal handler\n    return (url, load, error, progress, abort, headers) => {\n        // do local or remote request based on if the url is external\n        const request = sendRequest(url, buildURL(apiUrl, action.url), {\n            ...action,\n            responseType: 'blob',\n        });\n\n        request.onload = xhr => {\n            // get headers\n            const headers = xhr.getAllResponseHeaders();\n\n            // get filename\n            const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n            // create response\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    action.method === 'HEAD'\n                        ? null\n                        : getFileFromBlob(onload(xhr.response), filename),\n                    headers\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onheaders = xhr => {\n            headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n        request.onprogress = progress;\n        request.onabort = abort;\n\n        // should return request\n        return request;\n    };\n};\n\nconst ChunkStatus = {\n    QUEUED: 0,\n    COMPLETE: 1,\n    PROCESSING: 2,\n    ERROR: 3,\n    WAITING: 4,\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort, transfer, options) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\n\n// apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options\nconst processFileChunked = (\n    apiUrl,\n    action,\n    name,\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer,\n    options\n) => {\n    // all chunks\n    const chunks = [];\n    const { chunkTransferId, chunkServer, chunkSize, chunkRetryDelays } = options;\n\n    // default state\n    const state = {\n        serverId: chunkTransferId,\n        aborted: false,\n    };\n\n    // set onload handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload =\n        action.onload ||\n        ((xhr, method) =>\n            method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response);\n    const onerror = action.onerror || (res => null);\n\n    // create server hook\n    const requestTransferId = cb => {\n        const formData = new FormData();\n\n        // add metadata under same name\n        if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(file, metadata)\n                : {\n                      ...action.headers,\n                      'Upload-Length': file.size,\n                  };\n\n        const requestParams = {\n            ...action,\n            headers,\n        };\n\n        // send request object\n        const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    const requestTransferOffset = cb => {\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(state.serverId)\n                : {\n                      ...action.headers,\n                  };\n\n        const requestParams = {\n            headers,\n            method: 'HEAD',\n        };\n\n        const request = sendRequest(null, requestUrl, requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    // create chunks\n    const lastChunkIndex = Math.floor(file.size / chunkSize);\n    for (let i = 0; i <= lastChunkIndex; i++) {\n        const offset = i * chunkSize;\n        const data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');\n        chunks[i] = {\n            index: i,\n            size: data.size,\n            offset,\n            data,\n            file,\n            progress: 0,\n            retries: [...chunkRetryDelays],\n            status: ChunkStatus.QUEUED,\n            error: null,\n            request: null,\n            timeout: null,\n        };\n    }\n\n    const completeProcessingChunks = () => load(state.serverId);\n\n    const canProcessChunk = chunk =>\n        chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;\n\n    const processChunk = chunk => {\n        // processing is paused, wait here\n        if (state.aborted) return;\n\n        // get next chunk to process\n        chunk = chunk || chunks.find(canProcessChunk);\n\n        // no more chunks to process\n        if (!chunk) {\n            // all done?\n            if (chunks.every(chunk => chunk.status === ChunkStatus.COMPLETE)) {\n                completeProcessingChunks();\n            }\n\n            // no chunk to handle\n            return;\n        }\n\n        // now processing this chunk\n        chunk.status = ChunkStatus.PROCESSING;\n        chunk.progress = null;\n\n        // allow parsing of formdata\n        const ondata = chunkServer.ondata || (fd => fd);\n        const onerror = chunkServer.onerror || (res => null);\n\n        // send request object\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof chunkServer.headers === 'function'\n                ? chunkServer.headers(chunk)\n                : {\n                      ...chunkServer.headers,\n                      'Content-Type': 'application/offset+octet-stream',\n                      'Upload-Offset': chunk.offset,\n                      'Upload-Length': file.size,\n                      'Upload-Name': file.name,\n                  };\n\n        const request = (chunk.request = sendRequest(ondata(chunk.data), requestUrl, {\n            ...chunkServer,\n            headers,\n        }));\n\n        request.onload = () => {\n            // done!\n            chunk.status = ChunkStatus.COMPLETE;\n\n            // remove request reference\n            chunk.request = null;\n\n            // start processing more chunks\n            processChunks();\n        };\n\n        request.onprogress = (lengthComputable, loaded, total) => {\n            chunk.progress = lengthComputable ? loaded : null;\n            updateTotalProgress();\n        };\n\n        request.onerror = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            chunk.error = onerror(xhr.response) || xhr.statusText;\n            if (!retryProcessChunk(chunk)) {\n                error(\n                    createResponse(\n                        'error',\n                        xhr.status,\n                        onerror(xhr.response) || xhr.statusText,\n                        xhr.getAllResponseHeaders()\n                    )\n                );\n            }\n        };\n\n        request.ontimeout = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            if (!retryProcessChunk(chunk)) {\n                createTimeoutResponse(error)(xhr);\n            }\n        };\n\n        request.onabort = () => {\n            chunk.status = ChunkStatus.QUEUED;\n            chunk.request = null;\n            abort();\n        };\n    };\n\n    const retryProcessChunk = chunk => {\n        // no more retries left\n        if (chunk.retries.length === 0) return false;\n\n        // new retry\n        chunk.status = ChunkStatus.WAITING;\n        clearTimeout(chunk.timeout);\n        chunk.timeout = setTimeout(() => {\n            processChunk(chunk);\n        }, chunk.retries.shift());\n\n        // we're going to retry\n        return true;\n    };\n\n    const updateTotalProgress = () => {\n        // calculate total progress fraction\n        const totalBytesTransfered = chunks.reduce((p, chunk) => {\n            if (p === null || chunk.progress === null) return null;\n            return p + chunk.progress;\n        }, 0);\n\n        // can't compute progress\n        if (totalBytesTransfered === null) return progress(false, 0, 0);\n\n        // calculate progress values\n        const totalSize = chunks.reduce((total, chunk) => total + chunk.size, 0);\n\n        // can update progress indicator\n        progress(true, totalBytesTransfered, totalSize);\n    };\n\n    // process new chunks\n    const processChunks = () => {\n        const totalProcessing = chunks.filter(chunk => chunk.status === ChunkStatus.PROCESSING)\n            .length;\n        if (totalProcessing >= 1) return;\n        processChunk();\n    };\n\n    const abortChunks = () => {\n        chunks.forEach(chunk => {\n            clearTimeout(chunk.timeout);\n            if (chunk.request) {\n                chunk.request.abort();\n            }\n        });\n    };\n\n    // let's go!\n    if (!state.serverId) {\n        requestTransferId(serverId => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // pass back to item so we can use it if something goes wrong\n            transfer(serverId);\n\n            // store internally\n            state.serverId = serverId;\n            processChunks();\n        });\n    } else {\n        requestTransferOffset(offset => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // mark chunks with lower offset as complete\n            chunks\n                .filter(chunk => chunk.offset < offset)\n                .forEach(chunk => {\n                    chunk.status = ChunkStatus.COMPLETE;\n                    chunk.progress = chunk.size;\n                });\n\n            // continue processing\n            processChunks();\n        });\n    }\n\n    return {\n        abort: () => {\n            state.aborted = true;\n            abortChunks();\n        },\n    };\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\nconst createFileProcessorFunction = (apiUrl, action, name, options) => (\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer\n) => {\n    // no file received\n    if (!file) return;\n\n    // if was passed a file, and we can chunk it, exit here\n    const canChunkUpload = options.chunkUploads;\n    const shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;\n    const willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);\n    if (file instanceof Blob && willChunkUpload)\n        return processFileChunked(\n            apiUrl,\n            action,\n            name,\n            file,\n            metadata,\n            load,\n            error,\n            progress,\n            abort,\n            transfer,\n            options\n        );\n\n    // set handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    const headers =\n        typeof action.headers === 'function'\n            ? action.headers(file, metadata) || {}\n            : {\n                  ...action.headers,\n              };\n\n    const requestParams = {\n        ...action,\n        headers,\n    };\n\n    // create formdata object\n    var formData = new FormData();\n\n    // add metadata under same name\n    if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n    }\n\n    // Turn into an array of objects so no matter what the input, we can handle it the same way\n    (file instanceof Blob ? [{ name: null, file }] : file).forEach(item => {\n        formData.append(\n            name,\n            item.file,\n            item.name === null ? item.file.name : `${item.name}${item.file.name}`\n        );\n    });\n\n    // send request object\n    const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n    request.onload = xhr => {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n    };\n\n    request.onerror = xhr => {\n        error(\n            createResponse(\n                'error',\n                xhr.status,\n                onerror(xhr.response) || xhr.statusText,\n                xhr.getAllResponseHeaders()\n            )\n        );\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst createProcessorFunction = (apiUrl = '', action, name, options) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') return (...params) => action(name, ...params, options);\n\n    // no action supplied\n    if (!action || !isString(action.url)) return null;\n\n    // internal handler\n    return createFileProcessorFunction(apiUrl, action, name, options);\n};\n\n/*\n function signature:\n (uniqueFileId, load, error) => { }\n */\nconst createRevertFunction = (apiUrl = '', action) => {\n    // is custom implementation\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied, return stub function, interface will work, but file won't be removed\n    if (!action || !isString(action.url)) {\n        return (uniqueFileId, load) => load();\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal implementation\n    return (uniqueFileId, load, error) => {\n        const request = sendRequest(\n            uniqueFileId,\n            apiUrl + action.url,\n            action // contains method, headers and withCredentials properties\n        );\n        request.onload = xhr => {\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    onload(xhr.response),\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n\n        return request;\n    };\n};\n\nconst getRandomNumber = (min = 0, max = 1) => min + Math.random() * (max - min);\n\nconst createPerceivedPerformanceUpdater = (\n    cb,\n    duration = 1000,\n    offset = 0,\n    tickMin = 25,\n    tickMax = 250\n) => {\n    let timeout = null;\n    const start = Date.now();\n\n    const tick = () => {\n        let runtime = Date.now() - start;\n        let delay = getRandomNumber(tickMin, tickMax);\n\n        if (runtime + delay > duration) {\n            delay = runtime + delay - duration;\n        }\n\n        let progress = runtime / duration;\n        if (progress >= 1 || document.hidden) {\n            cb(1);\n            return;\n        }\n\n        cb(progress);\n\n        timeout = setTimeout(tick, delay);\n    };\n\n    if (duration > 0) tick();\n\n    return {\n        clear: () => {\n            clearTimeout(timeout);\n        },\n    };\n};\n\nconst createFileProcessor = (processFn, options) => {\n    const state = {\n        complete: false,\n        perceivedProgress: 0,\n        perceivedPerformanceUpdater: null,\n        progress: null,\n        timestamp: null,\n        perceivedDuration: 0,\n        duration: 0,\n        request: null,\n        response: null,\n    };\n\n    const { allowMinimumUploadDuration } = options;\n\n    const process = (file, metadata) => {\n        const progressFn = () => {\n            // we've not yet started the real download, stop here\n            // the request might not go through, for instance, there might be some server trouble\n            // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n            if (state.duration === 0 || state.progress === null) return;\n\n            // as we're now processing, fire the progress event\n            api.fire('progress', api.getProgress());\n        };\n\n        const completeFn = () => {\n            state.complete = true;\n            api.fire('load-perceived', state.response.body);\n        };\n\n        // let's start processing\n        api.fire('start');\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // create perceived performance progress indicator\n        state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(\n            progress => {\n                state.perceivedProgress = progress;\n                state.perceivedDuration = Date.now() - state.timestamp;\n\n                progressFn();\n\n                // if fake progress is done, and a response has been received,\n                // and we've not yet called the complete method\n                if (state.response && state.perceivedProgress === 1 && !state.complete) {\n                    // we done!\n                    completeFn();\n                }\n            },\n            // random delay as in a list of files you start noticing\n            // files uploading at the exact same speed\n            allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0\n        );\n\n        // remember request so we can abort it later\n        state.request = processFn(\n            // the file to process\n            file,\n\n            // the metadata to send along\n            metadata,\n\n            // callbacks (load, error, progress, abort, transfer)\n            // load expects the body to be a server id if\n            // you want to make use of revert\n            response => {\n                // we put the response in state so we can access\n                // it outside of this method\n                state.response = isObject(response)\n                    ? response\n                    : {\n                          type: 'load',\n                          code: 200,\n                          body: `${response}`,\n                          headers: {},\n                      };\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // force progress to 1 as we're now done\n                state.progress = 1;\n\n                // actual load is done let's share results\n                api.fire('load', state.response.body);\n\n                // we are really done\n                // if perceived progress is 1 ( wait for perceived progress to complete )\n                // or if server does not support progress ( null )\n                if (\n                    !allowMinimumUploadDuration ||\n                    (allowMinimumUploadDuration && state.perceivedProgress === 1)\n                ) {\n                    completeFn();\n                }\n            },\n\n            // error is expected to be an object with type, code, body\n            error => {\n                // cancel updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // update others about this error\n                api.fire(\n                    'error',\n                    isObject(error)\n                        ? error\n                        : {\n                              type: 'error',\n                              code: 0,\n                              body: `${error}`,\n                          }\n                );\n            },\n\n            // actual processing progress\n            (computable, current, total) => {\n                // update actual duration\n                state.duration = Date.now() - state.timestamp;\n\n                // update actual progress\n                state.progress = computable ? current / total : null;\n\n                progressFn();\n            },\n\n            // abort does not expect a value\n            () => {\n                // stop updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // fire the abort event so we can switch visuals\n                api.fire('abort', state.response ? state.response.body : null);\n            },\n\n            // register the id for this transfer\n            transferId => {\n                api.fire('transfer', transferId);\n            }\n        );\n    };\n\n    const abort = () => {\n        // no request running, can't abort\n        if (!state.request) return;\n\n        // stop updater\n        state.perceivedPerformanceUpdater.clear();\n\n        // abort actual request\n        if (state.request.abort) state.request.abort();\n\n        // if has response object, we've completed the request\n        state.complete = true;\n    };\n\n    const reset = () => {\n        abort();\n        state.complete = false;\n        state.perceivedProgress = 0;\n        state.progress = 0;\n        state.timestamp = null;\n        state.perceivedDuration = 0;\n        state.duration = 0;\n        state.request = null;\n        state.response = null;\n    };\n\n    const getProgress = allowMinimumUploadDuration\n        ? () => (state.progress ? Math.min(state.progress, state.perceivedProgress) : null)\n        : () => state.progress || null;\n\n    const getDuration = allowMinimumUploadDuration\n        ? () => Math.min(state.duration, state.perceivedDuration)\n        : () => state.duration;\n\n    const api = {\n        ...on(),\n        process, // start processing file\n        abort, // abort active process request\n        getProgress,\n        getDuration,\n        reset,\n    };\n\n    return api;\n};\n\nconst getFilenameWithoutExtension = name => name.substring(0, name.lastIndexOf('.')) || name;\n\nconst createFileStub = source => {\n    let data = [source.name, source.size, source.type];\n\n    // is blob or base64, then we need to set the name\n    if (source instanceof Blob || isBase64DataURI(source)) {\n        data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n        // if is base64 data uri we need to determine the average size and type\n        data[1] = source.length;\n        data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n        // url\n        data[0] = getFilenameFromURL(source);\n        data[1] = 0;\n        data[2] = 'application/octet-stream';\n    }\n\n    return {\n        name: data[0],\n        size: data[1],\n        type: data[2],\n    };\n};\n\nconst isFile = value => !!(value instanceof File || (value instanceof Blob && value.name));\n\nconst deepCloneObject = src => {\n    if (!isObject(src)) return src;\n    const target = isArray(src) ? [] : {};\n    for (const key in src) {\n        if (!src.hasOwnProperty(key)) continue;\n        const v = src[key];\n        target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n    return target;\n};\n\nconst createItem = (origin = null, serverFileReference = null, file = null) => {\n    // unique id for this item, is used to identify the item across views\n    const id = getUniqueId();\n\n    /**\n     * Internal item state\n     */\n    const state = {\n        // is archived\n        archived: false,\n\n        // if is frozen, no longer fires events\n        frozen: false,\n\n        // removed from view\n        released: false,\n\n        // original source\n        source: null,\n\n        // file model reference\n        file,\n\n        // id of file on server\n        serverFileReference,\n\n        // id of file transfer on server\n        transferId: null,\n\n        // is aborted\n        processingAborted: false,\n\n        // current item status\n        status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n\n        // active processes\n        activeLoader: null,\n        activeProcessor: null,\n    };\n\n    // callback used when abort processing is called to link back to the resolve method\n    let abortProcessingRequestComplete = null;\n\n    /**\n     * Externally added item metadata\n     */\n    const metadata = {};\n\n    // item data\n    const setStatus = status => (state.status = status);\n\n    // fire event unless the item has been archived\n    const fire = (event, ...params) => {\n        if (state.released || state.frozen) return;\n        api.fire(event, ...params);\n    };\n\n    // file data\n    const getFileExtension = () => getExtensionFromFilename(state.file.name);\n    const getFileType = () => state.file.type;\n    const getFileSize = () => state.file.size;\n    const getFile = () => state.file;\n\n    //\n    // logic to load a file\n    //\n    const load = (source, loader, onload) => {\n        // remember the original item source\n        state.source = source;\n\n        // source is known\n        api.fireSync('init');\n\n        // file stub is already there\n        if (state.file) {\n            api.fireSync('load-skip');\n            return;\n        }\n\n        // set a stub file object while loading the actual data\n        state.file = createFileStub(source);\n\n        // starts loading\n        loader.on('init', () => {\n            fire('load-init');\n        });\n\n        // we'eve received a size indication, let's update the stub\n        loader.on('meta', meta => {\n            // set size of file stub\n            state.file.size = meta.size;\n\n            // set name of file stub\n            state.file.filename = meta.filename;\n\n            // if has received source, we done\n            if (meta.source) {\n                origin = FileOrigin.LIMBO;\n                state.serverFileReference = meta.source;\n                state.status = ItemStatus.PROCESSING_COMPLETE;\n            }\n\n            // size has been updated\n            fire('load-meta');\n        });\n\n        // the file is now loading we need to update the progress indicators\n        loader.on('progress', progress => {\n            setStatus(ItemStatus.LOADING);\n\n            fire('load-progress', progress);\n        });\n\n        // an error was thrown while loading the file, we need to switch to error state\n        loader.on('error', error => {\n            setStatus(ItemStatus.LOAD_ERROR);\n\n            fire('load-request-error', error);\n        });\n\n        // user or another process aborted the file load (cannot retry)\n        loader.on('abort', () => {\n            setStatus(ItemStatus.INIT);\n            fire('load-abort');\n        });\n\n        // done loading\n        loader.on('load', file => {\n            // as we've now loaded the file the loader is no longer required\n            state.activeLoader = null;\n\n            // called when file has loaded succesfully\n            const success = result => {\n                // set (possibly) transformed file\n                state.file = isFile(result) ? result : state.file;\n\n                // file received\n                if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n                    setStatus(ItemStatus.PROCESSING_COMPLETE);\n                } else {\n                    setStatus(ItemStatus.IDLE);\n                }\n\n                fire('load');\n            };\n\n            const error = result => {\n                // set original file\n                state.file = file;\n                fire('load-meta');\n\n                setStatus(ItemStatus.LOAD_ERROR);\n                fire('load-file-error', result);\n            };\n\n            // if we already have a server file reference, we don't need to call the onload method\n            if (state.serverFileReference) {\n                success(file);\n                return;\n            }\n\n            // no server id, let's give this file the full treatment\n            onload(file, success, error);\n        });\n\n        // set loader source data\n        loader.setSource(source);\n\n        // set as active loader\n        state.activeLoader = loader;\n\n        // load the source data\n        loader.load();\n    };\n\n    const retryLoad = () => {\n        if (!state.activeLoader) {\n            return;\n        }\n        state.activeLoader.load();\n    };\n\n    const abortLoad = () => {\n        if (state.activeLoader) {\n            state.activeLoader.abort();\n            return;\n        }\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n    };\n\n    //\n    // logic to process a file\n    //\n    const process = (processor, onprocess) => {\n        // processing was aborted\n        if (state.processingAborted) {\n            state.processingAborted = false;\n            return;\n        }\n\n        // now processing\n        setStatus(ItemStatus.PROCESSING);\n\n        // reset abort callback\n        abortProcessingRequestComplete = null;\n\n        // if no file loaded we'll wait for the load event\n        if (!(state.file instanceof Blob)) {\n            api.on('load', () => {\n                process(processor, onprocess);\n            });\n            return;\n        }\n\n        // setup processor\n        processor.on('load', serverFileReference => {\n            // need this id to be able to revert the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n        });\n\n        // register transfer id\n        processor.on('transfer', transferId => {\n            // need this id to be able to revert the upload\n            state.transferId = transferId;\n        });\n\n        processor.on('load-perceived', serverFileReference => {\n            // no longer required\n            state.activeProcessor = null;\n\n            // need this id to be able to rever the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n            fire('process-complete', serverFileReference);\n        });\n\n        processor.on('start', () => {\n            fire('process-start');\n        });\n\n        processor.on('error', error => {\n            state.activeProcessor = null;\n            setStatus(ItemStatus.PROCESSING_ERROR);\n            fire('process-error', error);\n        });\n\n        processor.on('abort', serverFileReference => {\n            state.activeProcessor = null;\n\n            // if file was uploaded but processing was cancelled during perceived processor time store file reference\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.IDLE);\n            fire('process-abort');\n\n            // has timeout so doesn't interfere with remove action\n            if (abortProcessingRequestComplete) {\n                abortProcessingRequestComplete();\n            }\n        });\n\n        processor.on('progress', progress => {\n            fire('process-progress', progress);\n        });\n\n        // when successfully transformed\n        const success = file => {\n            // if was archived in the mean time, don't process\n            if (state.archived) return;\n\n            // process file!\n            processor.process(file, { ...metadata });\n        };\n\n        // something went wrong during transform phase\n        const error = console.error;\n\n        // start processing the file\n        onprocess(state.file, success, error);\n\n        // set as active processor\n        state.activeProcessor = processor;\n    };\n\n    const requestProcessing = () => {\n        state.processingAborted = false;\n        setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    const abortProcessing = () =>\n        new Promise(resolve => {\n            if (!state.activeProcessor) {\n                state.processingAborted = true;\n\n                setStatus(ItemStatus.IDLE);\n                fire('process-abort');\n\n                resolve();\n                return;\n            }\n\n            abortProcessingRequestComplete = () => {\n                resolve();\n            };\n\n            state.activeProcessor.abort();\n        });\n\n    //\n    // logic to revert a processed file\n    //\n    const revert = (revertFileUpload, forceRevert) =>\n        new Promise((resolve, reject) => {\n            // a completed upload will have a serverFileReference, a failed chunked upload where\n            // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set\n            const serverTransferId =\n                state.serverFileReference !== null ? state.serverFileReference : state.transferId;\n\n            // cannot revert without a server id for this process\n            if (serverTransferId === null) {\n                resolve();\n                return;\n            }\n\n            // revert the upload (fire and forget)\n            revertFileUpload(\n                serverTransferId,\n                () => {\n                    // reset file server id and transfer id as now it's not available on the server\n                    state.serverFileReference = null;\n                    state.transferId = null;\n                    resolve();\n                },\n                error => {\n                    // don't set error state when reverting is optional, it will always resolve\n                    if (!forceRevert) {\n                        resolve();\n                        return;\n                    }\n\n                    // oh no errors\n                    setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n                    fire('process-revert-error');\n                    reject(error);\n                }\n            );\n\n            // fire event\n            setStatus(ItemStatus.IDLE);\n            fire('process-revert');\n        });\n\n    // exposed methods\n    const setMetadata = (key, value, silent) => {\n        const keys = key.split('.');\n        const root = keys[0];\n        const last = keys.pop();\n        let data = metadata;\n        keys.forEach(key => (data = data[key]));\n\n        // compare old value against new value, if they're the same, we're not updating\n        if (JSON.stringify(data[last]) === JSON.stringify(value)) return;\n\n        // update value\n        data[last] = value;\n\n        // fire update\n        fire('metadata-update', {\n            key: root,\n            value: metadata[root],\n            silent,\n        });\n    };\n\n    const getMetadata = key => deepCloneObject(key ? metadata[key] : metadata);\n\n    const api = {\n        id: { get: () => id },\n        origin: { get: () => origin, set: value => (origin = value) },\n        serverId: { get: () => state.serverFileReference },\n        transferId: { get: () => state.transferId },\n        status: { get: () => state.status },\n        filename: { get: () => state.file.name },\n        filenameWithoutExtension: { get: () => getFilenameWithoutExtension(state.file.name) },\n        fileExtension: { get: getFileExtension },\n        fileType: { get: getFileType },\n        fileSize: { get: getFileSize },\n        file: { get: getFile },\n        relativePath: { get: () => state.file._relativePath },\n\n        source: { get: () => state.source },\n\n        getMetadata,\n        setMetadata: (key, value, silent) => {\n            if (isObject(key)) {\n                const data = key;\n                Object.keys(data).forEach(key => {\n                    setMetadata(key, data[key], value);\n                });\n                return key;\n            }\n            setMetadata(key, value, silent);\n            return value;\n        },\n\n        extend: (name, handler) => (itemAPI[name] = handler),\n\n        abortLoad,\n        retryLoad,\n        requestProcessing,\n        abortProcessing,\n\n        load,\n        process,\n        revert,\n\n        ...on(),\n\n        freeze: () => (state.frozen = true),\n\n        release: () => (state.released = true),\n        released: { get: () => state.released },\n\n        archive: () => (state.archived = true),\n        archived: { get: () => state.archived },\n    };\n\n    // create it here instead of returning it instantly so we can extend it later\n    const itemAPI = createObject(api);\n\n    return itemAPI;\n};\n\nconst getItemIndexByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return 0;\n    }\n\n    // invalid queries\n    if (!isString(query)) {\n        return -1;\n    }\n\n    // return item by id (or -1 if not found)\n    return items.findIndex(item => item.id === query);\n};\n\nconst getItemById = (items, itemId) => {\n    const index = getItemIndexByQuery(items, itemId);\n    if (index < 0) {\n        return;\n    }\n    return items[index] || null;\n};\n\nconst fetchBlob = (url, load, error, progress, abort, headers) => {\n    const request = sendRequest(null, url, {\n        method: 'GET',\n        responseType: 'blob',\n    });\n\n    request.onload = xhr => {\n        // get headers\n        const headers = xhr.getAllResponseHeaders();\n\n        // get filename\n        const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n        // create response\n        load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = xhr => {\n        error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = xhr => {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst getDomainFromURL = url => {\n    if (url.indexOf('//') === 0) {\n        url = location.protocol + url;\n    }\n    return url\n        .toLowerCase()\n        .replace('blob:', '')\n        .replace(/([a-z])?:\\/\\//, '$1')\n        .split('/')[0];\n};\n\nconst isExternalURL = url =>\n    (url.indexOf(':') > -1 || url.indexOf('//') > -1) &&\n    getDomainFromURL(location.href) !== getDomainFromURL(url);\n\nconst dynamicLabel = label => (...params) => (isFunction(label) ? label(...params) : label);\n\nconst isMockItem = item => !isFile(item.file);\n\nconst listUpdated = (dispatch, state) => {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(() => {\n        dispatch('DID_UPDATE_ITEMS', { items: getActiveItems(state.items) });\n    }, 0);\n};\n\nconst optionalPromise = (fn, ...params) =>\n    new Promise(resolve => {\n        if (!fn) {\n            return resolve(true);\n        }\n\n        const result = fn(...params);\n\n        if (result == null) {\n            return resolve(true);\n        }\n\n        if (typeof result === 'boolean') {\n            return resolve(result);\n        }\n\n        if (typeof result.then === 'function') {\n            result.then(resolve);\n        }\n    });\n\nconst sortItems = (state, compare) => {\n    state.items.sort((a, b) => compare(createItemAPI(a), createItemAPI(b)));\n};\n\n// returns item based on state\nconst getItemByQueryFromState = (state, itemHandler) => ({\n    query,\n    success = () => {},\n    failure = () => {},\n    ...options\n} = {}) => {\n    const item = getItemByQuery(state.items, query);\n    if (!item) {\n        failure({\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        });\n        return;\n    }\n    itemHandler(item, success, failure, options || {});\n};\n\nconst actions = (dispatch, query, state) => ({\n    /**\n     * Aborts all ongoing processes\n     */\n    ABORT_ALL: () => {\n        getActiveItems(state.items).forEach(item => {\n            item.freeze();\n            item.abortLoad();\n            item.abortProcessing();\n        });\n    },\n\n    /**\n     * Sets initial files\n     */\n    DID_SET_FILES: ({ value = [] }) => {\n        // map values to file objects\n        const files = value.map(file => ({\n            source: file.source ? file.source : file,\n            options: file.options,\n        }));\n\n        // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n        let activeItems = getActiveItems(state.items);\n\n        activeItems.forEach(item => {\n            // if item not is in new value, remove\n            if (!files.find(file => file.source === item.source || file.source === item.file)) {\n                dispatch('REMOVE_ITEM', { query: item, remove: false });\n            }\n        });\n\n        // add new files\n        activeItems = getActiveItems(state.items);\n        files.forEach((file, index) => {\n            // if file is already in list\n            if (activeItems.find(item => item.source === file.source || item.file === file.source))\n                return;\n\n            // not in list, add\n            dispatch('ADD_ITEM', {\n                ...file,\n                interactionMethod: InteractionMethod.NONE,\n                index,\n            });\n        });\n    },\n\n    DID_UPDATE_ITEM_METADATA: ({ id, action, change }) => {\n        // don't do anything\n        if (change.silent) return;\n\n        // if is called multiple times in close succession we combined all calls together to save resources\n        clearTimeout(state.itemUpdateTimeout);\n        state.itemUpdateTimeout = setTimeout(() => {\n            const item = getItemById(state.items, id);\n\n            // only revert and attempt to upload when we're uploading to a server\n            if (!query('IS_ASYNC')) {\n                // should we update the output data\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n                    item,\n                    query,\n                    action,\n                    change,\n                }).then(shouldPrepareOutput => {\n                    // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                    const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                    if (beforePrepareFile)\n                        shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                    if (!shouldPrepareOutput) return;\n\n                    dispatch(\n                        'REQUEST_PREPARE_OUTPUT',\n                        {\n                            query: id,\n                            item,\n                            success: file => {\n                                dispatch('DID_PREPARE_OUTPUT', { id, file });\n                            },\n                        },\n                        true\n                    );\n                });\n\n                return;\n            }\n\n            // if is local item we need to enable upload button so change can be propagated to server\n            if (item.origin === FileOrigin.LOCAL) {\n                dispatch('DID_LOAD_ITEM', {\n                    id: item.id,\n                    error: null,\n                    serverFileReference: item.source,\n                });\n            }\n\n            // for async scenarios\n            const upload = () => {\n                // we push this forward a bit so the interface is updated correctly\n                setTimeout(() => {\n                    dispatch('REQUEST_ITEM_PROCESSING', { query: id });\n                }, 32);\n            };\n\n            const revert = doUpload => {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(doUpload ? upload : () => {})\n                    .catch(() => {});\n            };\n\n            const abort = doUpload => {\n                item.abortProcessing().then(doUpload ? upload : () => {});\n            };\n\n            // if we should re-upload the file immediately\n            if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n                return revert(state.options.instantUpload);\n            }\n\n            // if currently uploading, cancel upload\n            if (item.status === ItemStatus.PROCESSING) {\n                return abort(state.options.instantUpload);\n            }\n\n            if (state.options.instantUpload) {\n                upload();\n            }\n        }, 0);\n    },\n\n    MOVE_ITEM: ({ query, index }) => {\n        const item = getItemByQuery(state.items, query);\n        if (!item) return;\n        const currentIndex = state.items.indexOf(item);\n        index = limit(index, 0, state.items.length - 1);\n        if (currentIndex === index) return;\n        state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);\n    },\n\n    SORT: ({ compare }) => {\n        sortItems(state, compare);\n        dispatch('DID_SORT_ITEMS', {\n            items: query('GET_ACTIVE_ITEMS'),\n        });\n    },\n\n    ADD_ITEMS: ({ items, index, interactionMethod, success = () => {}, failure = () => {} }) => {\n        let currentIndex = index;\n\n        if (index === -1 || typeof index === 'undefined') {\n            const insertLocation = query('GET_ITEM_INSERT_LOCATION');\n            const totalItems = query('GET_TOTAL_ITEMS');\n            currentIndex = insertLocation === 'before' ? 0 : totalItems;\n        }\n\n        const ignoredFiles = query('GET_IGNORED_FILES');\n        const isValidFile = source =>\n            isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n        const validItems = items.filter(isValidFile);\n\n        const promises = validItems.map(\n            source =>\n                new Promise((resolve, reject) => {\n                    dispatch('ADD_ITEM', {\n                        interactionMethod,\n                        source: source.source || source,\n                        success: resolve,\n                        failure: reject,\n                        index: currentIndex++,\n                        options: source.options || {},\n                    });\n                })\n        );\n\n        Promise.all(promises)\n            .then(success)\n            .catch(failure);\n    },\n\n    /**\n     * @param source\n     * @param index\n     * @param interactionMethod\n     */\n    ADD_ITEM: ({\n        source,\n        index = -1,\n        interactionMethod,\n        success = () => {},\n        failure = () => {},\n        options = {},\n    }) => {\n        // if no source supplied\n        if (isEmpty(source)) {\n            failure({\n                error: createResponse('error', 0, 'No source'),\n                file: null,\n            });\n            return;\n        }\n\n        // filter out invalid file items, used to filter dropped directory contents\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n            // fail silently\n            return;\n        }\n\n        // test if there's still room in the list of files\n        if (!hasRoomForItem(state)) {\n            // if multiple allowed, we can't replace\n            // or if only a single item is allowed but we're not allowed to replace it we exit\n            if (\n                state.options.allowMultiple ||\n                (!state.options.allowMultiple && !state.options.allowReplace)\n            ) {\n                const error = createResponse('warning', 0, 'Max files');\n\n                dispatch('DID_THROW_MAX_FILES', {\n                    source,\n                    error,\n                });\n\n                failure({ error, file: null });\n\n                return;\n            }\n\n            // let's replace the item\n            // id of first item we're about to remove\n            const item = getActiveItems(state.items)[0];\n\n            // if has been processed remove it from the server as well\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                const forceRevert = query('GET_FORCE_REVERT');\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    forceRevert\n                )\n                    .then(() => {\n                        if (!forceRevert) return;\n\n                        // try to add now\n                        dispatch('ADD_ITEM', {\n                            source,\n                            index,\n                            interactionMethod,\n                            success,\n                            failure,\n                            options,\n                        });\n                    })\n                    .catch(() => {}); // no need to handle this catch state for now\n\n                if (forceRevert) return;\n            }\n\n            // remove first item as it will be replaced by this item\n            dispatch('REMOVE_ITEM', { query: item.id });\n        }\n\n        // where did the file originate\n        const origin =\n            options.type === 'local'\n                ? FileOrigin.LOCAL\n                : options.type === 'limbo'\n                ? FileOrigin.LIMBO\n                : FileOrigin.INPUT;\n\n        // create a new blank item\n        const item = createItem(\n            // where did this file come from\n            origin,\n\n            // an input file never has a server file reference\n            origin === FileOrigin.INPUT ? null : source,\n\n            // file mock data, if defined\n            options.file\n        );\n\n        // set initial meta data\n        Object.keys(options.metadata || {}).forEach(key => {\n            item.setMetadata(key, options.metadata[key]);\n        });\n\n        // created the item, let plugins add methods\n        applyFilters('DID_CREATE_ITEM', item, { query, dispatch });\n\n        // where to insert new items\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n        // adjust index if is not allowed to pick location\n        if (!state.options.itemInsertLocationFreedom) {\n            index = itemInsertLocation === 'before' ? -1 : state.items.length;\n        }\n\n        // add item to list\n        insertItem(state.items, item, index);\n\n        // sort items in list\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // get a quick reference to the item id\n        const id = item.id;\n\n        // observe item events\n        item.on('init', () => {\n            dispatch('DID_INIT_ITEM', { id });\n        });\n\n        item.on('load-init', () => {\n            dispatch('DID_START_ITEM_LOAD', { id });\n        });\n\n        item.on('load-meta', () => {\n            dispatch('DID_UPDATE_ITEM_META', { id });\n        });\n\n        item.on('load-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', { id, progress });\n        });\n\n        item.on('load-request-error', error => {\n            const mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);\n\n            // is client error, no way to recover\n            if (error.code >= 400 && error.code < 500) {\n                dispatch('DID_THROW_ITEM_INVALID', {\n                    id,\n                    error,\n                    status: {\n                        main: mainStatus,\n                        sub: `${error.code} (${error.body})`,\n                    },\n                });\n\n                // reject the file so can be dealt with through API\n                failure({ error, file: createItemAPI(item) });\n                return;\n            }\n\n            // is possible server error, so might be possible to retry\n            dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n                id,\n                error,\n                status: {\n                    main: mainStatus,\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('load-file-error', error => {\n            dispatch('DID_THROW_ITEM_INVALID', {\n                id,\n                error: error.status,\n                status: error.status,\n            });\n            failure({ error: error.status, file: createItemAPI(item) });\n        });\n\n        item.on('load-abort', () => {\n            dispatch('REMOVE_ITEM', { query: id });\n        });\n\n        item.on('load-skip', () => {\n            dispatch('COMPLETE_LOAD_ITEM', {\n                query: id,\n                item,\n                data: {\n                    source,\n                    success,\n                },\n            });\n        });\n\n        item.on('load', () => {\n            const handleAdd = shouldAdd => {\n                // no should not add this file\n                if (!shouldAdd) {\n                    dispatch('REMOVE_ITEM', {\n                        query: id,\n                    });\n                    return;\n                }\n\n                // now interested in metadata updates\n                item.on('metadata-update', change => {\n                    dispatch('DID_UPDATE_ITEM_METADATA', { id, change });\n                });\n\n                // let plugins decide if the output data should be prepared at this point\n                // means we'll do this and wait for idle state\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, { item, query }).then(\n                    shouldPrepareOutput => {\n                        // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                        const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                        if (beforePrepareFile)\n                            shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                        const loadComplete = () => {\n                            dispatch('COMPLETE_LOAD_ITEM', {\n                                query: id,\n                                item,\n                                data: {\n                                    source,\n                                    success,\n                                },\n                            });\n\n                            listUpdated(dispatch, state);\n                        };\n\n                        // exit\n                        if (shouldPrepareOutput) {\n                            // wait for idle state and then run PREPARE_OUTPUT\n                            dispatch(\n                                'REQUEST_PREPARE_OUTPUT',\n                                {\n                                    query: id,\n                                    item,\n                                    success: file => {\n                                        dispatch('DID_PREPARE_OUTPUT', { id, file });\n                                        loadComplete();\n                                    },\n                                },\n                                true\n                            );\n\n                            return;\n                        }\n\n                        loadComplete();\n                    }\n                );\n            };\n\n            // item loaded, allow plugins to\n            // - read data (quickly)\n            // - add metadata\n            applyFilterChain('DID_LOAD_ITEM', item, { query, dispatch })\n                .then(() => {\n                    optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(\n                        handleAdd\n                    );\n                })\n                .catch(e => {\n                    if (!e || !e.error || !e.status) return handleAdd(false);\n                    dispatch('DID_THROW_ITEM_INVALID', {\n                        id,\n                        error: e.error,\n                        status: e.status,\n                    });\n                });\n        });\n\n        item.on('process-start', () => {\n            dispatch('DID_START_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', { id, progress });\n        });\n\n        item.on('process-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-revert-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-complete', serverFileReference => {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id,\n                error: null,\n                serverFileReference,\n            });\n            dispatch('DID_DEFINE_VALUE', { id, value: serverFileReference });\n        });\n\n        item.on('process-abort', () => {\n            dispatch('DID_ABORT_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-revert', () => {\n            dispatch('DID_REVERT_ITEM_PROCESSING', { id });\n            dispatch('DID_DEFINE_VALUE', { id, value: null });\n        });\n\n        // let view know the item has been inserted\n        dispatch('DID_ADD_ITEM', { id, index, interactionMethod });\n\n        listUpdated(dispatch, state);\n\n        // start loading the source\n        const { url, load, restore, fetch } = state.options.server || {};\n\n        item.load(\n            source,\n\n            // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n            createFileLoader(\n                origin === FileOrigin.INPUT\n                    ? // input, if is remote, see if should use custom fetch, else use default fetchBlob\n                      isString(source) && isExternalURL(source)\n                        ? fetch\n                            ? createFetchFunction(url, fetch)\n                            : fetchBlob // remote url\n                        : fetchBlob // try to fetch url\n                    : // limbo or local\n                    origin === FileOrigin.LIMBO\n                    ? createFetchFunction(url, restore) // limbo\n                    : createFetchFunction(url, load) // local\n            ),\n\n            // called when the file is loaded so it can be piped through the filters\n            (file, success, error) => {\n                // let's process the file\n                applyFilterChain('LOAD_FILE', file, { query })\n                    .then(success)\n                    .catch(error);\n            }\n        );\n    },\n\n    REQUEST_PREPARE_OUTPUT: ({ item, success, failure = () => {} }) => {\n        // error response if item archived\n        const err = {\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        };\n\n        // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n        if (item.archived) return failure(err);\n\n        // allow plugins to alter the file data\n        applyFilterChain('PREPARE_OUTPUT', item.file, { query, item }).then(result => {\n            applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, { query, item }).then(result => {\n                // don't handle archived items, an item could have been archived (load aborted) while being prepared\n                if (item.archived) return failure(err);\n\n                // we done!\n                success(result);\n            });\n        });\n    },\n\n    COMPLETE_LOAD_ITEM: ({ item, data }) => {\n        const { success, source } = data;\n\n        // sort items in list\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // let interface know the item has loaded\n        dispatch('DID_LOAD_ITEM', {\n            id: item.id,\n            error: null,\n            serverFileReference: item.origin === FileOrigin.INPUT ? null : source,\n        });\n\n        // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n        success(createItemAPI(item));\n\n        // if this is a local server file we need to show a different state\n        if (item.origin === FileOrigin.LOCAL) {\n            dispatch('DID_LOAD_LOCAL_ITEM', { id: item.id });\n            return;\n        }\n\n        // if is a temp server file we prevent async upload call here (as the file is already on the server)\n        if (item.origin === FileOrigin.LIMBO) {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id: item.id,\n                error: null,\n                serverFileReference: source,\n            });\n\n            dispatch('DID_DEFINE_VALUE', {\n                id: item.id,\n                value: item.serverId || source,\n            });\n            return;\n        }\n\n        // id we are allowed to upload the file immediately, lets do it\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n            dispatch('REQUEST_ITEM_PROCESSING', { query: item.id });\n        }\n    },\n\n    RETRY_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        // try loading the source one more time\n        item.retryLoad();\n    }),\n\n    REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, (item, success, failure) => {\n        dispatch(\n            'REQUEST_PREPARE_OUTPUT',\n            {\n                query: item.id,\n                item,\n                success: file => {\n                    dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n                    success({\n                        file: item,\n                        output: file,\n                    });\n                },\n                failure,\n            },\n            true\n        );\n    }),\n\n    REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, (item, success, failure) => {\n        // cannot be queued (or is already queued)\n        const itemCanBeQueuedForProcessing =\n            // waiting for something\n            item.status === ItemStatus.IDLE ||\n            // processing went wrong earlier\n            item.status === ItemStatus.PROCESSING_ERROR;\n\n        // not ready to be processed\n        if (!itemCanBeQueuedForProcessing) {\n            const processNow = () =>\n                dispatch('REQUEST_ITEM_PROCESSING', { query: item, success, failure });\n\n            const process = () => (document.hidden ? processNow() : setTimeout(processNow, 32));\n\n            // if already done processing or tried to revert but didn't work, try again\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(process)\n                    .catch(() => {}); // don't continue with processing if something went wrong\n            } else if (item.status === ItemStatus.PROCESSING) {\n                item.abortProcessing().then(process);\n            }\n\n            return;\n        }\n\n        // already queued for processing\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n\n        item.requestProcessing();\n\n        dispatch('DID_REQUEST_ITEM_PROCESSING', { id: item.id });\n\n        dispatch('PROCESS_ITEM', { query: item, success, failure }, true);\n    }),\n\n    PROCESS_ITEM: getItemByQueryFromState(state, (item, success, failure) => {\n        const maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        const totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length;\n\n        // queue and wait till queue is freed up\n        if (totalCurrentUploads === maxParallelUploads) {\n            // queue for later processing\n            state.processingQueue.push({\n                id: item.id,\n                success,\n                failure,\n            });\n\n            // stop it!\n            return;\n        }\n\n        // if was not queued or is already processing exit here\n        if (item.status === ItemStatus.PROCESSING) return;\n\n        const processNext = () => {\n            // process queueud items\n            const queueEntry = state.processingQueue.shift();\n\n            // no items left\n            if (!queueEntry) return;\n\n            // get item reference\n            const { id, success, failure } = queueEntry;\n            const itemReference = getItemByQuery(state.items, id);\n\n            // if item was archived while in queue, jump to next\n            if (!itemReference || itemReference.archived) {\n                processNext();\n                return;\n            }\n\n            // process queued item\n            dispatch('PROCESS_ITEM', { query: id, success, failure }, true);\n        };\n\n        // we done function\n        item.onOnce('process-complete', () => {\n            success(createItemAPI(item));\n            processNext();\n\n            // if origin is local, and we're instant uploading, trigger remove of original\n            // as revert will remove file from list\n            const server = state.options.server;\n            const instantUpload = state.options.instantUpload;\n            if (instantUpload && item.origin === FileOrigin.LOCAL && isFunction(server.remove)) {\n                const noop = () => {};\n                item.origin = FileOrigin.LIMBO;\n                state.options.server.remove(item.source, noop, noop);\n            }\n\n            // All items processed? No errors?\n            const allItemsProcessed =\n                query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length ===\n                state.items.length;\n            if (allItemsProcessed) {\n                dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n            }\n        });\n\n        // we error function\n        item.onOnce('process-error', error => {\n            failure({ error, file: createItemAPI(item) });\n            processNext();\n        });\n\n        // start file processing\n        const options = state.options;\n        item.process(\n            createFileProcessor(\n                createProcessorFunction(options.server.url, options.server.process, options.name, {\n                    chunkTransferId: item.transferId,\n                    chunkServer: options.server.patch,\n                    chunkUploads: options.chunkUploads,\n                    chunkForce: options.chunkForce,\n                    chunkSize: options.chunkSize,\n                    chunkRetryDelays: options.chunkRetryDelays,\n                }),\n                {\n                    allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION'),\n                }\n            ),\n            // called when the file is about to be processed so it can be piped through the transform filters\n            (file, success, error) => {\n                // allow plugins to alter the file data\n                applyFilterChain('PREPARE_OUTPUT', file, { query, item })\n                    .then(file => {\n                        dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n\n                        success(file);\n                    })\n                    .catch(error);\n            }\n        );\n    }),\n\n    RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        dispatch('REQUEST_ITEM_PROCESSING', { query: item });\n    }),\n\n    REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, item => {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(shouldRemove => {\n            if (!shouldRemove) {\n                return;\n            }\n            dispatch('REMOVE_ITEM', { query: item });\n        });\n    }),\n\n    RELEASE_ITEM: getItemByQueryFromState(state, item => {\n        item.release();\n    }),\n\n    REMOVE_ITEM: getItemByQueryFromState(state, (item, success, failure, options) => {\n        const removeFromView = () => {\n            // get id reference\n            const id = item.id;\n\n            // archive the item, this does not remove it from the list\n            getItemById(state.items, id).archive();\n\n            // tell the view the item has been removed\n            dispatch('DID_REMOVE_ITEM', { error: null, id, item });\n\n            // now the list has been modified\n            listUpdated(dispatch, state);\n\n            // correctly removed\n            success(createItemAPI(item));\n        };\n\n        // if this is a local file and the `server.remove` function has been configured,\n        // send source there so dev can remove file from server\n        const server = state.options.server;\n        if (\n            item.origin === FileOrigin.LOCAL &&\n            server &&\n            isFunction(server.remove) &&\n            options.remove !== false\n        ) {\n            dispatch('DID_START_ITEM_REMOVE', { id: item.id });\n\n            server.remove(\n                item.source,\n                () => removeFromView(),\n                status => {\n                    dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n                        id: item.id,\n                        error: createResponse('error', 0, status, null),\n                        status: {\n                            main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                            sub: state.options.labelTapToRetry,\n                        },\n                    });\n                }\n            );\n        } else {\n            // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)\n            if (\n                (options.revert && item.origin !== FileOrigin.LOCAL && item.serverId !== null) ||\n                // if chunked uploads are enabled and we're uploading in chunks for this specific file\n                // or if the file isn't big enough for chunked uploads but chunkForce is set then call\n                // revert before removing from the view...\n                (state.options.chunkUploads && item.file.size > state.options.chunkSize) ||\n                (state.options.chunkUploads && state.options.chunkForce)\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                );\n            }\n\n            // can now safely remove from view\n            removeFromView();\n        }\n    }),\n\n    ABORT_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        item.abortLoad();\n    }),\n\n    ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // test if is already processed\n        if (item.serverId) {\n            dispatch('REVERT_ITEM_PROCESSING', { id: item.id });\n            return;\n        }\n\n        // abort\n        item.abortProcessing().then(() => {\n            const shouldRemove = state.options.instantUpload;\n            if (shouldRemove) {\n                dispatch('REMOVE_ITEM', { query: item.id });\n            }\n        });\n    }),\n\n    REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // not instant uploading, revert immediately\n        if (!state.options.instantUpload) {\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n            return;\n        }\n\n        // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n        const handleRevert = shouldRevert => {\n            if (!shouldRevert) return;\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n        };\n\n        const fn = query('GET_BEFORE_REMOVE_FILE');\n        if (!fn) {\n            return handleRevert(true);\n        }\n\n        const requestRemoveResult = fn(createItemAPI(item));\n        if (requestRemoveResult == null) {\n            // undefined or null\n            return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n            return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n            requestRemoveResult.then(handleRevert);\n        }\n    }),\n\n    REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        item.revert(\n            createRevertFunction(state.options.server.url, state.options.server.revert),\n            query('GET_FORCE_REVERT')\n        )\n            .then(() => {\n                const shouldRemove = state.options.instantUpload || isMockItem(item);\n                if (shouldRemove) {\n                    dispatch('REMOVE_ITEM', { query: item.id });\n                }\n            })\n            .catch(() => {});\n    }),\n\n    SET_OPTIONS: ({ options }) => {\n        // get all keys passed\n        const optionKeys = Object.keys(options);\n\n        // get prioritized keyed to include (remove once not in options object)\n        const prioritizedOptionKeys = PrioritizedOptions.filter(key => optionKeys.includes(key));\n\n        // order the keys, prioritized first, then rest\n        const orderedOptionKeys = [\n            // add prioritized first if passed to options, else remove\n            ...prioritizedOptionKeys,\n\n            // prevent duplicate keys\n            ...Object.keys(options).filter(key => !prioritizedOptionKeys.includes(key)),\n        ];\n\n        // dispatch set event for each option\n        orderedOptionKeys.forEach(key => {\n            dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                value: options[key],\n            });\n        });\n    },\n});\n\nconst PrioritizedOptions = [\n    'server', // must be processed before \"files\"\n];\n\nconst formatFilename = name => name;\n\nconst createElement$1 = tagName => {\n    return document.createElement(tagName);\n};\n\nconst text = (node, value) => {\n    let textNode = node.childNodes[0];\n    if (!textNode) {\n        textNode = document.createTextNode(value);\n        node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n        textNode.nodeValue = value;\n    }\n};\n\nconst polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = (((angleInDegrees % 360) - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n};\n\nconst describeArc = (x, y, radius, startAngle, endAngle, arcSweep) => {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n};\n\nconst percentageArc = (x, y, radius, from, to) => {\n    let arcSweep = 1;\n    if (to > from && to - from <= 0.5) {\n        arcSweep = 0;\n    }\n    if (from > to && from - to >= 0.5) {\n        arcSweep = 0;\n    }\n    return describeArc(\n        x,\n        y,\n        radius,\n        Math.min(0.9999, from) * 360,\n        Math.min(0.9999, to) * 360,\n        arcSweep\n    );\n};\n\nconst create = ({ root, props }) => {\n    // start at 0\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0;\n\n    // svg\n    const svg = createElement('svg');\n    root.ref.path = createElement('path', {\n        'stroke-width': 2,\n        'stroke-linecap': 'round',\n    });\n    svg.appendChild(root.ref.path);\n\n    root.ref.svg = svg;\n\n    root.appendChild(svg);\n};\n\nconst write = ({ root, props }) => {\n    if (props.opacity === 0) {\n        return;\n    }\n\n    if (props.align) {\n        root.element.dataset.align = props.align;\n    }\n\n    // get width of stroke\n    const ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);\n\n    // calculate size of ring\n    const size = root.rect.element.width * 0.5;\n\n    // ring state\n    let ringFrom = 0;\n    let ringTo = 0;\n\n    // now in busy mode\n    if (props.spin) {\n        ringFrom = 0;\n        ringTo = 0.5;\n    } else {\n        ringFrom = 0;\n        ringTo = props.progress;\n    }\n\n    // get arc path\n    const coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);\n\n    // update progress bar\n    attr(root.ref.path, 'd', coordinates);\n\n    // hide while contains 0 value\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n};\n\nconst progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create,\n    write,\n    mixins: {\n        apis: ['progress', 'spin', 'align'],\n        styles: ['opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 500 },\n            progress: {\n                type: 'spring',\n                stiffness: 0.95,\n                damping: 0.65,\n                mass: 10,\n            },\n        },\n    },\n});\n\nconst create$1 = ({ root, props }) => {\n    root.element.innerHTML = (props.icon || '') + `<span>${props.label}</span>`;\n\n    props.isDisabled = false;\n};\n\nconst write$1 = ({ root, props }) => {\n    const { isDisabled } = props;\n    const shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n\n    if (shouldDisable && !isDisabled) {\n        props.isDisabled = true;\n        attr(root.element, 'disabled', 'disabled');\n    } else if (!shouldDisable && isDisabled) {\n        props.isDisabled = false;\n        root.element.removeAttribute('disabled');\n    }\n};\n\nconst fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n        type: 'button',\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n        apis: ['label'],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n        listeners: true,\n    },\n    create: create$1,\n    write: write$1,\n});\n\nconst toNaturalFileSize = (bytes, decimalSeparator = '.', base = 1000, options = {}) => {\n    const {\n        labelBytes = 'bytes',\n        labelKilobytes = 'KB',\n        labelMegabytes = 'MB',\n        labelGigabytes = 'GB',\n    } = options;\n\n    // no negative byte sizes\n    bytes = Math.round(Math.abs(bytes));\n\n    const KB = base;\n    const MB = base * base;\n    const GB = base * base * base;\n\n    // just bytes\n    if (bytes < KB) {\n        return `${bytes} ${labelBytes}`;\n    }\n\n    // kilobytes\n    if (bytes < MB) {\n        return `${Math.floor(bytes / KB)} ${labelKilobytes}`;\n    }\n\n    // megabytes\n    if (bytes < GB) {\n        return `${removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator)} ${labelMegabytes}`;\n    }\n\n    // gigabytes\n    return `${removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator)} ${labelGigabytes}`;\n};\n\nconst removeDecimalsWhenZero = (value, decimalCount, separator) => {\n    return value\n        .toFixed(decimalCount)\n        .split('.')\n        .filter(part => part !== '0')\n        .join(separator);\n};\n\nconst create$2 = ({ root, props }) => {\n    // filename\n    const fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main';\n    // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName;\n\n    // filesize\n    const fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize;\n\n    // set initial values\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFile = ({ root, props }) => {\n    text(\n        root.ref.fileSize,\n        toNaturalFileSize(\n            root.query('GET_ITEM_SIZE', props.id),\n            '.',\n            root.query('GET_FILE_SIZE_BASE'),\n            root.query('GET_FILE_SIZE_LABELS', root.query)\n        )\n    );\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFileSizeOnError = ({ root, props }) => {\n    // if size is available don't fallback to unknown size message\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n        updateFile({ root, props });\n        return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n};\n\nconst fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: updateFile,\n        DID_UPDATE_ITEM_META: updateFile,\n        DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n        DID_THROW_ITEM_INVALID: updateFileSizeOnError,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$2,\n    mixins: {\n        styles: ['translateX', 'translateY'],\n        animations: {\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst toPercentage = value => Math.round(value * 100);\n\nconst create$3 = ({ root }) => {\n    // main status\n    const main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main;\n\n    // sub status\n    const sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n\n    didSetItemLoadProgress({ root, action: { progress: null } });\n};\n\nconst didSetItemLoadProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_LOADING')\n            : `${root.query('GET_LABEL_FILE_LOADING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didSetItemProcessProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_PROCESSING')\n            : `${root.query('GET_LABEL_FILE_PROCESSING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didRequestItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didAbortItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n};\n\nconst didCompleteItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n};\n\nconst clear = ({ root }) => {\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n};\n\nconst error = ({ root, action }) => {\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n};\n\nconst fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: clear,\n        DID_REVERT_ITEM_PROCESSING: clear,\n        DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n        DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n        DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n        DID_THROW_ITEM_LOAD_ERROR: error,\n        DID_THROW_ITEM_INVALID: error,\n        DID_THROW_ITEM_PROCESSING_ERROR: error,\n        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n        DID_THROW_ITEM_REMOVE_ERROR: error,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$3,\n    mixins: {\n        styles: ['translateX', 'translateY', 'opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 250 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\n/**\n * Button definitions for the file view\n */\n\nconst Buttons = {\n    AbortItemLoad: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n        action: 'ABORT_ITEM_LOAD',\n        className: 'filepond--action-abort-item-load',\n        align: 'LOAD_INDICATOR_POSITION', // right\n    },\n    RetryItemLoad: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n        action: 'RETRY_ITEM_LOAD',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-load',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RemoveItem: {\n        label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n        action: 'REQUEST_REMOVE_ITEM',\n        icon: 'GET_ICON_REMOVE',\n        className: 'filepond--action-remove-item',\n        align: 'BUTTON_REMOVE_ITEM_POSITION', // left\n    },\n    ProcessItem: {\n        label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n        action: 'REQUEST_ITEM_PROCESSING',\n        icon: 'GET_ICON_PROCESS',\n        className: 'filepond--action-process-item',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    AbortItemProcessing: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n        action: 'ABORT_ITEM_PROCESSING',\n        className: 'filepond--action-abort-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RetryItemProcessing: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n        action: 'RETRY_ITEM_PROCESSING',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RevertItemProcessing: {\n        label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n        action: 'REQUEST_REVERT_ITEM_PROCESSING',\n        icon: 'GET_ICON_UNDO',\n        className: 'filepond--action-revert-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n};\n\n// make a list of buttons, we can then remove buttons from this list if they're disabled\nconst ButtonKeys = [];\nforin(Buttons, key => {\n    ButtonKeys.push(key);\n});\n\nconst calculateFileInfoOffset = root => {\n    if (getRemoveIndicatorAligment(root) === 'right') return 0;\n    const buttonRect = root.ref.buttonRemoveItem.rect.element;\n    return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;\n};\n\nconst calculateButtonWidth = root => {\n    const buttonRect = root.ref.buttonAbortItemLoad.rect.element;\n    return buttonRect.width;\n};\n\n// Force on full pixels so text stays crips\nconst calculateFileVerticalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\nconst calculateFileHorizontalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n\nconst getLoadIndicatorAlignment = root => root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\nconst getProcessIndicatorAlignment = root => root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\nconst getRemoveIndicatorAligment = root => root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n\nconst DefaultStyle = {\n    buttonAbortItemLoad: { opacity: 0 },\n    buttonRetryItemLoad: { opacity: 0 },\n    buttonRemoveItem: { opacity: 0 },\n    buttonProcessItem: { opacity: 0 },\n    buttonAbortItemProcessing: { opacity: 0 },\n    buttonRetryItemProcessing: { opacity: 0 },\n    buttonRevertItemProcessing: { opacity: 0 },\n    loadProgressIndicator: { opacity: 0, align: getLoadIndicatorAlignment },\n    processProgressIndicator: { opacity: 0, align: getProcessIndicatorAlignment },\n    processingCompleteIndicator: { opacity: 0, scaleX: 0.75, scaleY: 0.75 },\n    info: { translateX: 0, translateY: 0, opacity: 0 },\n    status: { translateX: 0, translateY: 0, opacity: 0 },\n};\n\nconst IdleStyle = {\n    buttonRemoveItem: { opacity: 1 },\n    buttonProcessItem: { opacity: 1 },\n    info: { translateX: calculateFileInfoOffset },\n    status: { translateX: calculateFileInfoOffset },\n};\n\nconst ProcessingStyle = {\n    buttonAbortItemProcessing: { opacity: 1 },\n    processProgressIndicator: { opacity: 1 },\n    status: { opacity: 1 },\n};\n\nconst StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset, opacity: 1 },\n    },\n    DID_START_ITEM_LOAD: {\n        buttonAbortItemLoad: { opacity: 1 },\n        loadProgressIndicator: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n        buttonRetryItemLoad: { opacity: 1 },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_START_ITEM_REMOVE: {\n        processProgressIndicator: { opacity: 1, align: getRemoveIndicatorAligment },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 0 },\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n        processProgressIndicator: { opacity: 0, align: getRemoveIndicatorAligment },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1, translateX: calculateFileInfoOffset },\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset },\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        info: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonRetryItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { opacity: 1 },\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonProcessItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle,\n};\n\n// complete indicator view\nconst processingCompleteIndicatorView = createView({\n    create: ({ root }) => {\n        root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n        styles: ['scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\n/**\n * Creates the file view\n */\nconst create$4 = ({ root, props }) => {\n    // copy Buttons object\n    const LocalButtons = Object.keys(Buttons).reduce((prev, curr) => {\n        prev[curr] = { ...Buttons[curr] };\n        return prev;\n    }, {});\n\n    const { id } = props;\n\n    // allow reverting upload\n    const allowRevert = root.query('GET_ALLOW_REVERT');\n\n    // allow remove file\n    const allowRemove = root.query('GET_ALLOW_REMOVE');\n\n    // allow processing upload\n    const allowProcess = root.query('GET_ALLOW_PROCESS');\n\n    // is instant uploading, need this to determine the icon of the undo button\n    const instantUpload = root.query('GET_INSTANT_UPLOAD');\n\n    // is async set up\n    const isAsync = root.query('IS_ASYNC');\n\n    // should align remove item buttons\n    const alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');\n\n    // enabled buttons array\n    let buttonFilter;\n    if (isAsync) {\n        if (allowProcess && !allowRevert) {\n            // only remove revert button\n            buttonFilter = key => !/RevertItemProcessing/.test(key);\n        } else if (!allowProcess && allowRevert) {\n            // only remove process button\n            buttonFilter = key => !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);\n        } else if (!allowProcess && !allowRevert) {\n            // remove all process buttons\n            buttonFilter = key => !/Process/.test(key);\n        }\n    } else {\n        // no process controls available\n        buttonFilter = key => !/Process/.test(key);\n    }\n\n    const enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();\n\n    // update icon and label for revert button when instant uploading\n    if (instantUpload && allowRevert) {\n        LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n        LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    }\n\n    // remove last button (revert) if not allowed\n    if (isAsync && !allowRevert) {\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileHorizontalCenterOffset;\n        map.info.translateY = calculateFileVerticalCenterOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // should align center\n    if (isAsync && !allowProcess) {\n        [\n            'DID_START_ITEM_PROCESSING',\n            'DID_REQUEST_ITEM_PROCESSING',\n            'DID_UPDATE_ITEM_PROCESS_PROGRESS',\n            'DID_THROW_ITEM_PROCESSING_ERROR',\n        ].forEach(key => {\n            StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;\n        });\n        StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;\n    }\n\n    // move remove button to right\n    if (alignRemoveItemButton && allowRevert) {\n        LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileInfoOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // show/hide RemoveItem button\n    if (!allowRemove) {\n        LocalButtons['RemoveItem'].disabled = true;\n    }\n\n    // create the button views\n    forin(LocalButtons, (key, definition) => {\n        // create button\n        const buttonView = root.createChildView(fileActionButton, {\n            label: root.query(definition.label),\n            icon: root.query(definition.icon),\n            opacity: 0,\n        });\n\n        // should be appended?\n        if (enabledButtons.includes(key)) {\n            root.appendChildView(buttonView);\n        }\n\n        // toggle\n        if (definition.disabled) {\n            buttonView.element.setAttribute('disabled', 'disabled');\n            buttonView.element.setAttribute('hidden', 'hidden');\n        }\n\n        // add position attribute\n        buttonView.element.dataset.align = root.query(`GET_STYLE_${definition.align}`);\n\n        // add class\n        buttonView.element.classList.add(definition.className);\n\n        // handle interactions\n        buttonView.on('click', e => {\n            e.stopPropagation();\n            if (definition.disabled) return;\n            root.dispatch(definition.action, { query: id });\n        });\n\n        // set reference\n        root.ref[`button${key}`] = buttonView;\n    });\n\n    // checkmark\n    root.ref.processingCompleteIndicator = root.appendChildView(\n        root.createChildView(processingCompleteIndicatorView)\n    );\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query(\n        `GET_STYLE_BUTTON_PROCESS_ITEM_POSITION`\n    );\n\n    // create file info view\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, { id }));\n\n    // create file status view\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, { id }));\n\n    // add progress indicators\n    const loadIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_LOAD_INDICATOR_POSITION`),\n        })\n    );\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n\n    const progressIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_PROGRESS_INDICATOR_POSITION`),\n        })\n    );\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n\n    // current active styles\n    root.ref.activeStyles = [];\n};\n\nconst write$2 = ({ root, actions, props }) => {\n    // route actions\n    route({ root, actions, props });\n\n    // select last state change action\n    let action = actions\n        .concat()\n        .filter(action => /^DID_/.test(action.type))\n        .reverse()\n        .find(action => StyleMap[action.type]);\n\n    // a new action happened, let's get the matching styles\n    if (action) {\n        // define new active styles\n        root.ref.activeStyles = [];\n\n        const stylesToApply = StyleMap[action.type];\n        forin(DefaultStyle, (name, defaultStyles) => {\n            // get reference to control\n            const control = root.ref[name];\n\n            // loop over all styles for this control\n            forin(defaultStyles, (key, defaultValue) => {\n                const value =\n                    stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined'\n                        ? stylesToApply[name][key]\n                        : defaultValue;\n                root.ref.activeStyles.push({ control, key, value });\n            });\n        });\n    }\n\n    // apply active styles to element\n    root.ref.activeStyles.forEach(({ control, key, value }) => {\n        control[key] = typeof value === 'function' ? value(root) : value;\n    });\n};\n\nconst route = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: ({ root, action }) => {\n        root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: ({ root, action }) => {\n        root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: ({ root, action }) => {\n        root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: ({ root }) => {\n        root.ref.loadProgressIndicator.spin = true;\n        root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: ({ root, action }) => {\n        root.ref.loadProgressIndicator.spin = false;\n        root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ({ root, action }) => {\n        root.ref.processProgressIndicator.spin = false;\n        root.ref.processProgressIndicator.progress = action.progress;\n    },\n});\n\nconst file = createView({\n    create: create$4,\n    write: write$2,\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    name: 'file',\n});\n\n/**\n * Creates the file view\n */\nconst create$5 = ({ root, props }) => {\n    // filename\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName);\n\n    // file appended\n    root.ref.file = root.appendChildView(root.createChildView(file, { id: props.id }));\n\n    // data has moved to data.js\n    root.ref.data = false;\n};\n\n/**\n * Data storage\n */\nconst didLoadItem = ({ root, props }) => {\n    // updates the legend of the fieldset so screenreaders can better group buttons\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper',\n});\n\nconst PANEL_SPRING_PROPS = { type: 'spring', damping: 0.6, mass: 7 };\n\nconst create$6 = ({ root, props }) => {\n    [\n        {\n            name: 'top',\n        },\n        {\n            name: 'center',\n            props: {\n                translateY: null,\n                scaleY: null,\n            },\n            mixins: {\n                animations: {\n                    scaleY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY', 'scaleY'],\n            },\n        },\n        {\n            name: 'bottom',\n            props: {\n                translateY: null,\n            },\n            mixins: {\n                animations: {\n                    translateY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY'],\n            },\n        },\n    ].forEach(section => {\n        createSection(root, section, props.name);\n    });\n\n    root.element.classList.add(`filepond--${props.name}`);\n\n    root.ref.scalable = null;\n};\n\nconst createSection = (root, section, className) => {\n    const viewConstructor = createView({\n        name: `panel-${section.name} filepond--${className}`,\n        mixins: section.mixins,\n        ignoreRectUpdate: true,\n    });\n\n    const view = root.createChildView(viewConstructor, section.props);\n\n    root.ref[section.name] = root.appendChildView(view);\n};\n\nconst write$3 = ({ root, props }) => {\n    // update scalable state\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n        root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n        root.element.dataset.scalable = root.ref.scalable;\n    }\n\n    // no height, can't set\n    if (!props.height) return;\n\n    // get child rects\n    const topRect = root.ref.top.rect.element;\n    const bottomRect = root.ref.bottom.rect.element;\n\n    // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n    const height = Math.max(topRect.height + bottomRect.height, props.height);\n\n    // offset center part\n    root.ref.center.translateY = topRect.height;\n\n    // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;\n\n    // offset bottom part\n    root.ref.bottom.translateY = height - bottomRect.height;\n};\n\nconst panel = createView({\n    name: 'panel',\n    read: ({ root, props }) => (props.heightCurrent = root.ref.bottom.translateY),\n    write: write$3,\n    create: create$6,\n    ignoreRect: true,\n    mixins: {\n        apis: ['height', 'heightCurrent', 'scalable'],\n    },\n});\n\nconst createDragHelper = items => {\n    const itemIds = items.map(item => item.id);\n    let prevIndex = undefined;\n    return {\n        setIndex: index => {\n            prevIndex = index;\n        },\n        getIndex: () => prevIndex,\n        getItemIndex: item => itemIds.indexOf(item.id),\n    };\n};\n\nconst ITEM_TRANSLATE_SPRING = {\n    type: 'spring',\n    stiffness: 0.75,\n    damping: 0.45,\n    mass: 10,\n};\n\nconst ITEM_SCALE_SPRING = 'spring';\n\nconst StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy processing',\n    DID_REQUEST_ITEM_PROCESSING: 'busy processing',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle',\n};\n\n/**\n * Creates the file view\n */\nconst create$7 = ({ root, props }) => {\n    // select\n    root.ref.handleClick = e => root.dispatch('DID_ACTIVATE_ITEM', { id: props.id });\n\n    // set id\n    root.element.id = `filepond--item-${props.id}`;\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // file view\n    root.ref.container = root.appendChildView(root.createChildView(fileWrapper, { id: props.id }));\n\n    // file panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'item-panel' }));\n\n    // default start height\n    root.ref.panel.height = null;\n\n    // by default not marked for removal\n    props.markedForRemoval = false;\n\n    // if not allowed to reorder file items, exit here\n    if (!root.query('GET_ALLOW_REORDER')) return;\n\n    // set to idle so shows grab cursor\n    root.element.dataset.dragState = 'idle';\n\n    const grab = e => {\n        if (!e.isPrimary) return;\n\n        let removedActivateListener = false;\n\n        const origin = {\n            x: e.pageX,\n            y: e.pageY,\n        };\n\n        props.dragOrigin = {\n            x: root.translateX,\n            y: root.translateY,\n        };\n\n        props.dragCenter = {\n            x: e.offsetX,\n            y: e.offsetY,\n        };\n\n        const dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));\n\n        root.dispatch('DID_GRAB_ITEM', { id: props.id, dragState });\n\n        const drag = e => {\n            if (!e.isPrimary) return;\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            // if dragged stop listening to clicks, will re-add when done dragging\n            const dist =\n                props.dragOffset.x * props.dragOffset.x + props.dragOffset.y * props.dragOffset.y;\n            if (dist > 16 && !removedActivateListener) {\n                removedActivateListener = true;\n                root.element.removeEventListener('click', root.ref.handleClick);\n            }\n\n            root.dispatch('DID_DRAG_ITEM', { id: props.id, dragState });\n        };\n\n        const drop = e => {\n            if (!e.isPrimary) return;\n\n            document.removeEventListener('pointermove', drag);\n            document.removeEventListener('pointerup', drop);\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            root.dispatch('DID_DROP_ITEM', { id: props.id, dragState });\n\n            // start listening to clicks again\n            if (removedActivateListener) {\n                setTimeout(() => root.element.addEventListener('click', root.ref.handleClick), 0);\n            }\n        };\n\n        document.addEventListener('pointermove', drag);\n        document.addEventListener('pointerup', drop);\n    };\n\n    root.element.addEventListener('pointerdown', grab);\n};\n\nconst route$1 = createRoute({\n    DID_UPDATE_PANEL_HEIGHT: ({ root, action }) => {\n        root.height = action.height;\n    },\n});\n\nconst write$4 = createRoute(\n    {\n        DID_GRAB_ITEM: ({ root, props }) => {\n            props.dragOrigin = {\n                x: root.translateX,\n                y: root.translateY,\n            };\n        },\n        DID_DRAG_ITEM: ({ root }) => {\n            root.element.dataset.dragState = 'drag';\n        },\n        DID_DROP_ITEM: ({ root, props }) => {\n            props.dragOffset = null;\n            props.dragOrigin = null;\n            root.element.dataset.dragState = 'drop';\n        },\n    },\n    ({ root, actions, props, shouldOptimize }) => {\n        if (root.element.dataset.dragState === 'drop') {\n            if (root.scaleX <= 1) {\n                root.element.dataset.dragState = 'idle';\n            }\n        }\n\n        // select last state change action\n        let action = actions\n            .concat()\n            .filter(action => /^DID_/.test(action.type))\n            .reverse()\n            .find(action => StateMap[action.type]);\n\n        // no need to set same state twice\n        if (action && action.type !== props.currentState) {\n            // set current state\n            props.currentState = action.type;\n\n            // set state\n            root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n        }\n\n        // route actions\n        const aspectRatio =\n            root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n        if (!aspectRatio) {\n            route$1({ root, actions, props });\n            if (!root.height && root.ref.container.rect.element.height > 0) {\n                root.height = root.ref.container.rect.element.height;\n            }\n        } else if (!shouldOptimize) {\n            root.height = root.rect.element.width * aspectRatio;\n        }\n\n        // sync panel height with item height\n        if (shouldOptimize) {\n            root.ref.panel.height = null;\n        }\n\n        root.ref.panel.height = root.height;\n    }\n);\n\nconst item = createView({\n    create: create$7,\n    write: write$4,\n    destroy: ({ root, props }) => {\n        root.element.removeEventListener('click', root.ref.handleClick);\n        root.dispatch('RELEASE_ITEM', { query: props.id });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n        apis: [\n            'id',\n            'interactionMethod',\n            'markedForRemoval',\n            'spawnDate',\n            'dragCenter',\n            'dragOrigin',\n            'dragOffset',\n        ],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n        animations: {\n            scaleX: ITEM_SCALE_SPRING,\n            scaleY: ITEM_SCALE_SPRING,\n            translateX: ITEM_TRANSLATE_SPRING,\n            translateY: ITEM_TRANSLATE_SPRING,\n            opacity: { type: 'tween', duration: 150 },\n        },\n    },\n});\n\nvar getItemsPerRow = (horizontalSpace, itemWidth) => {\n    // add one pixel leeway, when using percentages for item width total items can be 1.99 per row\n\n    return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));\n};\n\nconst getItemIndexByPosition = (view, children, positionInView) => {\n    if (!positionInView) return;\n\n    const horizontalSpace = view.rect.element.width;\n    // const children = view.childViews;\n    const l = children.length;\n    let last = null;\n\n    // -1, don't move items to accomodate (either add to top or bottom)\n    if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;\n\n    // let's get the item width\n    const item = children[0];\n    const itemRect = item.rect.element;\n    const itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n    const itemWidth = itemRect.width + itemHorizontalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        for (let index = 0; index < l; index++) {\n            const child = children[index];\n            const childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n            if (positionInView.top < childMid) {\n                return index;\n            }\n        }\n        return l;\n    }\n\n    // grid\n    const itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n    const itemHeight = itemRect.height + itemVerticalMargin;\n    for (let index = 0; index < l; index++) {\n        const indexX = index % itemsPerRow;\n        const indexY = Math.floor(index / itemsPerRow);\n\n        const offsetX = indexX * itemWidth;\n        const offsetY = indexY * itemHeight;\n\n        const itemTop = offsetY - itemRect.marginTop;\n        const itemRight = offsetX + itemWidth;\n        const itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n\n        if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n            if (positionInView.left < itemRight) {\n                return index;\n            } else if (index !== l - 1) {\n                last = index;\n            } else {\n                last = null;\n            }\n        }\n    }\n\n    if (last !== null) {\n        return last;\n    }\n\n    return l;\n};\n\nconst dropAreaDimensions = {\n    height: 0,\n    width: 0,\n    get getHeight() {\n        return this.height;\n    },\n    set setHeight(val) {\n        if (this.height === 0 || val === 0) this.height = val;\n    },\n    get getWidth() {\n        return this.width;\n    },\n    set setWidth(val) {\n        if (this.width === 0 || val === 0) this.width = val;\n    },\n    setDimensions: function(height, width) {\n        if (this.height === 0 || height === 0) this.height = height;\n        if (this.width === 0 || width === 0) this.width = width;\n    },\n};\n\nconst create$8 = ({ root }) => {\n    // need to set role to list as otherwise it won't be read as a list by VoiceOver\n    attr(root.element, 'role', 'list');\n\n    root.ref.lastItemSpanwDate = Date.now();\n};\n\n/**\n * Inserts a new item\n * @param root\n * @param action\n */\nconst addItemView = ({ root, action }) => {\n    const { id, index, interactionMethod } = action;\n\n    root.ref.addIndex = index;\n\n    const now = Date.now();\n    let spawnDate = now;\n    let opacity = 1;\n\n    if (interactionMethod !== InteractionMethod.NONE) {\n        opacity = 0;\n        const cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n        const dist = now - root.ref.lastItemSpanwDate;\n        spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n    }\n\n    root.ref.lastItemSpanwDate = spawnDate;\n\n    root.appendChildView(\n        root.createChildView(\n            // view type\n            item,\n\n            // props\n            {\n                spawnDate,\n                id,\n                opacity,\n                interactionMethod,\n            }\n        ),\n        index\n    );\n};\n\nconst moveItem = (item, x, y, vx = 0, vy = 1) => {\n    // set to null to remove animation while dragging\n    if (item.dragOffset) {\n        item.translateX = null;\n        item.translateY = null;\n        item.translateX = item.dragOrigin.x + item.dragOffset.x;\n        item.translateY = item.dragOrigin.y + item.dragOffset.y;\n        item.scaleX = 1.025;\n        item.scaleY = 1.025;\n    } else {\n        item.translateX = x;\n        item.translateY = y;\n\n        if (Date.now() > item.spawnDate) {\n            // reveal element\n            if (item.opacity === 0) {\n                introItemView(item, x, y, vx, vy);\n            }\n\n            // make sure is default scale every frame\n            item.scaleX = 1;\n            item.scaleY = 1;\n            item.opacity = 1;\n        }\n    }\n};\n\nconst introItemView = (item, x, y, vx, vy) => {\n    if (item.interactionMethod === InteractionMethod.NONE) {\n        item.translateX = null;\n        item.translateX = x;\n        item.translateY = null;\n        item.translateY = y;\n    } else if (item.interactionMethod === InteractionMethod.DROP) {\n        item.translateX = null;\n        item.translateX = x - vx * 20;\n\n        item.translateY = null;\n        item.translateY = y - vy * 10;\n\n        item.scaleX = 0.8;\n        item.scaleY = 0.8;\n    } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n        item.translateY = null;\n        item.translateY = y - 30;\n    } else if (item.interactionMethod === InteractionMethod.API) {\n        item.translateX = null;\n        item.translateX = x - 30;\n        item.translateY = null;\n    }\n};\n\n/**\n * Removes an existing item\n * @param root\n * @param action\n */\nconst removeItemView = ({ root, action }) => {\n    const { id } = action;\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    // if no view found, exit\n    if (!view) {\n        return;\n    }\n\n    // animate view out of view\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0;\n\n    // mark for removal\n    view.markedForRemoval = true;\n};\n\nconst getItemHeight = child =>\n    child.rect.element.height +\n    child.rect.element.marginBottom * 0.5 +\n    child.rect.element.marginTop * 0.5;\nconst getItemWidth = child =>\n    child.rect.element.width +\n    child.rect.element.marginLeft * 0.5 +\n    child.rect.element.marginRight * 0.5;\n\nconst dragItem = ({ root, action }) => {\n    const { id, dragState } = action;\n\n    // reference to item\n    const item = root.query('GET_ITEM', { id });\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    const numItems = root.childViews.length;\n    const oldIndex = dragState.getItemIndex(item);\n\n    // if no view found, exit\n    if (!view) return;\n\n    const dragPosition = {\n        x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,\n        y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y,\n    };\n\n    // get drag area dimensions\n    const dragHeight = getItemHeight(view);\n    const dragWidth = getItemWidth(view);\n\n    // get rows and columns (There will always be at least one row and one column if a file is present)\n    let cols = Math.floor(root.rect.outer.width / dragWidth);\n    if (cols > numItems) cols = numItems;\n\n    // rows are used to find when we have left the preview area bounding box\n    const rows = Math.floor(numItems / cols + 1);\n\n    dropAreaDimensions.setHeight = dragHeight * rows;\n    dropAreaDimensions.setWidth = dragWidth * cols;\n\n    // get new index of dragged item\n    var location = {\n        y: Math.floor(dragPosition.y / dragHeight),\n        x: Math.floor(dragPosition.x / dragWidth),\n        getGridIndex: function getGridIndex() {\n            if (\n                dragPosition.y > dropAreaDimensions.getHeight ||\n                dragPosition.y < 0 ||\n                dragPosition.x > dropAreaDimensions.getWidth ||\n                dragPosition.x < 0\n            )\n                return oldIndex;\n            return this.y * cols + this.x;\n        },\n        getColIndex: function getColIndex() {\n            const items = root.query('GET_ACTIVE_ITEMS');\n            const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n            const children = items.map(item =>\n                visibleChildren.find(childView => childView.id === item.id)\n            );\n            const currentIndex = children.findIndex(child => child === view);\n            const dragHeight = getItemHeight(view);\n            const l = children.length;\n            let idx = l;\n            let childHeight = 0;\n            let childBottom = 0;\n            let childTop = 0;\n            for (let i = 0; i < l; i++) {\n                childHeight = getItemHeight(children[i]);\n                childTop = childBottom;\n                childBottom = childTop + childHeight;\n                if (dragPosition.y < childBottom) {\n                    if (currentIndex > i) {\n                        if (dragPosition.y < childTop + dragHeight) {\n                            idx = i;\n                            break;\n                        }\n                        continue;\n                    }\n                    idx = i;\n                    break;\n                }\n            }\n            return idx;\n        },\n    };\n\n    // get new index\n    const index = cols > 1 ? location.getGridIndex() : location.getColIndex();\n    root.dispatch('MOVE_ITEM', { query: view, index });\n\n    // if the index of the item changed, dispatch reorder action\n    const currentIndex = dragState.getIndex();\n\n    if (currentIndex === undefined || currentIndex !== index) {\n        dragState.setIndex(index);\n\n        if (currentIndex === undefined) return;\n\n        root.dispatch('DID_REORDER_ITEMS', {\n            items: root.query('GET_ACTIVE_ITEMS'),\n            origin: oldIndex,\n            target: index,\n        });\n    }\n};\n\n/**\n * Setup action routes\n */\nconst route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView,\n    DID_DRAG_ITEM: dragItem,\n});\n\n/**\n * Write to view\n * @param root\n * @param actions\n * @param props\n */\nconst write$5 = ({ root, props, actions, shouldOptimize }) => {\n    // route actions\n    route$2({ root, props, actions });\n\n    const { dragCoordinates } = props;\n\n    // available space on horizontal axis\n    const horizontalSpace = root.rect.element.width;\n\n    // only draw children that have dimensions\n    const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n\n    // sort based on current active items\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // get index\n    const dragIndex = dragCoordinates\n        ? getItemIndexByPosition(root, children, dragCoordinates)\n        : null;\n\n    // add index is used to reserve the dropped/added item index till the actual item is rendered\n    const addIndex = root.ref.addIndex || null;\n\n    // add index no longer needed till possibly next draw\n    root.ref.addIndex = null;\n\n    let dragIndexOffset = 0;\n    let removeIndexOffset = 0;\n    let addIndexOffset = 0;\n\n    if (children.length === 0) return;\n\n    const childRect = children[0].rect.element;\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        let offsetY = 0;\n        let dragOffset = 0;\n\n        children.forEach((child, index) => {\n            if (dragIndex) {\n                let dist = index - dragIndex;\n                if (dist === -2) {\n                    dragOffset = -itemVerticalMargin * 0.25;\n                } else if (dist === -1) {\n                    dragOffset = -itemVerticalMargin * 0.75;\n                } else if (dist === 0) {\n                    dragOffset = itemVerticalMargin * 0.75;\n                } else if (dist === 1) {\n                    dragOffset = itemVerticalMargin * 0.25;\n                } else {\n                    dragOffset = 0;\n                }\n            }\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            if (!child.markedForRemoval) {\n                moveItem(child, 0, offsetY + dragOffset);\n            }\n\n            let itemHeight = child.rect.element.height + itemVerticalMargin;\n\n            let visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n\n            offsetY += visualHeight;\n        });\n    }\n    // grid\n    else {\n        let prevX = 0;\n        let prevY = 0;\n\n        children.forEach((child, index) => {\n            if (index === dragIndex) {\n                dragIndexOffset = 1;\n            }\n\n            if (index === addIndex) {\n                addIndexOffset += 1;\n            }\n\n            if (child.markedForRemoval && child.opacity < 0.5) {\n                removeIndexOffset -= 1;\n            }\n\n            const visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n\n            const indexX = visualIndex % itemsPerRow;\n            const indexY = Math.floor(visualIndex / itemsPerRow);\n\n            const offsetX = indexX * itemWidth;\n            const offsetY = indexY * itemHeight;\n\n            const vectorX = Math.sign(offsetX - prevX);\n            const vectorY = Math.sign(offsetY - prevY);\n\n            prevX = offsetX;\n            prevY = offsetY;\n\n            if (child.markedForRemoval) return;\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            moveItem(child, offsetX, offsetY, vectorX, vectorY);\n        });\n    }\n};\n\n/**\n * Filters actions that are meant specifically for a certain child of the list\n * @param child\n * @param actions\n */\nconst filterSetItemActions = (child, actions) =>\n    actions.filter(action => {\n        // if action has an id, filter out actions that don't have this child id\n        if (action.data && action.data.id) {\n            return child.id === action.data.id;\n        }\n\n        // allow all other actions\n        return true;\n    });\n\nconst list = createView({\n    create: create$8,\n    write: write$5,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: ({ root }) => {\n        root.childViews\n            .filter(view => view.markedForRemoval && view.opacity === 0 && view.resting)\n            .forEach(view => {\n                view._destroy();\n                root.removeChildView(view);\n            });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n        apis: ['dragCoordinates'],\n    },\n});\n\nconst create$9 = ({ root, props }) => {\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n};\n\nconst storeDragCoordinates = ({ root, props, action }) => {\n    if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n    props.dragCoordinates = {\n        left: action.position.scopeLeft - root.ref.list.rect.element.left,\n        top:\n            action.position.scopeTop -\n            (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop),\n    };\n};\n\nconst clearDragCoordinates = ({ props }) => {\n    props.dragCoordinates = null;\n};\n\nconst route$3 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates,\n});\n\nconst write$6 = ({ root, props, actions }) => {\n    // route actions\n    route$3({ root, props, actions });\n\n    // current drag position\n    root.ref.list.dragCoordinates = props.dragCoordinates;\n\n    // if currently overflowing but no longer received overflow\n    if (props.overflowing && !props.overflow) {\n        props.overflowing = false;\n\n        // reset overflow state\n        root.element.dataset.state = '';\n        root.height = null;\n    }\n\n    // if is not overflowing currently but does receive overflow value\n    if (props.overflow) {\n        const newHeight = Math.round(props.overflow);\n        if (newHeight !== root.height) {\n            props.overflowing = true;\n            root.element.dataset.state = 'overflow';\n            root.height = newHeight;\n        }\n    }\n};\n\nconst listScroller = createView({\n    create: create$9,\n    write: write$6,\n    name: 'list-scroller',\n    mixins: {\n        apis: ['overflow', 'dragCoordinates'],\n        styles: ['height', 'translateY'],\n        animations: {\n            translateY: 'spring',\n        },\n    },\n});\n\nconst attrToggle = (element, name, state, enabledValue = '') => {\n    if (state) {\n        attr(element, name, enabledValue);\n    } else {\n        element.removeAttribute(name);\n    }\n};\n\nconst resetFileInput = input => {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n        return;\n    }\n\n    try {\n        // for modern browsers\n        input.value = '';\n    } catch (err) {}\n\n    // for IE10\n    if (input.value) {\n        // quickly append input to temp form and reset form\n        const form = createElement$1('form');\n        const parentNode = input.parentNode;\n        const ref = input.nextSibling;\n        form.appendChild(input);\n        form.reset();\n\n        // re-inject input where it originally was\n        if (ref) {\n            parentNode.insertBefore(input, ref);\n        } else {\n            parentNode.appendChild(input);\n        }\n    }\n};\n\nconst create$a = ({ root, props }) => {\n    // set id so can be referenced from outside labels\n    root.element.id = `filepond--browser-${props.id}`;\n\n    // set name of element (is removed when a value is set)\n    attr(root.element, 'name', root.query('GET_NAME'));\n\n    // we have to link this element to the status element\n    attr(root.element, 'aria-controls', `filepond--assistant-${props.id}`);\n\n    // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n    attr(root.element, 'aria-labelledby', `filepond--drop-label-${props.id}`);\n\n    // set configurable props\n    setAcceptedFileTypes({ root, action: { value: root.query('GET_ACCEPTED_FILE_TYPES') } });\n    toggleAllowMultiple({ root, action: { value: root.query('GET_ALLOW_MULTIPLE') } });\n    toggleDirectoryFilter({ root, action: { value: root.query('GET_ALLOW_DIRECTORIES_ONLY') } });\n    toggleDisabled({ root });\n    toggleRequired({ root, action: { value: root.query('GET_REQUIRED') } });\n    setCaptureMethod({ root, action: { value: root.query('GET_CAPTURE_METHOD') } });\n\n    // handle changes to the input field\n    root.ref.handleChange = e => {\n        if (!root.element.value) {\n            return;\n        }\n\n        // extract files and move value of webkitRelativePath path to _relativePath\n        const files = Array.from(root.element.files).map(file => {\n            file._relativePath = file.webkitRelativePath;\n            return file;\n        });\n\n        // we add a little delay so the OS file select window can move out of the way before we add our file\n        setTimeout(() => {\n            // load files\n            props.onload(files);\n\n            // reset input, it's just for exposing a method to drop files, should not retain any state\n            resetFileInput(root.element);\n        }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n};\n\nconst setAcceptedFileTypes = ({ root, action }) => {\n    if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n};\n\nconst toggleAllowMultiple = ({ root, action }) => {\n    attrToggle(root.element, 'multiple', action.value);\n};\n\nconst toggleDirectoryFilter = ({ root, action }) => {\n    attrToggle(root.element, 'webkitdirectory', action.value);\n};\n\nconst toggleDisabled = ({ root }) => {\n    const isDisabled = root.query('GET_DISABLED');\n    const doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n    const disableField = isDisabled || !doesAllowBrowse;\n    attrToggle(root.element, 'disabled', disableField);\n};\n\nconst toggleRequired = ({ root, action }) => {\n    // want to remove required, always possible\n    if (!action.value) {\n        attrToggle(root.element, 'required', false);\n    }\n    // if want to make required, only possible when zero items\n    else if (root.query('GET_TOTAL_ITEMS') === 0) {\n        attrToggle(root.element, 'required', true);\n    }\n};\n\nconst setCaptureMethod = ({ root, action }) => {\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n};\n\nconst updateRequiredStatus = ({ root }) => {\n    const { element } = root;\n    // always remove the required attribute when more than zero items\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n        attrToggle(element, 'required', false);\n        attrToggle(element, 'name', false);\n    } else {\n        // add name attribute\n        attrToggle(element, 'name', true, root.query('GET_NAME'));\n\n        // remove any validation messages\n        const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n        if (shouldCheckValidity) {\n            element.setCustomValidity('');\n        }\n\n        // we only add required if the field has been deemed required\n        if (root.query('GET_REQUIRED')) {\n            attrToggle(element, 'required', true);\n        }\n    }\n};\n\nconst updateFieldValidityStatus = ({ root }) => {\n    const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n};\n\nconst browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n        type: 'file',\n    },\n    create: create$a,\n    destroy: ({ root }) => {\n        root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n        DID_LOAD_ITEM: updateRequiredStatus,\n        DID_REMOVE_ITEM: updateRequiredStatus,\n        DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n\n        DID_SET_DISABLED: toggleDisabled,\n        DID_SET_ALLOW_BROWSE: toggleDisabled,\n        DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,\n        DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n        DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n        DID_SET_CAPTURE_METHOD: setCaptureMethod,\n        DID_SET_REQUIRED: toggleRequired,\n    }),\n});\n\nconst Key = {\n    ENTER: 13,\n    SPACE: 32,\n};\n\nconst create$b = ({ root, props }) => {\n    // create the label and link it to the file browser\n    const label = createElement$1('label');\n    attr(label, 'for', `filepond--browser-${props.id}`);\n\n    // use for labeling file input (aria-labelledby on file input)\n    attr(label, 'id', `filepond--drop-label-${props.id}`);\n\n    // hide the label for screenreaders, the input element will read the contents of the label when it's focussed. If we don't set aria-hidden the screenreader will also navigate the contents of the label separately from the input.\n    attr(label, 'aria-hidden', 'true');\n\n    // handle keys\n    root.ref.handleKeyDown = e => {\n        const isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n        if (!isActivationKey) return;\n        // stops from triggering the element a second time\n        e.preventDefault();\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    root.ref.handleClick = e => {\n        const isLabelClick = e.target === label || label.contains(e.target);\n\n        // don't want to click twice\n        if (isLabelClick) return;\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    // attach events\n    label.addEventListener('keydown', root.ref.handleKeyDown);\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // update\n    updateLabelValue(label, props.caption);\n\n    // add!\n    root.appendChild(label);\n    root.ref.label = label;\n};\n\nconst updateLabelValue = (label, value) => {\n    label.innerHTML = value;\n    const clickable = label.querySelector('.filepond--label-action');\n    if (clickable) {\n        attr(clickable, 'tabindex', '0');\n    }\n    return value;\n};\n\nconst dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$b,\n    destroy: ({ root }) => {\n        root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);\n        root.element.removeEventListener('click', root.ref.handleClick);\n    },\n    write: createRoute({\n        DID_SET_LABEL_IDLE: ({ root, action }) => {\n            updateLabelValue(root.ref.label, action.value);\n        },\n    }),\n    mixins: {\n        styles: ['opacity', 'translateX', 'translateY'],\n        animations: {\n            opacity: { type: 'tween', duration: 150 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\nconst addBlob = ({ root }) => {\n    const centerX = root.rect.element.width * 0.5;\n    const centerY = root.rect.element.height * 0.5;\n\n    root.ref.blob = root.appendChildView(\n        root.createChildView(blob, {\n            opacity: 0,\n            scaleX: 2.5,\n            scaleY: 2.5,\n            translateX: centerX,\n            translateY: centerY,\n        })\n    );\n};\n\nconst moveBlob = ({ root, action }) => {\n    if (!root.ref.blob) {\n        addBlob({ root });\n        return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n};\n\nconst hideBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.opacity = 0;\n};\n\nconst explodeBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n};\n\nconst write$7 = ({ root, props, actions }) => {\n    route$4({ root, props, actions });\n\n    const { blob } = root.ref;\n\n    if (actions.length === 0 && blob && blob.opacity === 0) {\n        root.removeChildView(blob);\n        root.ref.blob = null;\n    }\n};\n\nconst route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob,\n});\n\nconst drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$7,\n});\n\nconst setInputFiles = (element, files) => {\n    try {\n        // Create a DataTransfer instance and add a newly created file\n        const dataTransfer = new DataTransfer();\n        files.forEach(file => {\n            if (file instanceof File) {\n                dataTransfer.items.add(file);\n            } else {\n                dataTransfer.items.add(\n                    new File([file], file.name, {\n                        type: file.type,\n                    })\n                );\n            }\n        });\n\n        // Assign the DataTransfer files list to the file input\n        element.files = dataTransfer.files;\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst create$c = ({ root }) => (root.ref.fields = {});\n\nconst getField = (root, id) => root.ref.fields[id];\n\nconst syncFieldPositionsWithItems = root => {\n    root.query('GET_ACTIVE_ITEMS').forEach(item => {\n        if (!root.ref.fields[item.id]) return;\n        root.element.appendChild(root.ref.fields[item.id]);\n    });\n};\n\nconst didReorderItems = ({ root }) => syncFieldPositionsWithItems(root);\n\nconst didAddItem = ({ root, action }) => {\n    const fileItem = root.query('GET_ITEM', action.id);\n    const isLocalFile = fileItem.origin === FileOrigin.LOCAL;\n    const shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');\n    const dataContainer = createElement$1('input');\n    dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    dataContainer.disabled = root.query('GET_DISABLED');\n    root.ref.fields[action.id] = dataContainer;\n    syncFieldPositionsWithItems(root);\n};\n\nconst didLoadItem$1 = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n\n    // store server ref in hidden input\n    if (action.serverFileReference !== null) field.value = action.serverFileReference;\n\n    // store file item in file input\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n\n    const fileItem = root.query('GET_ITEM', action.id);\n    setInputFiles(field, [fileItem.file]);\n};\n\nconst didPrepareOutput = ({ root, action }) => {\n    // this timeout pushes the handler after 'load'\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n    setTimeout(() => {\n        const field = getField(root, action.id);\n        if (!field) return;\n        setInputFiles(field, [action.file]);\n    }, 0);\n};\n\nconst didSetDisabled = ({ root }) => {\n    root.element.disabled = root.query('GET_DISABLED');\n};\n\nconst didRemoveItem = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (field.parentNode) field.parentNode.removeChild(field);\n    delete root.ref.fields[action.id];\n};\n\n// only runs for server files. will refuse to update the value if the field\n// is a file field\nconst didDefineValue = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (action.value === null) {\n        // clear field value\n        field.removeAttribute('value');\n    } else {\n        // set field value\n        if (field.type != 'file') {\n            field.value = action.value;\n        }\n    }\n    syncFieldPositionsWithItems(root);\n};\n\nconst write$8 = createRoute({\n    DID_SET_DISABLED: didSetDisabled,\n    DID_ADD_ITEM: didAddItem,\n    DID_LOAD_ITEM: didLoadItem$1,\n    DID_REMOVE_ITEM: didRemoveItem,\n    DID_DEFINE_VALUE: didDefineValue,\n    DID_PREPARE_OUTPUT: didPrepareOutput,\n    DID_REORDER_ITEMS: didReorderItems,\n    DID_SORT_ITEMS: didReorderItems,\n});\n\nconst data = createView({\n    tag: 'fieldset',\n    name: 'data',\n    create: create$c,\n    write: write$8,\n    ignoreRect: true,\n});\n\nconst getRootNode = element => ('getRootNode' in element ? element.getRootNode() : document);\n\nconst images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\nconst text$1 = ['css', 'csv', 'html', 'txt'];\nconst map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip',\n};\n\nconst guesstimateMimeType = (extension = '') => {\n    extension = extension.toLowerCase();\n    if (images.includes(extension)) {\n        return (\n            'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension)\n        );\n    }\n    if (text$1.includes(extension)) {\n        return 'text/' + extension;\n    }\n\n    return map[extension] || '';\n};\n\nconst requestDataTransferItems = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)\n        const links = getLinks(dataTransfer);\n        if (links.length && !hasFiles(dataTransfer)) {\n            return resolve(links);\n        }\n        // try to get files from the transfer\n        getFiles(dataTransfer).then(resolve);\n    });\n\n/**\n * Test if datatransfer has files\n */\nconst hasFiles = dataTransfer => {\n    if (dataTransfer.files) return dataTransfer.files.length > 0;\n    return false;\n};\n\n/**\n * Extracts files from a DataTransfer object\n */\nconst getFiles = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // get the transfer items as promises\n        const promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : [])\n\n            // only keep file system items (files and directories)\n            .filter(item => isFileSystemItem(item))\n\n            // map each item to promise\n            .map(item => getFilesFromItem(item));\n\n        // if is empty, see if we can extract some info from the files property as a fallback\n        if (!promisedFiles.length) {\n            // TODO: test for directories (should not be allowed)\n            // Use FileReader, problem is that the files property gets lost in the process\n            resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n            return;\n        }\n\n        // done!\n        Promise.all(promisedFiles)\n            .then(returnedFileGroups => {\n                // flatten groups\n                const files = [];\n                returnedFileGroups.forEach(group => {\n                    files.push.apply(files, group);\n                });\n\n                // done (filter out empty files)!\n                resolve(\n                    files\n                        .filter(file => file)\n                        .map(file => {\n                            if (!file._relativePath) file._relativePath = file.webkitRelativePath;\n                            return file;\n                        })\n                );\n            })\n            .catch(console.error);\n    });\n\nconst isFileSystemItem = item => {\n    if (isEntry(item)) {\n        const entry = getAsEntry(item);\n        if (entry) {\n            return entry.isFile || entry.isDirectory;\n        }\n    }\n    return item.kind === 'file';\n};\n\nconst getFilesFromItem = item =>\n    new Promise((resolve, reject) => {\n        if (isDirectoryEntry(item)) {\n            getFilesInDirectory(getAsEntry(item))\n                .then(resolve)\n                .catch(reject);\n            return;\n        }\n\n        resolve([item.getAsFile()]);\n    });\n\nconst getFilesInDirectory = entry =>\n    new Promise((resolve, reject) => {\n        const files = [];\n\n        // the total entries to read\n        let dirCounter = 0;\n        let fileCounter = 0;\n\n        const resolveIfDone = () => {\n            if (fileCounter === 0 && dirCounter === 0) {\n                resolve(files);\n            }\n        };\n\n        // the recursive function\n        const readEntries = dirEntry => {\n            dirCounter++;\n\n            const directoryReader = dirEntry.createReader();\n\n            // directories are returned in batches, we need to process all batches before we're done\n            const readBatch = () => {\n                directoryReader.readEntries(entries => {\n                    if (entries.length === 0) {\n                        dirCounter--;\n                        resolveIfDone();\n                        return;\n                    }\n\n                    entries.forEach(entry => {\n                        // recursively read more directories\n                        if (entry.isDirectory) {\n                            readEntries(entry);\n                        } else {\n                            // read as file\n                            fileCounter++;\n\n                            entry.file(file => {\n                                const correctedFile = correctMissingFileType(file);\n                                if (entry.fullPath) correctedFile._relativePath = entry.fullPath;\n                                files.push(correctedFile);\n                                fileCounter--;\n                                resolveIfDone();\n                            });\n                        }\n                    });\n\n                    // try to get next batch of files\n                    readBatch();\n                }, reject);\n            };\n\n            // read first batch of files\n            readBatch();\n        };\n\n        // go!\n        readEntries(entry);\n    });\n\nconst correctMissingFileType = file => {\n    if (file.type.length) return file;\n    const date = file.lastModifiedDate;\n    const name = file.name;\n    const type = guesstimateMimeType(getExtensionFromFilename(file.name));\n    if (!type.length) return file;\n    file = file.slice(0, file.size, type);\n    file.name = name;\n    file.lastModifiedDate = date;\n    return file;\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n\nconst isEntry = item => 'webkitGetAsEntry' in item;\n\nconst getAsEntry = item => item.webkitGetAsEntry();\n\n/**\n * Extracts links from a DataTransfer object\n */\nconst getLinks = dataTransfer => {\n    let links = [];\n    try {\n        // look in meta data property\n        links = getLinksFromTransferMetaData(dataTransfer);\n        if (links.length) {\n            return links;\n        }\n        links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {\n        // nope nope nope (probably IE trouble)\n    }\n    return links;\n};\n\nconst getLinksFromTransferURLData = dataTransfer => {\n    let data = dataTransfer.getData('url');\n    if (typeof data === 'string' && data.length) {\n        return [data];\n    }\n    return [];\n};\n\nconst getLinksFromTransferMetaData = dataTransfer => {\n    let data = dataTransfer.getData('text/html');\n    if (typeof data === 'string' && data.length) {\n        const matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n        if (matches) {\n            return [matches[1]];\n        }\n    }\n    return [];\n};\n\nconst dragNDropObservers = [];\n\nconst eventPosition = e => ({\n    pageLeft: e.pageX,\n    pageTop: e.pageY,\n    scopeLeft: e.offsetX || e.layerX,\n    scopeTop: e.offsetY || e.layerY,\n});\n\nconst createDragNDropClient = (element, scopeToObserve, filterElement) => {\n    const observer = getDragNDropObserver(scopeToObserve);\n\n    const client = {\n        element,\n        filterElement,\n        state: null,\n        ondrop: () => {},\n        onenter: () => {},\n        ondrag: () => {},\n        onexit: () => {},\n        onload: () => {},\n        allowdrop: () => {},\n    };\n\n    client.destroy = observer.addListener(client);\n\n    return client;\n};\n\nconst getDragNDropObserver = element => {\n    // see if already exists, if so, return\n    const observer = dragNDropObservers.find(item => item.element === element);\n    if (observer) {\n        return observer;\n    }\n\n    // create new observer, does not yet exist for this element\n    const newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n};\n\nconst createDragNDropObserver = element => {\n    const clients = [];\n\n    const routes = {\n        dragenter,\n        dragover,\n        dragleave,\n        drop,\n    };\n\n    const handlers = {};\n\n    forin(routes, (event, createHandler) => {\n        handlers[event] = createHandler(element, clients);\n        element.addEventListener(event, handlers[event], false);\n    });\n\n    const observer = {\n        element,\n        addListener: client => {\n            // add as client\n            clients.push(client);\n\n            // return removeListener function\n            return () => {\n                // remove client\n                clients.splice(clients.indexOf(client), 1);\n\n                // if no more clients, clean up observer\n                if (clients.length === 0) {\n                    dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n\n                    forin(routes, event => {\n                        element.removeEventListener(event, handlers[event], false);\n                    });\n                }\n            };\n        },\n    };\n\n    return observer;\n};\n\nconst elementFromPoint = (root, point) => {\n    if (!('elementFromPoint' in root)) {\n        root = document;\n    }\n    return root.elementFromPoint(point.x, point.y);\n};\n\nconst isEventTarget = (e, target) => {\n    // get root\n    const root = getRootNode(target);\n\n    // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n    const elementAtPosition = elementFromPoint(root, {\n        x: e.pageX - window.pageXOffset,\n        y: e.pageY - window.pageYOffset,\n    });\n\n    // test if target is the element or if one of its children is\n    return elementAtPosition === target || target.contains(elementAtPosition);\n};\n\nlet initialTarget = null;\n\nconst setDropEffect = (dataTransfer, effect) => {\n    // is in try catch as IE11 will throw error if not\n    try {\n        dataTransfer.dropEffect = effect;\n    } catch (e) {}\n};\n\nconst dragenter = (root, clients) => e => {\n    e.preventDefault();\n\n    initialTarget = e.target;\n\n    clients.forEach(client => {\n        const { element, onenter } = client;\n\n        if (isEventTarget(e, element)) {\n            client.state = 'enter';\n\n            // fire enter event\n            onenter(eventPosition(e));\n        }\n    });\n};\n\nconst dragover = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        let overDropTarget = false;\n\n        clients.some(client => {\n            const { filterElement, element, onenter, onexit, ondrag, allowdrop } = client;\n\n            // by default we can drop\n            setDropEffect(dataTransfer, 'copy');\n\n            // allow transfer of these items\n            const allowsTransfer = allowdrop(items);\n\n            // only used when can be dropped on page\n            if (!allowsTransfer) {\n                setDropEffect(dataTransfer, 'none');\n                return;\n            }\n\n            // targetting this client\n            if (isEventTarget(e, element)) {\n                overDropTarget = true;\n\n                // had no previous state, means we are entering this client\n                if (client.state === null) {\n                    client.state = 'enter';\n                    onenter(eventPosition(e));\n                    return;\n                }\n\n                // now over element (no matter if it allows the drop or not)\n                client.state = 'over';\n\n                // needs to allow transfer\n                if (filterElement && !allowsTransfer) {\n                    setDropEffect(dataTransfer, 'none');\n                    return;\n                }\n\n                // dragging\n                ondrag(eventPosition(e));\n            } else {\n                // should be over an element to drop\n                if (filterElement && !overDropTarget) {\n                    setDropEffect(dataTransfer, 'none');\n                }\n\n                // might have just left this client?\n                if (client.state) {\n                    client.state = null;\n                    onexit(eventPosition(e));\n                }\n            }\n        });\n    });\n};\n\nconst drop = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        clients.forEach(client => {\n            const { filterElement, element, ondrop, onexit, allowdrop } = client;\n\n            client.state = null;\n\n            // if we're filtering on element we need to be over the element to drop\n            if (filterElement && !isEventTarget(e, element)) return;\n\n            // no transfer for this client\n            if (!allowdrop(items)) return onexit(eventPosition(e));\n\n            // we can drop these items on this client\n            ondrop(eventPosition(e), items);\n        });\n    });\n};\n\nconst dragleave = (root, clients) => e => {\n    if (initialTarget !== e.target) {\n        return;\n    }\n\n    clients.forEach(client => {\n        const { onexit } = client;\n\n        client.state = null;\n\n        onexit(eventPosition(e));\n    });\n};\n\nconst createHopper = (scope, validateItems, options) => {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper');\n\n    // shortcuts\n    const { catchesDropsOnPage, requiresDropOnElement, filterItems = items => items } = options;\n\n    // create a dnd client\n    const client = createDragNDropClient(\n        scope,\n        catchesDropsOnPage ? document.documentElement : scope,\n        requiresDropOnElement\n    );\n\n    // current client state\n    let lastState = '';\n    let currentState = '';\n\n    // determines if a file may be dropped\n    client.allowdrop = items => {\n        // TODO: if we can, throw error to indicate the items cannot by dropped\n\n        return validateItems(filterItems(items));\n    };\n\n    client.ondrop = (position, items) => {\n        const filteredItems = filterItems(items);\n\n        if (!validateItems(filteredItems)) {\n            api.ondragend(position);\n            return;\n        }\n\n        currentState = 'drag-drop';\n\n        api.onload(filteredItems, position);\n    };\n\n    client.ondrag = position => {\n        api.ondrag(position);\n    };\n\n    client.onenter = position => {\n        currentState = 'drag-over';\n\n        api.ondragstart(position);\n    };\n\n    client.onexit = position => {\n        currentState = 'drag-exit';\n\n        api.ondragend(position);\n    };\n\n    const api = {\n        updateHopperState: () => {\n            if (lastState !== currentState) {\n                scope.dataset.hopperState = currentState;\n                lastState = currentState;\n            }\n        },\n        onload: () => {},\n        ondragstart: () => {},\n        ondrag: () => {},\n        ondragend: () => {},\n        destroy: () => {\n            // destroy client\n            client.destroy();\n        },\n    };\n\n    return api;\n};\n\nlet listening = false;\nconst listeners$1 = [];\n\nconst handlePaste = e => {\n    // if is pasting in input or textarea and the target is outside of a filepond scope, ignore\n    const activeEl = document.activeElement;\n    if (activeEl && /textarea|input/i.test(activeEl.nodeName)) {\n        // test textarea or input is contained in filepond root\n        let inScope = false;\n        let element = activeEl;\n        while (element !== document.body) {\n            if (element.classList.contains('filepond--root')) {\n                inScope = true;\n                break;\n            }\n            element = element.parentNode;\n        }\n\n        if (!inScope) return;\n    }\n\n    requestDataTransferItems(e.clipboardData).then(files => {\n        // no files received\n        if (!files.length) {\n            return;\n        }\n\n        // notify listeners of received files\n        listeners$1.forEach(listener => listener(files));\n    });\n};\n\nconst listen = cb => {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n        return;\n    }\n\n    // add initial listener\n    listeners$1.push(cb);\n\n    // setup paste listener for entire page\n    if (listening) {\n        return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n};\n\nconst unlisten = listener => {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener));\n\n    // clean up\n    if (listeners$1.length === 0) {\n        document.removeEventListener('paste', handlePaste);\n        listening = false;\n    }\n};\n\nconst createPaster = () => {\n    const cb = files => {\n        api.onload(files);\n    };\n\n    const api = {\n        destroy: () => {\n            unlisten(cb);\n        },\n        onload: () => {},\n    };\n\n    listen(cb);\n\n    return api;\n};\n\n/**\n * Creates the file view\n */\nconst create$d = ({ root, props }) => {\n    root.element.id = `filepond--assistant-${props.id}`;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n};\n\nlet addFilesNotificationTimeout = null;\nlet notificationClearTimeout = null;\n\nconst filenames = [];\n\nconst assist = (root, message) => {\n    root.element.textContent = message;\n};\n\nconst clear$1 = root => {\n    root.element.textContent = '';\n};\n\nconst listModified = (root, filename, label) => {\n    const total = root.query('GET_TOTAL_ITEMS');\n    assist(\n        root,\n        `${label} ${filename}, ${total} ${\n            total === 1\n                ? root.query('GET_LABEL_FILE_COUNT_SINGULAR')\n                : root.query('GET_LABEL_FILE_COUNT_PLURAL')\n        }`\n    );\n\n    // clear group after set amount of time so the status is not read twice\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(() => {\n        clear$1(root);\n    }, 1500);\n};\n\nconst isUsingFilePond = root => root.element.parentNode.contains(document.activeElement);\n\nconst itemAdded = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    root.element.textContent = '';\n    const item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(() => {\n        listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n        filenames.length = 0;\n    }, 750);\n};\n\nconst itemRemoved = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    const item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n};\n\nconst itemProcessed = ({ root, action }) => {\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemProcessedUndo = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemError = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, `${action.status.main} ${filename} ${action.status.sub}`);\n};\n\nconst assistant = createView({\n    create: create$d,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: itemAdded,\n        DID_REMOVE_ITEM: itemRemoved,\n        DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n\n        DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n        DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n\n        DID_THROW_ITEM_REMOVE_ERROR: itemError,\n        DID_THROW_ITEM_LOAD_ERROR: itemError,\n        DID_THROW_ITEM_INVALID: itemError,\n        DID_THROW_ITEM_PROCESSING_ERROR: itemError,\n    }),\n    tag: 'span',\n    name: 'assistant',\n});\n\nconst toCamels = (string, separator = '-') =>\n    string.replace(new RegExp(`${separator}.`, 'g'), sub => sub.charAt(1).toUpperCase());\n\nconst debounce = (func, interval = 16, immidiateOnly = true) => {\n    let last = Date.now();\n    let timeout = null;\n\n    return (...args) => {\n        clearTimeout(timeout);\n\n        const dist = Date.now() - last;\n\n        const fn = () => {\n            last = Date.now();\n            func(...args);\n        };\n\n        if (dist < interval) {\n            // we need to delay by the difference between interval and dist\n            // for example: if distance is 10 ms and interval is 16 ms,\n            // we need to wait an additional 6ms before calling the function)\n            if (!immidiateOnly) {\n                timeout = setTimeout(fn, interval - dist);\n            }\n        } else {\n            // go!\n            fn();\n        }\n    };\n};\n\nconst MAX_FILES_LIMIT = 1000000;\n\nconst prevent = e => e.preventDefault();\n\nconst create$e = ({ root, props }) => {\n    // Add id\n    const id = root.query('GET_ID');\n    if (id) {\n        root.element.id = id;\n    }\n\n    // Add className\n    const className = root.query('GET_CLASS_NAME');\n    if (className) {\n        className\n            .split(' ')\n            .filter(name => name.length)\n            .forEach(name => {\n                root.element.classList.add(name);\n            });\n    }\n\n    // Field label\n    root.ref.label = root.appendChildView(\n        root.createChildView(dropLabel, {\n            ...props,\n            translateY: null,\n            caption: root.query('GET_LABEL_IDLE'),\n        })\n    );\n\n    // List of items\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, { translateY: null }));\n\n    // Background panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'panel-root' }));\n\n    // Assistant notifies assistive tech when content changes\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, { ...props }));\n\n    // Data\n    root.ref.data = root.appendChildView(root.createChildView(data, { ...props }));\n\n    // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure);\n\n    // information on the root height or fixed height status\n    root.ref.bounds = null;\n\n    // apply initial style properties\n    root.query('GET_STYLES')\n        .filter(style => !isEmpty(style.value))\n        .map(({ name, value }) => {\n            root.element.dataset[name] = value;\n        });\n\n    // determine if width changed\n    root.ref.widthPrevious = null;\n    root.ref.widthUpdated = debounce(() => {\n        root.ref.updateHistory = [];\n        root.dispatch('DID_RESIZE_ROOT');\n    }, 250);\n\n    // history of updates\n    root.ref.previousAspectRatio = null;\n    root.ref.updateHistory = [];\n\n    // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)\n    const canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;\n    const hasPointerEvents = 'PointerEvent' in window;\n    if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {\n        root.element.addEventListener('touchmove', prevent, { passive: false });\n        root.element.addEventListener('gesturestart', prevent);\n    }\n\n    // add credits\n    const credits = root.query('GET_CREDITS');\n    const hasCredits = credits.length === 2;\n    if (hasCredits) {\n        const frag = document.createElement('a');\n        frag.className = 'filepond--credits';\n        frag.setAttribute('aria-hidden', 'true');\n        frag.href = credits[0];\n        frag.tabindex = -1;\n        frag.target = '_blank';\n        frag.rel = 'noopener noreferrer';\n        frag.textContent = credits[1];\n        root.element.appendChild(frag);\n        root.ref.credits = frag;\n    }\n};\n\nconst write$9 = ({ root, props, actions }) => {\n    // route actions\n    route$5({ root, props, actions });\n\n    // apply style properties\n    actions\n        .filter(action => /^DID_SET_STYLE_/.test(action.type))\n        .filter(action => !isEmpty(action.data.value))\n        .map(({ type, data }) => {\n            const name = toCamels(type.substring(8).toLowerCase(), '_');\n            root.element.dataset[name] = data.value;\n            root.invalidateLayout();\n        });\n\n    if (root.rect.element.hidden) return;\n\n    if (root.rect.element.width !== root.ref.widthPrevious) {\n        root.ref.widthPrevious = root.rect.element.width;\n        root.ref.widthUpdated();\n    }\n\n    // get box bounds, we do this only once\n    let bounds = root.ref.bounds;\n    if (!bounds) {\n        bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);\n\n        // destroy measure element\n        root.element.removeChild(root.ref.measure);\n        root.ref.measure = null;\n    }\n\n    // get quick references to various high level parts of the upload tool\n    const { hopper, label, list, panel } = root.ref;\n\n    // sets correct state to hopper scope\n    if (hopper) {\n        hopper.updateHopperState();\n    }\n\n    // bool to indicate if we're full or not\n    const aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    const isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    const maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    const atMaxCapacity = totalItems === maxItems;\n\n    // action used to add item\n    const addAction = actions.find(action => action.type === 'DID_ADD_ITEM');\n\n    // if reached max capacity and we've just reached it\n    if (atMaxCapacity && addAction) {\n        // get interaction type\n        const interactionMethod = addAction.data.interactionMethod;\n\n        // hide label\n        label.opacity = 0;\n\n        if (isMultiItem) {\n            label.translateY = -40;\n        } else {\n            if (interactionMethod === InteractionMethod.API) {\n                label.translateX = 40;\n            } else if (interactionMethod === InteractionMethod.BROWSE) {\n                label.translateY = 40;\n            } else {\n                label.translateY = 30;\n            }\n        }\n    } else if (!atMaxCapacity) {\n        label.opacity = 1;\n        label.translateX = 0;\n        label.translateY = 0;\n    }\n\n    const listItemMargin = calculateListItemMargin(root);\n\n    const listHeight = calculateListHeight(root);\n\n    const labelHeight = label.rect.element.height;\n    const currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n\n    const listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    const listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n\n    const visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    const boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;\n\n    // link list to label bottom position\n    list.translateY =\n        Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n        // fixed aspect ratio\n\n        // calculate height based on width\n        const width = root.rect.element.width;\n        const height = width * aspectRatio;\n\n        // clear history if aspect ratio has changed\n        if (aspectRatio !== root.ref.previousAspectRatio) {\n            root.ref.previousAspectRatio = aspectRatio;\n            root.ref.updateHistory = [];\n        }\n\n        // remember this width\n        const history = root.ref.updateHistory;\n        history.push(width);\n\n        const MAX_BOUNCES = 2;\n        if (history.length > MAX_BOUNCES * 2) {\n            const l = history.length;\n            const bottom = l - 10;\n            let bounces = 0;\n            for (let i = l; i >= bottom; i--) {\n                if (history[i] === history[i - 2]) {\n                    bounces++;\n                }\n\n                if (bounces >= MAX_BOUNCES) {\n                    // dont adjust height\n                    return;\n                }\n            }\n        }\n\n        // fix height of panel so it adheres to aspect ratio\n        panel.scalable = false;\n        panel.height = height;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            height -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = height;\n    } else if (bounds.fixedHeight) {\n        // fixed height\n\n        // fix height of panel\n        panel.scalable = false;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            bounds.fixedHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // no need to set container bounds as these are handles by CSS fixed height\n    } else if (bounds.cappedHeight) {\n        // max-height\n\n        // not a fixed height panel\n        const isCappedHeight = visualHeight >= bounds.cappedHeight;\n        const panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n        panel.scalable = true;\n        panel.height = isCappedHeight\n            ? panelHeight\n            : panelHeight - listItemMargin.top - listItemMargin.bottom;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            panelHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height (if is overflowing)\n        if (visualHeight > bounds.cappedHeight && listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.min(\n            bounds.cappedHeight,\n            boundsHeight - listItemMargin.top - listItemMargin.bottom\n        );\n    } else {\n        // flexible height\n\n        // not a fixed height panel\n        const itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n        panel.scalable = true;\n        panel.height = Math.max(labelHeight, visualHeight - itemMargin);\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n\n    // move credits to bottom\n    if (root.ref.credits && panel.heightCurrent)\n        root.ref.credits.style.transform = `translateY(${panel.heightCurrent}px)`;\n};\n\nconst calculateListItemMargin = root => {\n    const item = root.ref.list.childViews[0].childViews[0];\n    return item\n        ? {\n              top: item.rect.element.marginTop,\n              bottom: item.rect.element.marginBottom,\n          }\n        : {\n              top: 0,\n              bottom: 0,\n          };\n};\n\nconst calculateListHeight = root => {\n    let visual = 0;\n    let bounds = 0;\n\n    // get file list reference\n    const scrollList = root.ref.list;\n    const itemList = scrollList.childViews[0];\n    const visibleChildren = itemList.childViews.filter(child => child.rect.element.height);\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // no children, done!\n    if (children.length === 0) return { visual, bounds };\n\n    const horizontalSpace = itemList.rect.element.width;\n    const dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);\n\n    const childRect = children[0].rect.element;\n\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n\n    const newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n    const removedItem = children.find(child => child.markedForRemoval && child.opacity < 0.45)\n        ? -1\n        : 0;\n    const verticalItemCount = children.length + newItem + removedItem;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        children.forEach(item => {\n            const height = item.rect.element.height + itemVerticalMargin;\n            bounds += height;\n            visual += height * item.opacity;\n        });\n    }\n    // grid\n    else {\n        bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n        visual = bounds;\n    }\n\n    return { visual, bounds };\n};\n\nconst calculateRootBoundingBoxHeight = root => {\n    const height = root.ref.measureHeight || null;\n    const cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    const fixedHeight = height === 0 ? null : height;\n\n    return {\n        cappedHeight,\n        fixedHeight,\n    };\n};\n\nconst exceedsMaxFiles = (root, items) => {\n    const allowReplace = root.query('GET_ALLOW_REPLACE');\n    const allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    let maxItems = root.query('GET_MAX_FILES');\n\n    // total amount of items being dragged\n    const totalBrowseItems = items.length;\n\n    // if does not allow multiple items and dragging more than one item\n    if (!allowMultiple && totalBrowseItems > 1) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    // limit max items to one if not allowed to drop multiple items\n    maxItems = allowMultiple ? maxItems : 1;\n\n    if (!allowMultiple && allowReplace) {\n        // There is only one item, so there is room to replace or add an item\n        return false;\n    }\n\n    // no more room?\n    const hasMaxItems = isInt(maxItems);\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    return false;\n};\n\nconst getDragIndex = (list, children, position) => {\n    const itemList = list.childViews[0];\n    return getItemIndexByPosition(itemList, children, {\n        left: position.scopeLeft - itemList.rect.element.left,\n        top:\n            position.scopeTop -\n            (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop),\n    });\n};\n\n/**\n * Enable or disable file drop functionality\n */\nconst toggleDrop = root => {\n    const isAllowed = root.query('GET_ALLOW_DROP');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.hopper) {\n        const hopper = createHopper(\n            root.element,\n            items => {\n                // allow quick validation of dropped items\n                const beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || (() => true);\n\n                // all items should be validated by all filters as valid\n                const dropValidation = root.query('GET_DROP_VALIDATION');\n                return dropValidation\n                    ? items.every(\n                          item =>\n                              applyFilters('ALLOW_HOPPER_ITEM', item, {\n                                  query: root.query,\n                              }).every(result => result === true) && beforeDropFile(item)\n                      )\n                    : true;\n            },\n            {\n                filterItems: items => {\n                    const ignoredFiles = root.query('GET_IGNORED_FILES');\n                    return items.filter(item => {\n                        if (isFile(item)) {\n                            return !ignoredFiles.includes(item.name.toLowerCase());\n                        }\n                        return true;\n                    });\n                },\n                catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n                requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT'),\n            }\n        );\n\n        hopper.onload = (items, position) => {\n            // get item children elements and sort based on list sort\n            const list = root.ref.list.childViews[0];\n            const visibleChildren = list.childViews.filter(child => child.rect.element.height);\n            const children = root\n                .query('GET_ACTIVE_ITEMS')\n                .map(item => visibleChildren.find(child => child.id === item.id))\n                .filter(item => item);\n\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // go\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: getDragIndex(root.ref.list, children, position),\n                    interactionMethod: InteractionMethod.DROP,\n                });\n            });\n\n            root.dispatch('DID_DROP', { position });\n\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        hopper.ondragstart = position => {\n            root.dispatch('DID_START_DRAG', { position });\n        };\n\n        hopper.ondrag = debounce(position => {\n            root.dispatch('DID_DRAG', { position });\n        });\n\n        hopper.ondragend = position => {\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        root.ref.hopper = hopper;\n\n        root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!enabled && root.ref.hopper) {\n        root.ref.hopper.destroy();\n        root.ref.hopper = null;\n        root.removeChildView(root.ref.drip);\n    }\n};\n\n/**\n * Enable or disable browse functionality\n */\nconst toggleBrowse = (root, props) => {\n    const isAllowed = root.query('GET_ALLOW_BROWSE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.browser) {\n        root.ref.browser = root.appendChildView(\n            root.createChildView(browser, {\n                ...props,\n                onload: items => {\n                    applyFilterChain('ADD_ITEMS', items, {\n                        dispatch: root.dispatch,\n                    }).then(queue => {\n                        // these files don't fit so stop here\n                        if (exceedsMaxFiles(root, queue)) return false;\n\n                        // add items!\n                        root.dispatch('ADD_ITEMS', {\n                            items: queue,\n                            index: -1,\n                            interactionMethod: InteractionMethod.BROWSE,\n                        });\n                    });\n                },\n            }),\n            0\n        );\n    } else if (!enabled && root.ref.browser) {\n        root.removeChildView(root.ref.browser);\n        root.ref.browser = null;\n    }\n};\n\n/**\n * Enable or disable paste functionality\n */\nconst togglePaste = root => {\n    const isAllowed = root.query('GET_ALLOW_PASTE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.paster) {\n        root.ref.paster = createPaster();\n        root.ref.paster.onload = items => {\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // add items!\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: -1,\n                    interactionMethod: InteractionMethod.PASTE,\n                });\n            });\n        };\n    } else if (!enabled && root.ref.paster) {\n        root.ref.paster.destroy();\n        root.ref.paster = null;\n    }\n};\n\n/**\n * Route actions\n */\nconst route$5 = createRoute({\n    DID_SET_ALLOW_BROWSE: ({ root, props }) => {\n        toggleBrowse(root, props);\n    },\n    DID_SET_ALLOW_DROP: ({ root }) => {\n        toggleDrop(root);\n    },\n    DID_SET_ALLOW_PASTE: ({ root }) => {\n        togglePaste(root);\n    },\n    DID_SET_DISABLED: ({ root, props }) => {\n        toggleDrop(root);\n        togglePaste(root);\n        toggleBrowse(root, props);\n        const isDisabled = root.query('GET_DISABLED');\n        if (isDisabled) {\n            root.element.dataset.disabled = 'disabled';\n        } else {\n            // delete root.element.dataset.disabled; <= this does not work on iOS 10\n            root.element.removeAttribute('data-disabled');\n        }\n    },\n});\n\nconst root = createView({\n    name: 'root',\n    read: ({ root }) => {\n        if (root.ref.measure) {\n            root.ref.measureHeight = root.ref.measure.offsetHeight;\n        }\n    },\n    create: create$e,\n    write: write$9,\n    destroy: ({ root }) => {\n        if (root.ref.paster) {\n            root.ref.paster.destroy();\n        }\n        if (root.ref.hopper) {\n            root.ref.hopper.destroy();\n        }\n        root.element.removeEventListener('touchmove', prevent);\n        root.element.removeEventListener('gesturestart', prevent);\n    },\n    mixins: {\n        styles: ['height'],\n    },\n});\n\n// creates the app\nconst createApp = (initialOptions = {}) => {\n    // let element\n    let originalElement = null;\n\n    // get default options\n    const defaultOptions = getOptions();\n\n    // create the data store, this will contain all our app info\n    const store = createStore(\n        // initial state (should be serializable)\n        createInitialState(defaultOptions),\n\n        // queries\n        [queries, createOptionQueries(defaultOptions)],\n\n        // action handlers\n        [actions, createOptionActions(defaultOptions)]\n    );\n\n    // set initial options\n    store.dispatch('SET_OPTIONS', { options: initialOptions });\n\n    // kick thread if visibility changes\n    const visibilityHandler = () => {\n        if (document.hidden) return;\n        store.dispatch('KICK');\n    };\n    document.addEventListener('visibilitychange', visibilityHandler);\n\n    // re-render on window resize start and finish\n    let resizeDoneTimer = null;\n    let isResizing = false;\n    let isResizingHorizontally = false;\n    let initialWindowWidth = null;\n    let currentWindowWidth = null;\n    const resizeHandler = () => {\n        if (!isResizing) {\n            isResizing = true;\n        }\n        clearTimeout(resizeDoneTimer);\n        resizeDoneTimer = setTimeout(() => {\n            isResizing = false;\n            initialWindowWidth = null;\n            currentWindowWidth = null;\n            if (isResizingHorizontally) {\n                isResizingHorizontally = false;\n                store.dispatch('DID_STOP_RESIZE');\n            }\n        }, 500);\n    };\n    window.addEventListener('resize', resizeHandler);\n\n    // render initial view\n    const view = root(store, { id: getUniqueId() });\n\n    //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n    let isResting = false;\n    let isHidden = false;\n\n    const readWriteApi = {\n        // necessary for update loop\n\n        /**\n         * Reads from dom (never call manually)\n         * @private\n         */\n        _read: () => {\n            // test if we're resizing horizontally\n            // TODO: see if we can optimize this by measuring root rect\n            if (isResizing) {\n                currentWindowWidth = window.innerWidth;\n                if (!initialWindowWidth) {\n                    initialWindowWidth = currentWindowWidth;\n                }\n\n                if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n                    store.dispatch('DID_START_RESIZE');\n                    isResizingHorizontally = true;\n                }\n            }\n\n            if (isHidden && isResting) {\n                // test if is no longer hidden\n                isResting = view.element.offsetParent === null;\n            }\n\n            // if resting, no need to read as numbers will still all be correct\n            if (isResting) return;\n\n            // read view data\n            view._read();\n\n            // if is hidden we need to know so we exit rest mode when revealed\n            isHidden = view.rect.element.hidden;\n        },\n\n        /**\n         * Writes to dom (never call manually)\n         * @private\n         */\n        _write: ts => {\n            // get all actions from store\n            const actions = store\n                .processActionQueue()\n\n                // filter out set actions (these will automatically trigger DID_SET)\n                .filter(action => !/^SET_/.test(action.type));\n\n            // if was idling and no actions stop here\n            if (isResting && !actions.length) return;\n\n            // some actions might trigger events\n            routeActionsToEvents(actions);\n\n            // update the view\n            isResting = view._write(ts, actions, isResizingHorizontally);\n\n            // will clean up all archived items\n            removeReleasedItems(store.query('GET_ITEMS'));\n\n            // now idling\n            if (isResting) {\n                store.processDispatchQueue();\n            }\n        },\n    };\n\n    //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n    const createEvent = name => data => {\n        // create default event\n        const event = {\n            type: name,\n        };\n\n        // no data to add\n        if (!data) {\n            return event;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('error')) {\n            event.error = data.error ? { ...data.error } : null;\n        }\n\n        if (data.status) {\n            event.status = { ...data.status };\n        }\n\n        if (data.file) {\n            event.output = data.file;\n        }\n\n        // only source is available, else add item if possible\n        if (data.source) {\n            event.file = data.source;\n        } else if (data.item || data.id) {\n            const item = data.item ? data.item : store.query('GET_ITEM', data.id);\n            event.file = item ? createItemAPI(item) : null;\n        }\n\n        // map all items in a possible items array\n        if (data.items) {\n            event.items = data.items.map(createItemAPI);\n        }\n\n        // if this is a progress event add the progress amount\n        if (/progress/.test(name)) {\n            event.progress = data.progress;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {\n            event.origin = data.origin;\n            event.target = data.target;\n        }\n\n        return event;\n    };\n\n    const eventRoutes = {\n        DID_DESTROY: createEvent('destroy'),\n\n        DID_INIT: createEvent('init'),\n\n        DID_THROW_MAX_FILES: createEvent('warning'),\n\n        DID_INIT_ITEM: createEvent('initfile'),\n        DID_START_ITEM_LOAD: createEvent('addfilestart'),\n        DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n        DID_LOAD_ITEM: createEvent('addfile'),\n\n        DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n\n        DID_PREPARE_OUTPUT: createEvent('preparefile'),\n\n        DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n        DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n        DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n        DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n        DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n\n        DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n\n        DID_REMOVE_ITEM: createEvent('removefile'),\n\n        DID_UPDATE_ITEMS: createEvent('updatefiles'),\n\n        DID_ACTIVATE_ITEM: createEvent('activatefile'),\n\n        DID_REORDER_ITEMS: createEvent('reorderfiles'),\n    };\n\n    const exposeEvent = event => {\n        // create event object to be dispatched\n        const detail = { pond: exports, ...event };\n        delete detail.type;\n        view.element.dispatchEvent(\n            new CustomEvent(`FilePond:${event.type}`, {\n                // event info\n                detail,\n\n                // event behaviour\n                bubbles: true,\n                cancelable: true,\n                composed: true, // triggers listeners outside of shadow root\n            })\n        );\n\n        // event object to params used for `on()` event handlers and callbacks `oninit()`\n        const params = [];\n\n        // if is possible error event, make it the first param\n        if (event.hasOwnProperty('error')) {\n            params.push(event.error);\n        }\n\n        // file is always section\n        if (event.hasOwnProperty('file')) {\n            params.push(event.file);\n        }\n\n        // append other props\n        const filtered = ['type', 'error', 'file'];\n        Object.keys(event)\n            .filter(key => !filtered.includes(key))\n            .forEach(key => params.push(event[key]));\n\n        // on(type, () => { })\n        exports.fire(event.type, ...params);\n\n        // oninit = () => {}\n        const handler = store.query(`GET_ON${event.type.toUpperCase()}`);\n        if (handler) {\n            handler(...params);\n        }\n    };\n\n    const routeActionsToEvents = actions => {\n        if (!actions.length) return;\n        actions\n            .filter(action => eventRoutes[action.type])\n            .forEach(action => {\n                const routes = eventRoutes[action.type];\n                (Array.isArray(routes) ? routes : [routes]).forEach(route => {\n                    // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init\n                    if (action.type === 'DID_INIT_ITEM') {\n                        exposeEvent(route(action.data));\n                    } else {\n                        setTimeout(() => {\n                            exposeEvent(route(action.data));\n                        }, 0);\n                    }\n                });\n            });\n    };\n\n    //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n    const setOptions = options => store.dispatch('SET_OPTIONS', { options });\n\n    const getFile = query => store.query('GET_ACTIVE_ITEM', query);\n\n    const prepareFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PREPARE', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const addFile = (source, options = {}) =>\n        new Promise((resolve, reject) => {\n            addFiles([{ source, options }], { index: options.index })\n                .then(items => resolve(items && items[0]))\n                .catch(reject);\n        });\n\n    const isFilePondFile = obj => obj.file && obj.id;\n\n    const removeFile = (query, options) => {\n        // if only passed options\n        if (typeof query === 'object' && !isFilePondFile(query) && !options) {\n            options = query;\n            query = undefined;\n        }\n\n        // request item removal\n        store.dispatch('REMOVE_ITEM', { ...options, query });\n\n        // see if item has been removed\n        return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    const addFiles = (...args) =>\n        new Promise((resolve, reject) => {\n            const sources = [];\n            const options = {};\n\n            // user passed a sources array\n            if (isArray(args[0])) {\n                sources.push.apply(sources, args[0]);\n                Object.assign(options, args[1] || {});\n            } else {\n                // user passed sources as arguments, last one might be options object\n                const lastArgument = args[args.length - 1];\n                if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n                    Object.assign(options, args.pop());\n                }\n\n                // add rest to sources\n                sources.push(...args);\n            }\n\n            store.dispatch('ADD_ITEMS', {\n                items: sources,\n                index: options.index,\n                interactionMethod: InteractionMethod.API,\n                success: resolve,\n                failure: reject,\n            });\n        });\n\n    const getFiles = () => store.query('GET_ACTIVE_ITEMS');\n\n    const processFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PROCESSING', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const prepareFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        const items = queries.length ? queries : getFiles();\n        return Promise.all(items.map(prepareFile));\n    };\n\n    const processFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        if (!queries.length) {\n            const files = getFiles().filter(\n                item =>\n                    !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) &&\n                    item.status !== ItemStatus.PROCESSING &&\n                    item.status !== ItemStatus.PROCESSING_COMPLETE &&\n                    item.status !== ItemStatus.PROCESSING_REVERT_ERROR\n            );\n            return Promise.all(files.map(processFile));\n        }\n        return Promise.all(queries.map(processFile));\n    };\n\n    const removeFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n\n        let options;\n        if (typeof queries[queries.length - 1] === 'object') {\n            options = queries.pop();\n        } else if (Array.isArray(args[0])) {\n            options = args[1];\n        }\n\n        const files = getFiles();\n\n        if (!queries.length) return Promise.all(files.map(file => removeFile(file, options)));\n\n        // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n        const mappedQueries = queries\n            .map(query => (isNumber(query) ? (files[query] ? files[query].id : null) : query))\n            .filter(query => query);\n\n        return mappedQueries.map(q => removeFile(q, options));\n    };\n\n    const exports = {\n        // supports events\n        ...on(),\n\n        // inject private api methods\n        ...readWriteApi,\n\n        // inject all getters and setters\n        ...createOptionAPI(store, defaultOptions),\n\n        /**\n         * Override options defined in options object\n         * @param options\n         */\n        setOptions,\n\n        /**\n         * Load the given file\n         * @param source - the source of the file (either a File, base64 data uri or url)\n         * @param options - object, { index: 0 }\n         */\n        addFile,\n\n        /**\n         * Load the given files\n         * @param sources - the sources of the files to load\n         * @param options - object, { index: 0 }\n         */\n        addFiles,\n\n        /**\n         * Returns the file objects matching the given query\n         * @param query { string, number, null }\n         */\n        getFile,\n\n        /**\n         * Upload file with given name\n         * @param query { string, number, null  }\n         */\n        processFile,\n\n        /**\n         * Request prepare output for file with given name\n         * @param query { string, number, null  }\n         */\n        prepareFile,\n\n        /**\n         * Removes a file by its name\n         * @param query { string, number, null  }\n         */\n        removeFile,\n\n        /**\n         * Moves a file to a new location in the files list\n         */\n        moveFile: (query, index) => store.dispatch('MOVE_ITEM', { query, index }),\n\n        /**\n         * Returns all files (wrapped in public api)\n         */\n        getFiles,\n\n        /**\n         * Starts uploading all files\n         */\n        processFiles,\n\n        /**\n         * Clears all files from the files list\n         */\n        removeFiles,\n\n        /**\n         * Starts preparing output of all files\n         */\n        prepareFiles,\n\n        /**\n         * Sort list of files\n         */\n        sort: compare => store.dispatch('SORT', { compare }),\n\n        /**\n         * Browse the file system for a file\n         */\n        browse: () => {\n            // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n            var input = view.element.querySelector('input[type=file]');\n            if (input) {\n                input.click();\n            }\n        },\n\n        /**\n         * Destroys the app\n         */\n        destroy: () => {\n            // request destruction\n            exports.fire('destroy', view.element);\n\n            // stop active processes (file uploads, fetches, stuff like that)\n            // loop over items and depending on states call abort for ongoing processes\n            store.dispatch('ABORT_ALL');\n\n            // destroy view\n            view._destroy();\n\n            // stop listening to resize\n            window.removeEventListener('resize', resizeHandler);\n\n            // stop listening to the visiblitychange event\n            document.removeEventListener('visibilitychange', visibilityHandler);\n\n            // dispatch destroy\n            store.dispatch('DID_DESTROY');\n        },\n\n        /**\n         * Inserts the plugin before the target element\n         */\n        insertBefore: element => insertBefore(view.element, element),\n\n        /**\n         * Inserts the plugin after the target element\n         */\n        insertAfter: element => insertAfter(view.element, element),\n\n        /**\n         * Appends the plugin to the target element\n         */\n        appendTo: element => element.appendChild(view.element),\n\n        /**\n         * Replaces an element with the app\n         */\n        replaceElement: element => {\n            // insert the app before the element\n            insertBefore(view.element, element);\n\n            // remove the original element\n            element.parentNode.removeChild(element);\n\n            // remember original element\n            originalElement = element;\n        },\n\n        /**\n         * Restores the original element\n         */\n        restoreElement: () => {\n            if (!originalElement) {\n                return; // no element to restore\n            }\n\n            // restore original element\n            insertAfter(originalElement, view.element);\n\n            // remove our element\n            view.element.parentNode.removeChild(view.element);\n\n            // remove reference\n            originalElement = null;\n        },\n\n        /**\n         * Returns true if the app root is attached to given element\n         * @param element\n         */\n        isAttachedTo: element => view.element === element || originalElement === element,\n\n        /**\n         * Returns the root element\n         */\n        element: {\n            get: () => view.element,\n        },\n\n        /**\n         * Returns the current pond status\n         */\n        status: {\n            get: () => store.query('GET_STATUS'),\n        },\n    };\n\n    // Done!\n    store.dispatch('DID_INIT');\n\n    // create actual api object\n    return createObject(exports);\n};\n\nconst createAppObject = (customOptions = {}) => {\n    // default options\n    const defaultOptions = {};\n    forin(getOptions(), (key, value) => {\n        defaultOptions[key] = value[0];\n    });\n\n    // set app options\n    const app = createApp({\n        // default options\n        ...defaultOptions,\n\n        // custom options\n        ...customOptions,\n    });\n\n    // return the plugin instance\n    return app;\n};\n\nconst lowerCaseFirstLetter = string => string.charAt(0).toLowerCase() + string.slice(1);\n\nconst attributeNameToPropertyName = attributeName => toCamels(attributeName.replace(/^data-/, ''));\n\nconst mapObject = (object, propertyMap) => {\n    // remove unwanted\n    forin(propertyMap, (selector, mapping) => {\n        forin(object, (property, value) => {\n            // create regexp shortcut\n            const selectorRegExp = new RegExp(selector);\n\n            // tests if\n            const matches = selectorRegExp.test(property);\n\n            // no match, skip\n            if (!matches) {\n                return;\n            }\n\n            // if there's a mapping, the original property is always removed\n            delete object[property];\n\n            // should only remove, we done!\n            if (mapping === false) {\n                return;\n            }\n\n            // move value to new property\n            if (isString(mapping)) {\n                object[mapping] = value;\n                return;\n            }\n\n            // move to group\n            const group = mapping.group;\n            if (isObject(mapping) && !object[group]) {\n                object[group] = {};\n            }\n\n            object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n        });\n\n        // do submapping\n        if (mapping.mapping) {\n            mapObject(object[mapping.group], mapping.mapping);\n        }\n    });\n};\n\nconst getAttributesAsObject = (node, attributeMapping = {}) => {\n    // turn attributes into object\n    const attributes = [];\n    forin(node.attributes, index => {\n        attributes.push(node.attributes[index]);\n    });\n\n    const output = attributes\n        .filter(attribute => attribute.name)\n        .reduce((obj, attribute) => {\n            const value = attr(node, attribute.name);\n\n            obj[attributeNameToPropertyName(attribute.name)] =\n                value === attribute.name ? true : value;\n            return obj;\n        }, {});\n\n    // do mapping of object properties\n    mapObject(output, attributeMapping);\n\n    return output;\n};\n\nconst createAppAtElement = (element, options = {}) => {\n    // how attributes of the input element are mapped to the options for the plugin\n    const attributeMapping = {\n        // translate to other name\n        '^class$': 'className',\n        '^multiple$': 'allowMultiple',\n        '^capture$': 'captureMethod',\n        '^webkitdirectory$': 'allowDirectoriesOnly',\n\n        // group under single property\n        '^server': {\n            group: 'server',\n            mapping: {\n                '^process': {\n                    group: 'process',\n                },\n                '^revert': {\n                    group: 'revert',\n                },\n                '^fetch': {\n                    group: 'fetch',\n                },\n                '^restore': {\n                    group: 'restore',\n                },\n                '^load': {\n                    group: 'load',\n                },\n            },\n        },\n\n        // don't include in object\n        '^type$': false,\n        '^files$': false,\n    };\n\n    // add additional option translators\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);\n\n    // create final options object by setting options object and then overriding options supplied on element\n    const mergedOptions = {\n        ...options,\n    };\n\n    const attributeOptions = getAttributesAsObject(\n        element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element,\n        attributeMapping\n    );\n\n    // merge with options object\n    Object.keys(attributeOptions).forEach(key => {\n        if (isObject(attributeOptions[key])) {\n            if (!isObject(mergedOptions[key])) {\n                mergedOptions[key] = {};\n            }\n            Object.assign(mergedOptions[key], attributeOptions[key]);\n        } else {\n            mergedOptions[key] = attributeOptions[key];\n        }\n    });\n\n    // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n    mergedOptions.files = (options.files || []).concat(\n        Array.from(element.querySelectorAll('input:not([type=file])')).map(input => ({\n            source: input.value,\n            options: {\n                type: input.dataset.type,\n            },\n        }))\n    );\n\n    // build plugin\n    const app = createAppObject(mergedOptions);\n\n    // add already selected files\n    if (element.files) {\n        Array.from(element.files).forEach(file => {\n            app.addFile(file);\n        });\n    }\n\n    // replace the target element\n    app.replaceElement(element);\n\n    // expose\n    return app;\n};\n\n// if an element is passed, we create the instance at that element, if not, we just create an up object\nconst createApp$1 = (...args) =>\n    isNode(args[0]) ? createAppAtElement(...args) : createAppObject(...args);\n\nconst PRIVATE_METHODS = ['fire', '_read', '_write'];\n\nconst createAppAPI = app => {\n    const api = {};\n\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n\n    return api;\n};\n\n/**\n * Replaces placeholders in given string with replacements\n * @param string - \"Foo {bar}\"\"\n * @param replacements - { \"bar\": 10 }\n */\nconst replaceInString = (string, replacements) =>\n    string.replace(/(?:{([a-zA-Z]+)})/g, (match, group) => replacements[group]);\n\nconst createWorker = fn => {\n    const workerBlob = new Blob(['(', fn.toString(), ')()'], {\n        type: 'application/javascript',\n    });\n    const workerURL = URL.createObjectURL(workerBlob);\n    const worker = new Worker(workerURL);\n\n    return {\n        transfer: (message, cb) => {},\n        post: (message, cb, transferList) => {\n            const id = getUniqueId();\n\n            worker.onmessage = e => {\n                if (e.data.id === id) {\n                    cb(e.data.message);\n                }\n            };\n\n            worker.postMessage(\n                {\n                    id,\n                    message,\n                },\n                transferList\n            );\n        },\n        terminate: () => {\n            worker.terminate();\n            URL.revokeObjectURL(workerURL);\n        },\n    };\n};\n\nconst loadImage = url =>\n    new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = e => {\n            reject(e);\n        };\n        img.src = url;\n    });\n\nconst renameFile = (file, name) => {\n    const renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n};\n\nconst copyFile = file => renameFile(file, file.name);\n\n// already registered plugins (can't register twice)\nconst registeredPlugins = [];\n\n// pass utils to plugin\nconst createAppPlugin = plugin => {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n        return;\n    }\n\n    // remember this plugin\n    registeredPlugins.push(plugin);\n\n    // setup!\n    const pluginOutline = plugin({\n        addFilter,\n        utils: {\n            Type,\n            forin,\n            isString,\n            isFile,\n            toNaturalFileSize,\n            replaceInString,\n            getExtensionFromFilename,\n            getFilenameWithoutExtension,\n            guesstimateMimeType,\n            getFileFromBlob,\n            getFilenameFromURL,\n            createRoute,\n            createWorker,\n            createView,\n            createItemAPI,\n            loadImage,\n            copyFile,\n            renameFile,\n            createBlob,\n            applyFilterChain,\n            text,\n            getNumericAspectRatioFromString,\n        },\n        views: {\n            fileActionButton,\n        },\n    });\n\n    // add plugin options to default options\n    extendDefaultOptions(pluginOutline.options);\n};\n\n// feature detection used by supported() method\nconst isOperaMini = () => Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\nconst hasPromises = () => 'Promise' in window;\nconst hasBlobSlice = () => 'slice' in Blob.prototype;\nconst hasCreateObjectURL = () => 'URL' in window && 'createObjectURL' in window.URL;\nconst hasVisibility = () => 'visibilityState' in document;\nconst hasTiming = () => 'performance' in window; // iOS 8.x\nconst hasCSSSupports = () => 'supports' in (window.CSS || {}); // use to detect Safari 9+\nconst isIE11 = () => /MSIE|Trident/.test(window.navigator.userAgent);\n\nconst supported = (() => {\n    // Runs immediately and then remembers result for subsequent calls\n    const isSupported =\n        // Has to be a browser\n        isBrowser() &&\n        // Can't run on Opera Mini due to lack of everything\n        !isOperaMini() &&\n        // Require these APIs to feature detect a modern browser\n        hasVisibility() &&\n        hasPromises() &&\n        hasBlobSlice() &&\n        hasCreateObjectURL() &&\n        hasTiming() &&\n        // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)\n        (hasCSSSupports() || isIE11());\n\n    return () => isSupported;\n})();\n\n/**\n * Plugin internal state (over all instances)\n */\nconst state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: [],\n};\n\n// plugin name\nconst name = 'filepond';\n\n/**\n * Public Plugin methods\n */\nconst fn = () => {};\nlet Status$1 = {};\nlet FileStatus = {};\nlet FileOrigin$1 = {};\nlet OptionTypes = {};\nlet create$f = fn;\nlet destroy = fn;\nlet parse = fn;\nlet find = fn;\nlet registerPlugin = fn;\nlet getOptions$1 = fn;\nlet setOptions$1 = fn;\n\n// if not supported, no API\nif (supported()) {\n    // start painter and fire load event\n    createPainter(\n        () => {\n            state.apps.forEach(app => app._read());\n        },\n        ts => {\n            state.apps.forEach(app => app._write(ts));\n        }\n    );\n\n    // fire loaded event so we know when FilePond is available\n    const dispatch = () => {\n        // let others know we have area ready\n        document.dispatchEvent(\n            new CustomEvent('FilePond:loaded', {\n                detail: {\n                    supported,\n                    create: create$f,\n                    destroy,\n                    parse,\n                    find,\n                    registerPlugin,\n                    setOptions: setOptions$1,\n                },\n            })\n        );\n\n        // clean up event\n        document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n        // move to back of execution queue, FilePond should have been exported by then\n        setTimeout(() => dispatch(), 0);\n    } else {\n        document.addEventListener('DOMContentLoaded', dispatch);\n    }\n\n    // updates the OptionTypes object based on the current options\n    const updateOptionTypes = () =>\n        forin(getOptions(), (key, value) => {\n            OptionTypes[key] = value[1];\n        });\n\n    Status$1 = { ...Status };\n    FileOrigin$1 = { ...FileOrigin };\n    FileStatus = { ...ItemStatus };\n\n    OptionTypes = {};\n    updateOptionTypes();\n\n    // create method, creates apps and adds them to the app array\n    create$f = (...args) => {\n        const app = createApp$1(...args);\n        app.on('destroy', destroy);\n        state.apps.push(app);\n        return createAppAPI(app);\n    };\n\n    // destroys apps and removes them from the app array\n    destroy = hook => {\n        // returns true if the app was destroyed successfully\n        const indexToRemove = state.apps.findIndex(app => app.isAttachedTo(hook));\n        if (indexToRemove >= 0) {\n            // remove from apps\n            const app = state.apps.splice(indexToRemove, 1)[0];\n\n            // restore original dom element\n            app.restoreElement();\n\n            return true;\n        }\n\n        return false;\n    };\n\n    // parses the given context for plugins (does not include the context element itself)\n    parse = context => {\n        // get all possible hooks\n        const matchedHooks = Array.from(context.querySelectorAll(`.${name}`));\n\n        // filter out already active hooks\n        const newHooks = matchedHooks.filter(\n            newHook => !state.apps.find(app => app.isAttachedTo(newHook))\n        );\n\n        // create new instance for each hook\n        return newHooks.map(hook => create$f(hook));\n    };\n\n    // returns an app based on the given element hook\n    find = hook => {\n        const app = state.apps.find(app => app.isAttachedTo(hook));\n        if (!app) {\n            return null;\n        }\n        return createAppAPI(app);\n    };\n\n    // adds a plugin extension\n    registerPlugin = (...plugins) => {\n        // register plugins\n        plugins.forEach(createAppPlugin);\n\n        // update OptionTypes, each plugin might have extended the default options\n        updateOptionTypes();\n    };\n\n    getOptions$1 = () => {\n        const opts = {};\n        forin(getOptions(), (key, value) => {\n            opts[key] = value[0];\n        });\n        return opts;\n    };\n\n    setOptions$1 = opts => {\n        if (isObject(opts)) {\n            // update existing plugins\n            state.apps.forEach(app => {\n                app.setOptions(opts);\n            });\n\n            // override defaults\n            setOptions(opts);\n        }\n\n        // return new options\n        return getOptions$1();\n    };\n}\n\nexport {\n    FileOrigin$1 as FileOrigin,\n    FileStatus,\n    OptionTypes,\n    Status$1 as Status,\n    create$f as create,\n    destroy,\n    find,\n    getOptions$1 as getOptions,\n    parse,\n    registerPlugin,\n    setOptions$1 as setOptions,\n    supported,\n};\n","/*!\n * FilePondPluginFileValidateSize 2.2.8\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const { Type, replaceInString, toNaturalFileSize } = utils;\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n            return true;\n        }\n\n        const sizeMax = query('GET_MAX_FILE_SIZE');\n        if (sizeMax !== null && file.size > sizeMax) {\n            return false;\n        }\n\n        const sizeMin = query('GET_MIN_FILE_SIZE');\n        if (sizeMin !== null && file.size < sizeMin) {\n            return false;\n        }\n\n        return true;\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                // if not allowed, all fine, exit\n                if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n                    return resolve(file);\n                }\n\n                // check if file should be filtered\n                const fileFilter = query('GET_FILE_VALIDATE_SIZE_FILTER');\n                if (fileFilter && !fileFilter(file)) {\n                    return resolve(file);\n                }\n\n                // reject or resolve based on file size\n                const sizeMax = query('GET_MAX_FILE_SIZE');\n                if (sizeMax !== null && file.size > sizeMax) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMax,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // reject or resolve based on file size\n                const sizeMin = query('GET_MIN_FILE_SIZE');\n                if (sizeMin !== null && file.size < sizeMin) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMin,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // returns the current option value\n                const totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');\n                if (totalSizeMax !== null) {\n                    // get the current total file size\n                    const currentTotalSize = query('GET_ACTIVE_ITEMS').reduce((total, item) => {\n                        return total + item.fileSize;\n                    }, 0);\n\n                    // get the size of the new file\n                    if (currentTotalSize > totalSizeMax) {\n                        reject({\n                            status: {\n                                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),\n                                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {\n                                    filesize: toNaturalFileSize(\n                                        totalSizeMax,\n                                        '.',\n                                        query('GET_FILE_SIZE_BASE'),\n                                        query('GET_FILE_SIZE_LABELS', query)\n                                    ),\n                                }),\n                            },\n                        });\n                        return;\n                    }\n                }\n\n                // file is fine, let's pass it back\n                resolve(file);\n            })\n    );\n\n    return {\n        options: {\n            // Enable or disable file type validation\n            allowFileSizeValidation: [true, Type.BOOLEAN],\n\n            // Max individual file size in bytes\n            maxFileSize: [null, Type.INT],\n\n            // Min individual file size in bytes\n            minFileSize: [null, Type.INT],\n\n            // Max total file size in bytes\n            maxTotalFileSize: [null, Type.INT],\n\n            // Filter the files that need to be validated for size\n            fileValidateSizeFilter: [null, Type.FUNCTION],\n\n            // error labels\n            labelMinFileSizeExceeded: ['File is too small', Type.STRING],\n            labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],\n\n            labelMaxFileSizeExceeded: ['File is too large', Type.STRING],\n            labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],\n\n            labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],\n            labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","/*!\n * FilePondPluginFileValidateType 1.2.9\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const {\n        Type,\n        isString,\n        replaceInString,\n        guesstimateMimeType,\n        getExtensionFromFilename,\n        getFilenameFromURL,\n    } = utils;\n\n    const mimeTypeMatchesWildCard = (mimeType, wildcard) => {\n        const mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image\n        const wildcardGroup = wildcard.slice(0, -2); // image/* -> image\n        return mimeTypeGroup === wildcardGroup;\n    };\n\n    const isValidMimeType = (acceptedTypes, userInputType) =>\n        acceptedTypes.some(acceptedType => {\n            // accepted is wildcard mime type\n            if (/\\*$/.test(acceptedType)) {\n                return mimeTypeMatchesWildCard(userInputType, acceptedType);\n            }\n\n            // is normal mime type\n            return acceptedType === userInputType;\n        });\n\n    const getItemType = item => {\n        // if the item is a url we guess the mime type by the extension\n        let type = '';\n        if (isString(item)) {\n            const filename = getFilenameFromURL(item);\n            const extension = getExtensionFromFilename(filename);\n            if (extension) {\n                type = guesstimateMimeType(extension);\n            }\n        } else {\n            type = item.type;\n        }\n\n        return type;\n    };\n\n    const validateFile = (item, acceptedFileTypes, typeDetector) => {\n        // no types defined, everything is allowed \\o/\n        if (acceptedFileTypes.length === 0) {\n            return true;\n        }\n\n        // gets the item type\n        const type = getItemType(item);\n\n        // no type detector, test now\n        if (!typeDetector) {\n            return isValidMimeType(acceptedFileTypes, type);\n        }\n\n        // use type detector\n        return new Promise((resolve, reject) => {\n            typeDetector(item, type)\n                .then(detectedType => {\n                    if (isValidMimeType(acceptedFileTypes, detectedType)) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                })\n                .catch(reject);\n        });\n    };\n\n    const applyMimeTypeMap = map => acceptedFileType =>\n        map[acceptedFileType] === null ? false : map[acceptedFileType] || acceptedFileType;\n\n    // setup attribute mapping for accept\n    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', map =>\n        Object.assign(map, {\n            accept: 'acceptedFileTypes',\n        })\n    );\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        // if we are not doing file type validation exit\n        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n            return true;\n        }\n\n        // we validate the file against the accepted file types\n        return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n                    resolve(file);\n                    return;\n                }\n\n                const acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES');\n\n                // custom type detector method\n                const typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE');\n\n                // if invalid, exit here\n                const validationResult = validateFile(file, acceptedFileTypes, typeDetector);\n\n                const handleRejection = () => {\n                    const acceptedFileTypesMapped = acceptedFileTypes\n                        .map(\n                            applyMimeTypeMap(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP')\n                            )\n                        )\n                        .filter(label => label !== false);\n\n                    const acceptedFileTypesMappedUnique = acceptedFileTypesMapped.filter(\n                        (item, index) => acceptedFileTypesMapped.indexOf(item) === index\n                    );\n\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),\n                            sub: replaceInString(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'),\n                                {\n                                    allTypes: acceptedFileTypesMappedUnique.join(', '),\n                                    allButLastType: acceptedFileTypesMappedUnique\n                                        .slice(0, -1)\n                                        .join(', '),\n                                    lastType:\n                                        acceptedFileTypesMappedUnique[\n                                            acceptedFileTypesMappedUnique.length - 1\n                                        ],\n                                }\n                            ),\n                        },\n                    });\n                };\n\n                // has returned new filename immidiately\n                if (typeof validationResult === 'boolean') {\n                    if (!validationResult) {\n                        return handleRejection();\n                    }\n                    return resolve(file);\n                }\n\n                // is promise\n                validationResult\n                    .then(() => {\n                        resolve(file);\n                    })\n                    .catch(handleRejection);\n            })\n    );\n\n    // expose plugin\n    return {\n        // default options\n        options: {\n            // Enable or disable file type validation\n            allowFileTypeValidation: [true, Type.BOOLEAN],\n\n            // What file types to accept\n            acceptedFileTypes: [[], Type.ARRAY],\n            // - must be comma separated\n            // - mime types: image/png, image/jpeg, image/gif\n            // - extensions: .png, .jpg, .jpeg ( not enabled yet )\n            // - wildcards: image/*\n\n            // label to show when a type is not allowed\n            labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],\n\n            // nicer label\n            fileValidateTypeLabelExpectedTypes: [\n                'Expects {allButLastType} or {lastType}',\n                Type.STRING,\n            ],\n\n            // map mime types to extensions\n            fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],\n\n            // Custom function to detect type of file\n            fileValidateTypeDetectType: [null, Type.FUNCTION],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","import * as FilePond from \"filepond\";\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport styleInject from \"style-inject\";\n\nimport css from \"filepond/dist/filepond.css?inline\";\nstyleInject(css, { insertAt: \"top\" });\n\nexport {\n  FilePond,\n  FilePondPluginFileValidateSize,\n  FilePondPluginFileValidateType,\n};\n"],"names":["isNode","value","createStore","initialState","queries","actions","state","actionQueue","dispatchQueue","getState","processActionQueue","queue","processDispatchQueue","type","data","dispatch","isBlocking","actionHandlers","query","str","args","queryHandles","api","action","defineProperty","obj","property","definition","forin","cb","key","createObject","attr","node","name","ns","svgElements","isSVGElement","tag","createElement","className","attributes","element","appendChild","parent","child","index","appendChildView","childViews","view","removeChildView","IS_BROWSER","isBrowser","testElement","getChildCount","el","getViewRect","elementRect","offset","scale","left","top","right","bottom","rect","childView","childViewRect","expandRect","calculateRectSize","isNumber","thereYet","position","destination","velocity","errorMargin","spring","stiffness","damping","mass","target","resting","ts","skipToEndState","f","easeInOutQuad","t","tween","duration","easing","delay","start","p","reverse","animator","createAnimator","category","def","props","addGetSet","keys","overwrite","o","getter","setter","animations","mixinConfig","viewProps","viewInternalAPI","viewExternalAPI","initialProps","animation","addEvent","fn","removeEvent","listeners","viewState","events","add","remove","event","apis","isDefined","defaults","styles","currentProps","getOffset","getScale","getRect","propsHaveChanged","applyStyles","newProps","prop","opacity","perspective","translateX","translateY","scaleX","scaleY","rotateX","rotateY","rotateZ","originX","originY","width","height","transforms","elementCurrentStyle","Mixins","updateRect","style","createView","read","write","create","destroy","filterFrameActionsForChild","didCreateView","didWriteView","ignoreRect","ignoreRectUpdate","mixins","store","frameRect","isResting","activeMixins","ref","writers","readers","destroyers","getElement","getChildViews","getReference","createChildView","getStyle","_read","internalAPI","reader","_write","frameActions","shouldOptimize","writer","mixin","_destroy","destroyer","sharedAPIDefinition","internalAPIDefinition","needle","externalAPIDefinition","mixinAPIDefinition","a","b","mixinAPI","childCount","createPainter","fps","painter","interval","last","id","requestTick","cancelTick","setTimerType","tick","delta","createRoute","routes","root","timestamp","insertBefore","newNode","referenceNode","insertAfter","isArray","isEmpty","trim","toString","toArray","splitter","isBoolean","toBoolean","isString","toNumber","toInt","toFloat","isInt","toBytes","base","naturalFileSize","isFunction","toFunctionReference","string","levels","level","methods","createServerAPI","outline","createAction","method","timeout","headers","parts","toServerAPI","isNull","isObject","isAPI","getType","replaceSingleQuotes","conversionTable","convertTo","getValueByType","newValue","defaultValue","valueType","newValueType","convertedValue","createOption","currentValue","createOptions","options","optionDefinition","createInitialState","fromCamels","separator","part","createOptionAPI","createOptionActions","createOptionQueries","InteractionMethod","getUniqueId","arrayRemove","arr","run","sync","on","off","listener","fire","copyObjectPropertiesToObject","src","excluded","PRIVATE","createItemAPI","item","removeReleasedItems","items","ItemStatus","FileOrigin","getNonNumeric","getDecimalSeparator","getThousandsSeparator","decimalSeparator","thousandsStringWithSeparator","Type","filters","applyFilterChain","utils","resolve","reject","matchingFilters","initialFilter","current","next","error","applyFilters","addFilter","extendDefaultOptions","additionalOptions","defaultOptions","getOptions","setOptions","opts","getItemByQuery","getNumericAspectRatioFromString","aspectRatio","getActiveItems","Status","res","canUpdateFileInput","dataTransfer","ITEM_ERROR","ITEM_BUSY","ITEM_READY","isItemInErrorState","isItemInBusyState","isItemInReadyState","isAsync","EMPTY","ERROR","BUSY","IDLE","READY","option","status","hasRoomForItem","count","maxFileCount","limit","min","max","arrayInsert","insertItem","isBase64DataURI","getFilenameFromURL","url","getExtensionFromFilename","guesstimateExtension","subtype","leftPad","padding","getDateString","date","getFileFromBlob","blob","filename","extension","file","getBlobBuilder","createBlob","arrayBuffer","mimeType","BB","bb","getBlobFromByteStringWithMimeType","byteString","ab","ia","i","getMimeTypeFromBase64DataURI","dataURI","getBase64DataFromBase64DataURI","getByteStringFromBase64DataURI","getBlobFromBase64DataURI","getFileFromBase64DataURI","getFileNameFromHeader","header","matches","getFileSizeFromHeader","size","getTranfserIdFromHeader","getFileInfoFromHeaders","info","rows","source","createFileLoader","fetchFn","getProgress","abort","load","loadURL","response","computable","total","fileinfo","isGet","sendRequest","aborted","xhr","headersReceived","process","e","createResponse","code","body","createTimeoutResponse","hasQS","buildURL","createFetchFunction","apiUrl","onload","onerror","progress","request","ChunkStatus","processFileChunked","metadata","transfer","chunks","chunkTransferId","chunkServer","chunkSize","chunkRetryDelays","ondata","fd","requestTransferId","formData","requestParams","requestTransferOffset","requestUrl","lastChunkIndex","completeProcessingChunks","canProcessChunk","chunk","processChunk","processChunks","lengthComputable","loaded","updateTotalProgress","retryProcessChunk","totalBytesTransfered","totalSize","abortChunks","serverId","createFileProcessorFunction","canChunkUpload","shouldChunkUpload","willChunkUpload","createProcessorFunction","params","createRevertFunction","uniqueFileId","getRandomNumber","createPerceivedPerformanceUpdater","tickMin","tickMax","runtime","createFileProcessor","processFn","allowMinimumUploadDuration","progressFn","completeFn","transferId","reset","getDuration","getFilenameWithoutExtension","createFileStub","isFile","deepCloneObject","v","createItem","origin","serverFileReference","abortProcessingRequestComplete","setStatus","getFileExtension","getFileType","getFileSize","getFile","loader","meta","success","result","retryLoad","abortLoad","processor","onprocess","requestProcessing","abortProcessing","revert","revertFileUpload","forceRevert","serverTransferId","setMetadata","silent","handler","itemAPI","getItemIndexByQuery","getItemById","itemId","fetchBlob","getDomainFromURL","isExternalURL","dynamicLabel","label","isMockItem","listUpdated","optionalPromise","sortItems","compare","getItemByQueryFromState","itemHandler","failure","files","activeItems","change","shouldPrepareOutput","beforePrepareFile","upload","doUpload","currentIndex","interactionMethod","insertLocation","totalItems","ignoredFiles","isValidFile","promises","itemInsertLocation","mainStatus","handleAdd","shouldAdd","loadComplete","restore","fetch","err","processNow","maxParallelUploads","processNext","queueEntry","itemReference","server","noop","shouldRemove","removeFromView","handleRevert","shouldRevert","requestRemoveResult","optionKeys","prioritizedOptionKeys","PrioritizedOptions","formatFilename","createElement$1","tagName","text","textNode","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","describeArc","x","y","startAngle","endAngle","arcSweep","end","percentageArc","from","to","svg","ringStrokeWidth","ringFrom","ringTo","coordinates","progressIndicator","create$1","write$1","isDisabled","shouldDisable","fileActionButton","toNaturalFileSize","bytes","labelBytes","labelKilobytes","labelMegabytes","labelGigabytes","KB","MB","GB","removeDecimalsWhenZero","decimalCount","create$2","fileName","fileSize","updateFile","updateFileSizeOnError","fileInfo","toPercentage","create$3","main","sub","didSetItemLoadProgress","title","didSetItemProcessProgress","didRequestItemProcessing","didAbortItemProcessing","didCompleteItemProcessing","clear","fileStatus","Buttons","ButtonKeys","calculateFileInfoOffset","getRemoveIndicatorAligment","buttonRect","calculateButtonWidth","calculateFileVerticalCenterOffset","calculateFileHorizontalCenterOffset","getLoadIndicatorAlignment","getProcessIndicatorAlignment","DefaultStyle","IdleStyle","ProcessingStyle","StyleMap","processingCompleteIndicatorView","create$4","LocalButtons","prev","curr","allowRevert","allowRemove","allowProcess","instantUpload","alignRemoveItemButton","buttonFilter","enabledButtons","map","buttonView","loadIndicatorView","progressIndicatorView","write$2","route","stylesToApply","defaultStyles","control","create$5","didLoadItem","fileWrapper","PANEL_SPRING_PROPS","create$6","section","createSection","viewConstructor","write$3","topRect","bottomRect","panel","createDragHelper","itemIds","prevIndex","ITEM_TRANSLATE_SPRING","ITEM_SCALE_SPRING","StateMap","create$7","grab","removedActivateListener","dragState","drag","drop","route$1","write$4","getItemsPerRow","horizontalSpace","itemWidth","getItemIndexByPosition","children","positionInView","l","itemRect","itemHorizontalMargin","itemsPerRow","childMid","itemVerticalMargin","itemHeight","indexX","indexY","offsetX","offsetY","itemTop","itemRight","itemBottom","dropAreaDimensions","val","create$8","addItemView","now","spawnDate","cooldown","dist","moveItem","vx","vy","introItemView","removeItemView","getItemHeight","getItemWidth","dragItem","numItems","oldIndex","dragPosition","dragHeight","dragWidth","cols","location","visibleChildren","idx","childHeight","childBottom","childTop","route$2","write$5","dragCoordinates","dragIndex","addIndex","dragIndexOffset","removeIndexOffset","addIndexOffset","childRect","dragOffset","visualHeight","prevX","prevY","visualIndex","vectorX","vectorY","filterSetItemActions","list","create$9","storeDragCoordinates","clearDragCoordinates","route$3","write$6","newHeight","listScroller","attrToggle","enabledValue","resetFileInput","input","form","parentNode","create$a","setAcceptedFileTypes","toggleAllowMultiple","toggleDirectoryFilter","toggleDisabled","toggleRequired","setCaptureMethod","doesAllowBrowse","disableField","updateRequiredStatus","updateFieldValidityStatus","browser","Key","create$b","updateLabelValue","clickable","dropLabel","addBlob","moveBlob","hideBlob","explodeBlob","write$7","route$4","drip","setInputFiles","create$c","getField","syncFieldPositionsWithItems","didReorderItems","didAddItem","shouldUseFileInput","dataContainer","didLoadItem$1","field","fileItem","didPrepareOutput","didSetDisabled","didRemoveItem","didDefineValue","write$8","getRootNode","images","text$1","guesstimateMimeType","requestDataTransferItems","links","getLinks","hasFiles","getFiles","promisedFiles","isFileSystemItem","getFilesFromItem","returnedFileGroups","group","isEntry","entry","getAsEntry","isDirectoryEntry","getFilesInDirectory","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","readBatch","entries","correctedFile","correctMissingFileType","getLinksFromTransferMetaData","getLinksFromTransferURLData","dragNDropObservers","eventPosition","createDragNDropClient","scopeToObserve","filterElement","observer","getDragNDropObserver","client","newObserver","createDragNDropObserver","clients","dragenter","dragover","dragleave","handlers","createHandler","elementFromPoint","point","isEventTarget","elementAtPosition","initialTarget","setDropEffect","effect","onenter","overDropTarget","onexit","ondrag","allowdrop","allowsTransfer","ondrop","createHopper","scope","validateItems","catchesDropsOnPage","requiresDropOnElement","filterItems","lastState","currentState","filteredItems","listening","listeners$1","handlePaste","activeEl","inScope","listen","unlisten","createPaster","create$d","addFilesNotificationTimeout","notificationClearTimeout","filenames","assist","message","clear$1","listModified","isUsingFilePond","itemAdded","itemRemoved","itemProcessed","itemProcessedUndo","itemError","assistant","toCamels","debounce","func","immidiateOnly","MAX_FILES_LIMIT","prevent","create$e","canHover","hasPointerEvents","credits","frag","write$9","route$5","bounds","calculateRootBoundingBoxHeight","hopper","isMultiItem","maxItems","atMaxCapacity","addAction","listItemMargin","calculateListItemMargin","listHeight","calculateListHeight","labelHeight","currentLabelHeight","listMarginTop","listMarginBottom","boundsHeight","history","MAX_BOUNCES","bounces","listAvailableHeight","isCappedHeight","panelHeight","itemMargin","visual","scrollList","itemList","newItem","removedItem","verticalItemCount","exceedsMaxFiles","allowReplace","allowMultiple","totalBrowseItems","getDragIndex","toggleDrop","isAllowed","enabled","beforeDropFile","toggleBrowse","togglePaste","createApp","initialOptions","originalElement","visibilityHandler","resizeDoneTimer","isResizing","isResizingHorizontally","initialWindowWidth","currentWindowWidth","resizeHandler","isHidden","readWriteApi","routeActionsToEvents","createEvent","eventRoutes","exposeEvent","detail","exports","filtered","prepareFile","addFile","addFiles","isFilePondFile","removeFile","sources","lastArgument","processFile","prepareFiles","processFiles","removeFiles","q","createAppObject","customOptions","lowerCaseFirstLetter","attributeNameToPropertyName","attributeName","mapObject","object","propertyMap","selector","mapping","selectorRegExp","getAttributesAsObject","attributeMapping","output","attribute","createAppAtElement","mergedOptions","attributeOptions","app","createApp$1","PRIVATE_METHODS","createAppAPI","replaceInString","replacements","match","createWorker","workerBlob","workerURL","worker","transferList","loadImage","img","renameFile","renamedFile","copyFile","registeredPlugins","createAppPlugin","plugin","pluginOutline","isOperaMini","hasPromises","hasBlobSlice","hasCreateObjectURL","hasVisibility","hasTiming","hasCSSSupports","isIE11","supported","isSupported","Status$1","FileStatus","FileOrigin$1","OptionTypes","create$f","parse","find","registerPlugin","getOptions$1","setOptions$1","updateOptionTypes","hook","indexToRemove","context","newHook","plugins","sizeMax","sizeMin","fileFilter","totalSizeMax","plugin$3","mimeTypeMatchesWildCard","wildcard","mimeTypeGroup","wildcardGroup","isValidMimeType","acceptedTypes","userInputType","acceptedType","getItemType","validateFile","acceptedFileTypes","typeDetector","detectedType","applyMimeTypeMap","acceptedFileType","validationResult","handleRejection","acceptedFileTypesMapped","acceptedFileTypesMappedUnique","plugin$1","styleInject","css"],"mappings":"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","x_google_ignoreList":[0,1,2]}
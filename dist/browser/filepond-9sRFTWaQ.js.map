{"version":3,"file":"filepond-9sRFTWaQ.js","sources":["../../node_modules/filepond/dist/filepond.esm.js","../../node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.esm.js","../../node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.esm.js"],"sourcesContent":["/*!\n * FilePond 4.30.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst isNode = value => value instanceof HTMLElement;\n\nconst createStore = (initialState, queries = [], actions = []) => {\n    // internal state\n    const state = {\n        ...initialState,\n    };\n\n    // contains all actions for next frame, is clear when actions are requested\n    const actionQueue = [];\n    const dispatchQueue = [];\n\n    // returns a duplicate of the current state\n    const getState = () => ({ ...state });\n\n    // returns a duplicate of the actions array and clears the actions array\n    const processActionQueue = () => {\n        // create copy of actions queue\n        const queue = [...actionQueue];\n\n        // clear actions queue (we don't want no double actions)\n        actionQueue.length = 0;\n\n        return queue;\n    };\n\n    // processes actions that might block the main UI thread\n    const processDispatchQueue = () => {\n        // create copy of actions queue\n        const queue = [...dispatchQueue];\n\n        // clear actions queue (we don't want no double actions)\n        dispatchQueue.length = 0;\n\n        // now dispatch these actions\n        queue.forEach(({ type, data }) => {\n            dispatch(type, data);\n        });\n    };\n\n    // adds a new action, calls its handler and\n    const dispatch = (type, data, isBlocking) => {\n        // is blocking action (should never block if document is hidden)\n        if (isBlocking && !document.hidden) {\n            dispatchQueue.push({ type, data });\n            return;\n        }\n\n        // if this action has a handler, handle the action\n        if (actionHandlers[type]) {\n            actionHandlers[type](data);\n        }\n\n        // now add action\n        actionQueue.push({\n            type,\n            data,\n        });\n    };\n\n    const query = (str, ...args) => (queryHandles[str] ? queryHandles[str](...args) : null);\n\n    const api = {\n        getState,\n        processActionQueue,\n        processDispatchQueue,\n        dispatch,\n        query,\n    };\n\n    let queryHandles = {};\n    queries.forEach(query => {\n        queryHandles = {\n            ...query(state),\n            ...queryHandles,\n        };\n    });\n\n    let actionHandlers = {};\n    actions.forEach(action => {\n        actionHandlers = {\n            ...action(dispatch, query, state),\n            ...actionHandlers,\n        };\n    });\n\n    return api;\n};\n\nconst defineProperty = (obj, property, definition) => {\n    if (typeof definition === 'function') {\n        obj[property] = definition;\n        return;\n    }\n    Object.defineProperty(obj, property, { ...definition });\n};\n\nconst forin = (obj, cb) => {\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue;\n        }\n\n        cb(key, obj[key]);\n    }\n};\n\nconst createObject = definition => {\n    const obj = {};\n    forin(definition, property => {\n        defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n};\n\nconst attr = (node, name, value = null) => {\n    if (value === null) {\n        return node.getAttribute(name) || node.hasAttribute(name);\n    }\n    node.setAttribute(name, value);\n};\n\nconst ns = 'http://www.w3.org/2000/svg';\nconst svgElements = ['svg', 'path']; // only svg elements used\n\nconst isSVGElement = tag => svgElements.includes(tag);\n\nconst createElement = (tag, className, attributes = {}) => {\n    if (typeof className === 'object') {\n        attributes = className;\n        className = null;\n    }\n    const element = isSVGElement(tag)\n        ? document.createElementNS(ns, tag)\n        : document.createElement(tag);\n    if (className) {\n        if (isSVGElement(tag)) {\n            attr(element, 'class', className);\n        } else {\n            element.className = className;\n        }\n    }\n    forin(attributes, (name, value) => {\n        attr(element, name, value);\n    });\n    return element;\n};\n\nconst appendChild = parent => (child, index) => {\n    if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n    } else {\n        parent.appendChild(child);\n    }\n};\n\nconst appendChildView = (parent, childViews) => (view, index) => {\n    if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n    } else {\n        childViews.push(view);\n    }\n\n    return view;\n};\n\nconst removeChildView = (parent, childViews) => view => {\n    // remove from child views\n    childViews.splice(childViews.indexOf(view), 1);\n\n    // remove the element\n    if (view.element.parentNode) {\n        parent.removeChild(view.element);\n    }\n\n    return view;\n};\n\nconst IS_BROWSER = (() =>\n    typeof window !== 'undefined' && typeof window.document !== 'undefined')();\nconst isBrowser = () => IS_BROWSER;\n\nconst testElement = isBrowser() ? createElement('svg') : {};\nconst getChildCount =\n    'children' in testElement ? el => el.children.length : el => el.childNodes.length;\n\nconst getViewRect = (elementRect, childViews, offset, scale) => {\n    const left = offset[0] || elementRect.left;\n    const top = offset[1] || elementRect.top;\n    const right = left + elementRect.width;\n    const bottom = top + elementRect.height * (scale[1] || 1);\n\n    const rect = {\n        // the rectangle of the element itself\n        element: {\n            ...elementRect,\n        },\n\n        // the rectangle of the element expanded to contain its children, does not include any margins\n        inner: {\n            left: elementRect.left,\n            top: elementRect.top,\n            right: elementRect.right,\n            bottom: elementRect.bottom,\n        },\n\n        // the rectangle of the element expanded to contain its children including own margin and child margins\n        // margins will be added after we've recalculated the size\n        outer: {\n            left,\n            top,\n            right,\n            bottom,\n        },\n    };\n\n    // expand rect to fit all child rectangles\n    childViews\n        .filter(childView => !childView.isRectIgnored())\n        .map(childView => childView.rect)\n        .forEach(childViewRect => {\n            expandRect(rect.inner, { ...childViewRect.inner });\n            expandRect(rect.outer, { ...childViewRect.outer });\n        });\n\n    // calculate inner width and height\n    calculateRectSize(rect.inner);\n\n    // append additional margin (top and left margins are included in top and left automatically)\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight;\n\n    // calculate outer width and height\n    calculateRectSize(rect.outer);\n\n    return rect;\n};\n\nconst expandRect = (parent, child) => {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n        parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n        parent.right = child.right;\n    }\n};\n\nconst calculateRectSize = rect => {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n};\n\nconst isNumber = value => typeof value === 'number';\n\n/**\n * Determines if position is at destination\n * @param position\n * @param destination\n * @param velocity\n * @param errorMargin\n * @returns {boolean}\n */\nconst thereYet = (position, destination, velocity, errorMargin = 0.001) => {\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n};\n\n/**\n * Spring animation\n */\nconst spring =\n    // default options\n    ({ stiffness = 0.5, damping = 0.75, mass = 10 } = {}) =>\n        // method definition\n        {\n            let target = null;\n            let position = null;\n            let velocity = 0;\n            let resting = false;\n\n            // updates spring state\n            const interpolate = (ts, skipToEndState) => {\n                // in rest, don't animate\n                if (resting) return;\n\n                // need at least a target or position to do springy things\n                if (!(isNumber(target) && isNumber(position))) {\n                    resting = true;\n                    velocity = 0;\n                    return;\n                }\n\n                // calculate spring force\n                const f = -(position - target) * stiffness;\n\n                // update velocity by adding force based on mass\n                velocity += f / mass;\n\n                // update position by adding velocity\n                position += velocity;\n\n                // slow down based on amount of damping\n                velocity *= damping;\n\n                // we've arrived if we're near target and our velocity is near zero\n                if (thereYet(position, target, velocity) || skipToEndState) {\n                    position = target;\n                    velocity = 0;\n                    resting = true;\n\n                    // we done\n                    api.onupdate(position);\n                    api.oncomplete(position);\n                } else {\n                    // progress update\n                    api.onupdate(position);\n                }\n            };\n\n            /**\n             * Set new target value\n             * @param value\n             */\n            const setTarget = value => {\n                // if currently has no position, set target and position to this value\n                if (isNumber(value) && !isNumber(position)) {\n                    position = value;\n                }\n\n                // next target value will not be animated to\n                if (target === null) {\n                    target = value;\n                    position = value;\n                }\n\n                // let start moving to target\n                target = value;\n\n                // already at target\n                if (position === target || typeof target === 'undefined') {\n                    // now resting as target is current position, stop moving\n                    resting = true;\n                    velocity = 0;\n\n                    // done!\n                    api.onupdate(position);\n                    api.oncomplete(position);\n\n                    return;\n                }\n\n                resting = false;\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    set: setTarget,\n                    get: () => target,\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst easeLinear = t => t;\nconst easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n\nconst tween =\n    // default values\n    ({ duration = 500, easing = easeInOutQuad, delay = 0 } = {}) =>\n        // method definition\n        {\n            let start = null;\n            let t;\n            let p;\n            let resting = true;\n            let reverse = false;\n            let target = null;\n\n            const interpolate = (ts, skipToEndState) => {\n                if (resting || target === null) return;\n\n                if (start === null) {\n                    start = ts;\n                }\n\n                if (ts - start < delay) return;\n\n                t = ts - start - delay;\n\n                if (t >= duration || skipToEndState) {\n                    t = 1;\n                    p = reverse ? 0 : 1;\n                    api.onupdate(p * target);\n                    api.oncomplete(p * target);\n                    resting = true;\n                } else {\n                    p = t / duration;\n                    api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n                }\n            };\n\n            // need 'api' to call onupdate callback\n            const api = createObject({\n                interpolate,\n                target: {\n                    get: () => (reverse ? 0 : target),\n                    set: value => {\n                        // is initial value\n                        if (target === null) {\n                            target = value;\n                            api.onupdate(value);\n                            api.oncomplete(value);\n                            return;\n                        }\n\n                        // want to tween to a smaller value and have a current value\n                        if (value < target) {\n                            target = 1;\n                            reverse = true;\n                        } else {\n                            // not tweening to a smaller value\n                            reverse = false;\n                            target = value;\n                        }\n\n                        // let's go!\n                        resting = false;\n                        start = null;\n                    },\n                },\n                resting: {\n                    get: () => resting,\n                },\n                onupdate: value => {},\n                oncomplete: value => {},\n            });\n\n            return api;\n        };\n\nconst animator = {\n    spring,\n    tween,\n};\n\n/*\n { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n { translation: { type: 'spring', ... }, ... }\n { translation: { x: { type: 'spring', ... } } }\n*/\nconst createAnimator = (definition, category, property) => {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    const def =\n        definition[category] && typeof definition[category][property] === 'object'\n            ? definition[category][property]\n            : definition[category] || definition;\n\n    const type = typeof def === 'string' ? def : def.type;\n    const props = typeof def === 'object' ? { ...def } : {};\n\n    return animator[type] ? animator[type](props) : null;\n};\n\nconst addGetSet = (keys, obj, props, overwrite = false) => {\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(o => {\n        keys.forEach(key => {\n            let name = key;\n            let getter = () => props[key];\n            let setter = value => (props[key] = value);\n\n            if (typeof key === 'object') {\n                name = key.key;\n                getter = key.getter || getter;\n                setter = key.setter || setter;\n            }\n\n            if (o[name] && !overwrite) {\n                return;\n            }\n\n            o[name] = {\n                get: getter,\n                set: setter,\n            };\n        });\n    });\n};\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// setup animators\n\nconst animations = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI }) => {\n    // initial properties\n    const initialProps = { ...viewProps };\n\n    // list of all active animations\n    const animations = [];\n\n    // setup animators\n    forin(mixinConfig, (property, animation) => {\n        const animator = createAnimator(animation);\n        if (!animator) {\n            return;\n        }\n\n        // when the animator updates, update the view state value\n        animator.onupdate = value => {\n            viewProps[property] = value;\n        };\n\n        // set animator target\n        animator.target = initialProps[property];\n\n        // when value is set, set the animator target value\n        const prop = {\n            key: property,\n            setter: value => {\n                // if already at target, we done!\n                if (animator.target === value) {\n                    return;\n                }\n\n                animator.target = value;\n            },\n            getter: () => viewProps[property],\n        };\n\n        // add getters and setters\n        addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);\n\n        // add it to the list for easy updating from the _write method\n        animations.push(animator);\n    });\n\n    // expose internal write api\n    return {\n        write: ts => {\n            let skipToEndState = document.hidden;\n            let resting = true;\n            animations.forEach(animation => {\n                if (!animation.resting) resting = false;\n                animation.interpolate(ts, skipToEndState);\n            });\n            return resting;\n        },\n        destroy: () => {},\n    };\n};\n\nconst addEvent = element => (type, fn) => {\n    element.addEventListener(type, fn);\n};\n\nconst removeEvent = element => (type, fn) => {\n    element.removeEventListener(type, fn);\n};\n\n// mixin\nconst listeners = ({\n    mixinConfig,\n    viewProps,\n    viewInternalAPI,\n    viewExternalAPI,\n    viewState,\n    view,\n}) => {\n    const events = [];\n\n    const add = addEvent(view.element);\n    const remove = removeEvent(view.element);\n\n    viewExternalAPI.on = (type, fn) => {\n        events.push({\n            type,\n            fn,\n        });\n        add(type, fn);\n    };\n\n    viewExternalAPI.off = (type, fn) => {\n        events.splice(events.findIndex(event => event.type === type && event.fn === fn), 1);\n        remove(type, fn);\n    };\n\n    return {\n        write: () => {\n            // not busy\n            return true;\n        },\n        destroy: () => {\n            events.forEach(event => {\n                remove(event.type, event.fn);\n            });\n        },\n    };\n};\n\n// add to external api and link to props\n\nconst apis = ({ mixinConfig, viewProps, viewExternalAPI }) => {\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n};\n\nconst isDefined = value => value != null;\n\n// add to state,\n// add getters and setters to internal and external api (if not set)\n// set initial state based on props in viewProps\n// apply as transforms each frame\n\nconst defaults = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0,\n};\n\nconst styles = ({ mixinConfig, viewProps, viewInternalAPI, viewExternalAPI, view }) => {\n    // initial props\n    const initialProps = { ...viewProps };\n\n    // current props\n    const currentProps = {};\n\n    // we will add those properties to the external API and link them to the viewState\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);\n\n    // override rect on internal and external rect getter so it takes in account transforms\n    const getOffset = () => [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    const getScale = () => [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    const getRect = () =>\n        view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    viewInternalAPI.rect = { get: getRect };\n    viewExternalAPI.rect = { get: getRect };\n\n    // apply view props\n    mixinConfig.forEach(key => {\n        viewProps[key] =\n            typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n    });\n\n    // expose api\n    return {\n        write: () => {\n            // see if props have changed\n            if (!propsHaveChanged(currentProps, viewProps)) {\n                return;\n            }\n\n            // moves element to correct position on screen\n            applyStyles(view.element, viewProps);\n\n            // store new transforms\n            Object.assign(currentProps, { ...viewProps });\n\n            // no longer busy\n            return true;\n        },\n        destroy: () => {},\n    };\n};\n\nconst propsHaveChanged = (currentProps, newProps) => {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n        return true;\n    }\n\n    // lets analyze the individual props\n    for (const prop in newProps) {\n        if (newProps[prop] !== currentProps[prop]) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nconst applyStyles = (\n    element,\n    {\n        opacity,\n        perspective,\n        translateX,\n        translateY,\n        scaleX,\n        scaleY,\n        rotateX,\n        rotateY,\n        rotateZ,\n        originX,\n        originY,\n        width,\n        height,\n    }\n) => {\n    let transforms = '';\n    let styles = '';\n\n    // handle transform origin\n    if (isDefined(originX) || isDefined(originY)) {\n        styles += `transform-origin: ${originX || 0}px ${originY || 0}px;`;\n    }\n\n    // transform order is relevant\n    // 0. perspective\n    if (isDefined(perspective)) {\n        transforms += `perspective(${perspective}px) `;\n    }\n\n    // 1. translate\n    if (isDefined(translateX) || isDefined(translateY)) {\n        transforms += `translate3d(${translateX || 0}px, ${translateY || 0}px, 0) `;\n    }\n\n    // 2. scale\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n        transforms += `scale3d(${isDefined(scaleX) ? scaleX : 1}, ${\n            isDefined(scaleY) ? scaleY : 1\n        }, 1) `;\n    }\n\n    // 3. rotate\n    if (isDefined(rotateZ)) {\n        transforms += `rotateZ(${rotateZ}rad) `;\n    }\n\n    if (isDefined(rotateX)) {\n        transforms += `rotateX(${rotateX}rad) `;\n    }\n\n    if (isDefined(rotateY)) {\n        transforms += `rotateY(${rotateY}rad) `;\n    }\n\n    // add transforms\n    if (transforms.length) {\n        styles += `transform:${transforms};`;\n    }\n\n    // add opacity\n    if (isDefined(opacity)) {\n        styles += `opacity:${opacity};`;\n\n        // if we reach zero, we make the element inaccessible\n        if (opacity === 0) {\n            styles += `visibility:hidden;`;\n        }\n\n        // if we're below 100% opacity this element can't be clicked\n        if (opacity < 1) {\n            styles += `pointer-events:none;`;\n        }\n    }\n\n    // add height\n    if (isDefined(height)) {\n        styles += `height:${height}px;`;\n    }\n\n    // add width\n    if (isDefined(width)) {\n        styles += `width:${width}px;`;\n    }\n\n    // apply styles\n    const elementCurrentStyle = element.elementCurrentStyle || '';\n\n    // if new styles does not match current styles, lets update!\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n        element.style.cssText = styles;\n        // store current styles so we can compare them to new styles later on\n        // _not_ getting the style value is faster\n        element.elementCurrentStyle = styles;\n    }\n};\n\nconst Mixins = {\n    styles,\n    listeners,\n    animations,\n    apis,\n};\n\nconst updateRect = (rect = {}, element = {}, style = {}) => {\n    if (!element.layoutCalculated) {\n        rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n        rect.marginTop = parseInt(style.marginTop, 10) || 0;\n        rect.marginRight = parseInt(style.marginRight, 10) || 0;\n        rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n        rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n        element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n\n    rect.scrollTop = element.scrollTop;\n\n    rect.hidden = element.offsetParent === null;\n\n    return rect;\n};\n\nconst createView =\n    // default view definition\n    ({\n        // element definition\n        tag = 'div',\n        name = null,\n        attributes = {},\n\n        // view interaction\n        read = () => {},\n        write = () => {},\n        create = () => {},\n        destroy = () => {},\n\n        // hooks\n        filterFrameActionsForChild = (child, actions) => actions,\n        didCreateView = () => {},\n        didWriteView = () => {},\n\n        // rect related\n        ignoreRect = false,\n        ignoreRectUpdate = false,\n\n        // mixins\n        mixins = [],\n    } = {}) => (\n        // each view requires reference to store\n        store,\n        // specific properties for this view\n        props = {}\n    ) => {\n        // root element should not be changed\n        const element = createElement(tag, `filepond--${name}`, attributes);\n\n        // style reference should also not be changed\n        const style = window.getComputedStyle(element, null);\n\n        // element rectangle\n        const rect = updateRect();\n        let frameRect = null;\n\n        // rest state\n        let isResting = false;\n\n        // pretty self explanatory\n        const childViews = [];\n\n        // loaded mixins\n        const activeMixins = [];\n\n        // references to created children\n        const ref = {};\n\n        // state used for each instance\n        const state = {};\n\n        // list of writers that will be called to update this view\n        const writers = [\n            write, // default writer\n        ];\n\n        const readers = [\n            read, // default reader\n        ];\n\n        const destroyers = [\n            destroy, // default destroy\n        ];\n\n        // core view methods\n        const getElement = () => element;\n        const getChildViews = () => childViews.concat();\n        const getReference = () => ref;\n        const createChildView = store => (view, props) => view(store, props);\n        const getRect = () => {\n            if (frameRect) {\n                return frameRect;\n            }\n            frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n            return frameRect;\n        };\n        const getStyle = () => style;\n\n        /**\n         * Read data from DOM\n         * @private\n         */\n        const _read = () => {\n            frameRect = null;\n\n            // read child views\n            childViews.forEach(child => child._read());\n\n            const shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n            if (shouldUpdate) {\n                updateRect(rect, element, style);\n            }\n\n            // readers\n            const api = { root: internalAPI, props, rect };\n            readers.forEach(reader => reader(api));\n        };\n\n        /**\n         * Write data to DOM\n         * @private\n         */\n        const _write = (ts, frameActions, shouldOptimize) => {\n            // if no actions, we assume that the view is resting\n            let resting = frameActions.length === 0;\n\n            // writers\n            writers.forEach(writer => {\n                const writerResting = writer({\n                    props,\n                    root: internalAPI,\n                    actions: frameActions,\n                    timestamp: ts,\n                    shouldOptimize,\n                });\n                if (writerResting === false) {\n                    resting = false;\n                }\n            });\n\n            // run mixins\n            activeMixins.forEach(mixin => {\n                // if one of the mixins is still busy after write operation, we are not resting\n                const mixinResting = mixin.write(ts);\n                if (mixinResting === false) {\n                    resting = false;\n                }\n            });\n\n            // updates child views that are currently attached to the DOM\n            childViews\n                .filter(child => !!child.element.parentNode)\n                .forEach(child => {\n                    // if a child view is not resting, we are not resting\n                    const childResting = child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n                    if (!childResting) {\n                        resting = false;\n                    }\n                });\n\n            // append new elements to DOM and update those\n            childViews\n                //.filter(child => !child.element.parentNode)\n                .forEach((child, index) => {\n                    // skip\n                    if (child.element.parentNode) {\n                        return;\n                    }\n\n                    // append to DOM\n                    internalAPI.appendChild(child.element, index);\n\n                    // call read (need to know the size of these elements)\n                    child._read();\n\n                    // re-call write\n                    child._write(\n                        ts,\n                        filterFrameActionsForChild(child, frameActions),\n                        shouldOptimize\n                    );\n\n                    // we just added somthing to the dom, no rest\n                    resting = false;\n                });\n\n            // update resting state\n            isResting = resting;\n\n            didWriteView({\n                props,\n                root: internalAPI,\n                actions: frameActions,\n                timestamp: ts,\n            });\n\n            // let parent know if we are resting\n            return resting;\n        };\n\n        const _destroy = () => {\n            activeMixins.forEach(mixin => mixin.destroy());\n            destroyers.forEach(destroyer => {\n                destroyer({ root: internalAPI, props });\n            });\n            childViews.forEach(child => child._destroy());\n        };\n\n        // sharedAPI\n        const sharedAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            style: {\n                get: getStyle,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n        };\n\n        // private API definition\n        const internalAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: getRect,\n            },\n\n            // access to custom children references\n            ref: {\n                get: getReference,\n            },\n\n            // dom modifiers\n            is: needle => name === needle,\n            appendChild: appendChild(element),\n            createChildView: createChildView(store),\n            linkView: view => {\n                childViews.push(view);\n                return view;\n            },\n            unlinkView: view => {\n                childViews.splice(childViews.indexOf(view), 1);\n            },\n            appendChildView: appendChildView(element, childViews),\n            removeChildView: removeChildView(element, childViews),\n            registerWriter: writer => writers.push(writer),\n            registerReader: reader => readers.push(reader),\n            registerDestroyer: destroyer => destroyers.push(destroyer),\n            invalidateLayout: () => (element.layoutCalculated = false),\n\n            // access to data store\n            dispatch: store.dispatch,\n            query: store.query,\n        };\n\n        // public view API methods\n        const externalAPIDefinition = {\n            element: {\n                get: getElement,\n            },\n            childViews: {\n                get: getChildViews,\n            },\n            rect: {\n                get: getRect,\n            },\n            resting: {\n                get: () => isResting,\n            },\n            isRectIgnored: () => ignoreRect,\n            _read,\n            _write,\n            _destroy,\n        };\n\n        // mixin API methods\n        const mixinAPIDefinition = {\n            ...sharedAPIDefinition,\n            rect: {\n                get: () => rect,\n            },\n        };\n\n        // add mixin functionality\n        Object.keys(mixins)\n            .sort((a, b) => {\n                // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n                if (a === 'styles') {\n                    return 1;\n                } else if (b === 'styles') {\n                    return -1;\n                }\n                return 0;\n            })\n            .forEach(key => {\n                const mixinAPI = Mixins[key]({\n                    mixinConfig: mixins[key],\n                    viewProps: props,\n                    viewState: state,\n                    viewInternalAPI: internalAPIDefinition,\n                    viewExternalAPI: externalAPIDefinition,\n                    view: createObject(mixinAPIDefinition),\n                });\n\n                if (mixinAPI) {\n                    activeMixins.push(mixinAPI);\n                }\n            });\n\n        // construct private api\n        const internalAPI = createObject(internalAPIDefinition);\n\n        // create the view\n        create({\n            root: internalAPI,\n            props,\n        });\n\n        // append created child views to root node\n        const childCount = getChildCount(element); // need to know the current child count so appending happens in correct order\n        childViews.forEach((child, index) => {\n            internalAPI.appendChild(child.element, childCount + index);\n        });\n\n        // call did create\n        didCreateView(internalAPI);\n\n        // expose public api\n        return createObject(externalAPIDefinition);\n    };\n\nconst createPainter = (read, write, fps = 60) => {\n    const name = '__framePainter';\n\n    // set global painter\n    if (window[name]) {\n        window[name].readers.push(read);\n        window[name].writers.push(write);\n        return;\n    }\n\n    window[name] = {\n        readers: [read],\n        writers: [write],\n    };\n\n    const painter = window[name];\n\n    const interval = 1000 / fps;\n    let last = null;\n    let id = null;\n    let requestTick = null;\n    let cancelTick = null;\n\n    const setTimerType = () => {\n        if (document.hidden) {\n            requestTick = () => window.setTimeout(() => tick(performance.now()), interval);\n            cancelTick = () => window.clearTimeout(id);\n        } else {\n            requestTick = () => window.requestAnimationFrame(tick);\n            cancelTick = () => window.cancelAnimationFrame(id);\n        }\n    };\n\n    document.addEventListener('visibilitychange', () => {\n        if (cancelTick) cancelTick();\n        setTimerType();\n        tick(performance.now());\n    });\n\n    const tick = ts => {\n        // queue next tick\n        id = requestTick(tick);\n\n        // limit fps\n        if (!last) {\n            last = ts;\n        }\n\n        const delta = ts - last;\n\n        if (delta <= interval) {\n            // skip frame\n            return;\n        }\n\n        // align next frame\n        last = ts - (delta % interval);\n\n        // update view\n        painter.readers.forEach(read => read());\n        painter.writers.forEach(write => write(ts));\n    };\n\n    setTimerType();\n    tick(performance.now());\n\n    return {\n        pause: () => {\n            cancelTick(id);\n        },\n    };\n};\n\nconst createRoute = (routes, fn) => ({ root, props, actions = [], timestamp, shouldOptimize }) => {\n    actions\n        .filter(action => routes[action.type])\n        .forEach(action =>\n            routes[action.type]({ root, props, action: action.data, timestamp, shouldOptimize })\n        );\n    if (fn) {\n        fn({ root, props, actions, timestamp, shouldOptimize });\n    }\n};\n\nconst insertBefore = (newNode, referenceNode) =>\n    referenceNode.parentNode.insertBefore(newNode, referenceNode);\n\nconst insertAfter = (newNode, referenceNode) => {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n};\n\nconst isArray = value => Array.isArray(value);\n\nconst isEmpty = value => value == null;\n\nconst trim = str => str.trim();\n\nconst toString = value => '' + value;\n\nconst toArray = (value, splitter = ',') => {\n    if (isEmpty(value)) {\n        return [];\n    }\n    if (isArray(value)) {\n        return value;\n    }\n    return toString(value)\n        .split(splitter)\n        .map(trim)\n        .filter(str => str.length);\n};\n\nconst isBoolean = value => typeof value === 'boolean';\n\nconst toBoolean = value => (isBoolean(value) ? value : value === 'true');\n\nconst isString = value => typeof value === 'string';\n\nconst toNumber = value =>\n    isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n\nconst toInt = value => parseInt(toNumber(value), 10);\n\nconst toFloat = value => parseFloat(toNumber(value));\n\nconst isInt = value => isNumber(value) && isFinite(value) && Math.floor(value) === value;\n\nconst toBytes = (value, base = 1000) => {\n    // is in bytes\n    if (isInt(value)) {\n        return value;\n    }\n\n    // is natural file size\n    let naturalFileSize = toString(value).trim();\n\n    // if is value in megabytes\n    if (/MB$/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n        return toInt(naturalFileSize) * base * base;\n    }\n\n    // if is value in kilobytes\n    if (/KB/i.test(naturalFileSize)) {\n        naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n        return toInt(naturalFileSize) * base;\n    }\n\n    return toInt(naturalFileSize);\n};\n\nconst isFunction = value => typeof value === 'function';\n\nconst toFunctionReference = string => {\n    let ref = self;\n    let levels = string.split('.');\n    let level = null;\n    while ((level = levels.shift())) {\n        ref = ref[level];\n        if (!ref) {\n            return null;\n        }\n    }\n    return ref;\n};\n\nconst methods = {\n    process: 'POST',\n    patch: 'PATCH',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET',\n};\n\nconst createServerAPI = outline => {\n    const api = {};\n\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    api.headers = outline.headers ? outline.headers : {};\n\n    forin(methods, key => {\n        api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);\n    });\n\n    // remove process if no url or process on outline\n    api.process = outline.process || isString(outline) || outline.url ? api.process : null;\n\n    // special treatment for remove\n    api.remove = outline.remove || null;\n\n    // remove generic headers from api object\n    delete api.headers;\n\n    return api;\n};\n\nconst createAction = (name, outline, method, timeout, headers) => {\n    // is explicitely set to null so disable\n    if (outline === null) {\n        return null;\n    }\n\n    // if is custom function, done! Dev handles everything.\n    if (typeof outline === 'function') {\n        return outline;\n    }\n\n    // build action object\n    const action = {\n        url: method === 'GET' || method === 'PATCH' ? `?${name}=` : '',\n        method,\n        headers,\n        withCredentials: false,\n        timeout,\n        onload: null,\n        ondata: null,\n        onerror: null,\n    };\n\n    // is a single url\n    if (isString(outline)) {\n        action.url = outline;\n        return action;\n    }\n\n    // overwrite\n    Object.assign(action, outline);\n\n    // see if should reformat headers;\n    if (isString(action.headers)) {\n        const parts = action.headers.split(/:(.+)/);\n        action.headers = {\n            header: parts[0],\n            value: parts[1],\n        };\n    }\n\n    // if is bool withCredentials\n    action.withCredentials = toBoolean(action.withCredentials);\n\n    return action;\n};\n\nconst toServerAPI = value => createServerAPI(value);\n\nconst isNull = value => value === null;\n\nconst isObject = value => typeof value === 'object' && value !== null;\n\nconst isAPI = value => {\n    return (\n        isObject(value) &&\n        isString(value.url) &&\n        isObject(value.process) &&\n        isObject(value.revert) &&\n        isObject(value.restore) &&\n        isObject(value.fetch)\n    );\n};\n\nconst getType = value => {\n    if (isArray(value)) {\n        return 'array';\n    }\n\n    if (isNull(value)) {\n        return 'null';\n    }\n\n    if (isInt(value)) {\n        return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n        return 'bytes';\n    }\n\n    if (isAPI(value)) {\n        return 'api';\n    }\n\n    return typeof value;\n};\n\nconst replaceSingleQuotes = str =>\n    str\n        .replace(/{\\s*'/g, '{\"')\n        .replace(/'\\s*}/g, '\"}')\n        .replace(/'\\s*:/g, '\":')\n        .replace(/:\\s*'/g, ':\"')\n        .replace(/,\\s*'/g, ',\"')\n        .replace(/'\\s*,/g, '\",');\n\nconst conversionTable = {\n    array: toArray,\n    boolean: toBoolean,\n    int: value => (getType(value) === 'bytes' ? toBytes(value) : toInt(value)),\n    number: toFloat,\n    float: toFloat,\n    bytes: toBytes,\n    string: value => (isFunction(value) ? value : toString(value)),\n    function: value => toFunctionReference(value),\n    serverapi: toServerAPI,\n    object: value => {\n        try {\n            return JSON.parse(replaceSingleQuotes(value));\n        } catch (e) {\n            return null;\n        }\n    },\n};\n\nconst convertTo = (value, type) => conversionTable[type](value);\n\nconst getValueByType = (newValue, defaultValue, valueType) => {\n    // can always assign default value\n    if (newValue === defaultValue) {\n        return newValue;\n    }\n\n    // get the type of the new value\n    let newValueType = getType(newValue);\n\n    // is valid type?\n    if (newValueType !== valueType) {\n        // is string input, let's attempt to convert\n        const convertedValue = convertTo(newValue, valueType);\n\n        // what is the type now\n        newValueType = getType(convertedValue);\n\n        // no valid conversions found\n        if (convertedValue === null) {\n            throw `Trying to assign value with incorrect type to \"${option}\", allowed type: \"${valueType}\"`;\n        } else {\n            newValue = convertedValue;\n        }\n    }\n\n    // assign new value\n    return newValue;\n};\n\nconst createOption = (defaultValue, valueType) => {\n    let currentValue = defaultValue;\n    return {\n        enumerable: true,\n        get: () => currentValue,\n        set: newValue => {\n            currentValue = getValueByType(newValue, defaultValue, valueType);\n        },\n    };\n};\n\nconst createOptions = options => {\n    const obj = {};\n    forin(options, prop => {\n        const optionDefinition = options[prop];\n        obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n};\n\nconst createInitialState = options => ({\n    // model\n    items: [],\n\n    // timeout used for calling update items\n    listUpdateTimeout: null,\n\n    // timeout used for stacking metadata updates\n    itemUpdateTimeout: null,\n\n    // queue of items waiting to be processed\n    processingQueue: [],\n\n    // options\n    options: createOptions(options),\n});\n\nconst fromCamels = (string, separator = '-') =>\n    string\n        .split(/(?=[A-Z])/)\n        .map(part => part.toLowerCase())\n        .join(separator);\n\nconst createOptionAPI = (store, options) => {\n    const obj = {};\n    forin(options, key => {\n        obj[key] = {\n            get: () => store.getState().options[key],\n            set: value => {\n                store.dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                    value,\n                });\n            },\n        };\n    });\n    return obj;\n};\n\nconst createOptionActions = options => (dispatch, query, state) => {\n    const obj = {};\n    forin(options, key => {\n        const name = fromCamels(key, '_').toUpperCase();\n\n        obj[`SET_${name}`] = action => {\n            try {\n                state.options[key] = action.value;\n            } catch (e) {\n                // nope, failed\n            }\n\n            // we successfully set the value of this option\n            dispatch(`DID_SET_${name}`, { value: state.options[key] });\n        };\n    });\n    return obj;\n};\n\nconst createOptionQueries = options => state => {\n    const obj = {};\n    forin(options, key => {\n        obj[`GET_${fromCamels(key, '_').toUpperCase()}`] = action => state.options[key];\n    });\n    return obj;\n};\n\nconst InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5,\n};\n\nconst getUniqueId = () =>\n    Math.random()\n        .toString(36)\n        .substring(2, 11);\n\nconst arrayRemove = (arr, index) => arr.splice(index, 1);\n\nconst run = (cb, sync) => {\n    if (sync) {\n        cb();\n    } else if (document.hidden) {\n        Promise.resolve(1).then(cb);\n    } else {\n        setTimeout(cb, 0);\n    }\n};\n\nconst on = () => {\n    const listeners = [];\n    const off = (event, cb) => {\n        arrayRemove(\n            listeners,\n            listeners.findIndex(listener => listener.event === event && (listener.cb === cb || !cb))\n        );\n    };\n    const fire = (event, args, sync) => {\n        listeners\n            .filter(listener => listener.event === event)\n            .map(listener => listener.cb)\n            .forEach(cb => run(() => cb(...args), sync));\n    };\n    return {\n        fireSync: (event, ...args) => {\n            fire(event, args, true);\n        },\n        fire: (event, ...args) => {\n            fire(event, args, false);\n        },\n        on: (event, cb) => {\n            listeners.push({ event, cb });\n        },\n        onOnce: (event, cb) => {\n            listeners.push({\n                event,\n                cb: (...args) => {\n                    off(event, cb);\n                    cb(...args);\n                },\n            });\n        },\n        off,\n    };\n};\n\nconst copyObjectPropertiesToObject = (src, target, excluded) => {\n    Object.getOwnPropertyNames(src)\n        .filter(property => !excluded.includes(property))\n        .forEach(key =>\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key))\n        );\n};\n\nconst PRIVATE = [\n    'fire',\n    'process',\n    'revert',\n    'load',\n    'on',\n    'off',\n    'onOnce',\n    'retryLoad',\n    'extend',\n    'archive',\n    'archived',\n    'release',\n    'released',\n    'requestProcessing',\n    'freeze',\n];\n\nconst createItemAPI = item => {\n    const api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n};\n\nconst removeReleasedItems = items => {\n    items.forEach((item, index) => {\n        if (item.released) {\n            arrayRemove(items, index);\n        }\n    });\n};\n\nconst ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8,\n};\n\nconst FileOrigin = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3,\n};\n\nconst getNonNumeric = str => /[^0-9]+/.exec(str);\n\nconst getDecimalSeparator = () => getNonNumeric((1.1).toLocaleString())[0];\n\nconst getThousandsSeparator = () => {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    const decimalSeparator = getDecimalSeparator();\n    const thousandsStringWithSeparator = (1000.0).toLocaleString();\n    const thousandsStringWithoutSeparator = (1000.0).toString();\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n        return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n    return decimalSeparator === '.' ? ',' : '.';\n};\n\nconst Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    NUMBER: 'number',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex',\n};\n\n// all registered filters\nconst filters = [];\n\n// loops over matching filters and passes options to each filter, returning the mapped results\nconst applyFilterChain = (key, value, utils) =>\n    new Promise((resolve, reject) => {\n        // find matching filters for this key\n        const matchingFilters = filters.filter(f => f.key === key).map(f => f.cb);\n\n        // resolve now\n        if (matchingFilters.length === 0) {\n            resolve(value);\n            return;\n        }\n\n        // first filter to kick things of\n        const initialFilter = matchingFilters.shift();\n\n        // chain filters\n        matchingFilters\n            .reduce(\n                // loop over promises passing value to next promise\n                (current, next) => current.then(value => next(value, utils)),\n\n                // call initial filter, will return a promise\n                initialFilter(value, utils)\n\n                // all executed\n            )\n            .then(value => resolve(value))\n            .catch(error => reject(error));\n    });\n\nconst applyFilters = (key, value, utils) =>\n    filters.filter(f => f.key === key).map(f => f.cb(value, utils));\n\n// adds a new filter to the list\nconst addFilter = (key, cb) => filters.push({ key, cb });\n\nconst extendDefaultOptions = additionalOptions => Object.assign(defaultOptions, additionalOptions);\n\nconst getOptions = () => ({ ...defaultOptions });\n\nconst setOptions = opts => {\n    forin(opts, (key, value) => {\n        // key does not exist, so this option cannot be set\n        if (!defaultOptions[key]) {\n            return;\n        }\n        defaultOptions[key][0] = getValueByType(\n            value,\n            defaultOptions[key][0],\n            defaultOptions[key][1]\n        );\n    });\n};\n\n// default options on app\nconst defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n\n    // input field name to use\n    name: ['filepond', Type.STRING],\n\n    // disable the field\n    disabled: [false, Type.BOOLEAN],\n\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n\n    // is the field required\n    required: [false, Type.BOOLEAN],\n\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n\n    // sync `acceptedFileTypes` property with `accept` attribute\n    allowSyncAcceptAttribute: [true, Type.BOOLEAN],\n\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN], // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN], // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN], // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN], // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN], // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN], // Allows user to revert file upload\n    allowRemove: [true, Type.BOOLEAN], // Allow user to remove a file\n    allowProcess: [true, Type.BOOLEAN], // Allows user to process a file, when set to false, this removes the file upload button\n    allowReorder: [false, Type.BOOLEAN], // Allow reordering of files\n    allowDirectoriesOnly: [false, Type.BOOLEAN], // Allow only selecting directories with browse (no support for filtering dnd at this point)\n\n    // Try store file if `server` not set\n    storeAsFile: [false, Type.BOOLEAN],\n\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN], // Set to 'force' to require the file to be reverted before removal\n\n    // Input requirements\n    maxFiles: [null, Type.INT], // Max number of files\n    checkValidity: [false, Type.BOOLEAN], // Enables custom validity messages\n\n    // Where to put file\n    itemInsertLocationFreedom: [true, Type.BOOLEAN], // Set to false to always add items to begin or end of list\n    itemInsertLocation: ['before', Type.STRING], // Default index in list to add items that have been dropped at the top of the list\n    itemInsertInterval: [75, Type.INT],\n\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN], // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN], // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN], // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN], // Should upload files immediately on drop\n    maxParallelUploads: [2, Type.INT], // Maximum files to upload in parallel\n    allowMinimumUploadDuration: [true, Type.BOOLEAN], // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened\n\n    // Chunks\n    chunkUploads: [false, Type.BOOLEAN], // Enable chunked uploads\n    chunkForce: [false, Type.BOOLEAN], // Force use of chunk uploads even for files smaller than chunk size\n    chunkSize: [5000000, Type.INT], // Size of chunks (5MB default)\n    chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY], // Amount of times to retry upload of a chunk when it fails\n\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n\n    // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000\n    fileSizeBase: [1000, Type.INT],\n\n    // Labels and status messages\n    labelFileSizeBytes: ['bytes', Type.STRING],\n    labelFileSizeKilobytes: ['KB', Type.STRING],\n    labelFileSizeMegabytes: ['MB', Type.STRING],\n    labelFileSizeGigabytes: ['GB', Type.STRING],\n\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING], // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING], // Default is locale separator\n\n    labelIdle: [\n        'Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>',\n        Type.STRING,\n    ],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING], // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING], // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconProcess: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>',\n        Type.STRING,\n    ],\n    iconRetry: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconUndo: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n    iconDone: [\n        '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n        Type.STRING,\n    ],\n\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onactivatefile: [null, Type.FUNCTION],\n    oninitfile: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onprocessfiles: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    onreorderfiles: [null, Type.FUNCTION],\n\n    // hooks\n    beforeDropFile: [null, Type.FUNCTION],\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    beforePrepareFile: [null, Type.FUNCTION],\n\n    // styles\n    stylePanelLayout: [null, Type.STRING], // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING], // null or '3:2' or 1\n    styleItemPanelAspectRatio: [null, Type.STRING],\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    styleButtonRemoveItemAlign: [false, Type.BOOLEAN],\n\n    // custom initial files array\n    files: [[], Type.ARRAY],\n\n    // show support by displaying credits\n    credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY],\n};\n\nconst getItemByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return items[0] || null;\n    }\n\n    // query is index\n    if (isInt(query)) {\n        return items[query] || null;\n    }\n\n    // if query is item, get the id\n    if (typeof query === 'object') {\n        query = query.id;\n    }\n\n    // assume query is a string and return item by id\n    return items.find(item => item.id === query) || null;\n};\n\nconst getNumericAspectRatioFromString = aspectRatio => {\n    if (isEmpty(aspectRatio)) {\n        return aspectRatio;\n    }\n    if (/:/.test(aspectRatio)) {\n        const parts = aspectRatio.split(':');\n        return parts[1] / parts[0];\n    }\n    return parseFloat(aspectRatio);\n};\n\nconst getActiveItems = items => items.filter(item => !item.archived);\n\nconst Status = {\n    EMPTY: 0,\n    IDLE: 1, // waiting\n    ERROR: 2, // a file is in error state\n    BUSY: 3, // busy processing or loading\n    READY: 4, // all files uploaded\n};\n\nlet res = null;\nconst canUpdateFileInput = () => {\n    if (res === null) {\n        try {\n            const dataTransfer = new DataTransfer();\n            dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));\n            const el = document.createElement('input');\n            el.setAttribute('type', 'file');\n            el.files = dataTransfer.files;\n            res = el.files.length === 1;\n        } catch (err) {\n            res = false;\n        }\n    }\n    return res;\n};\n\nconst ITEM_ERROR = [\n    ItemStatus.LOAD_ERROR,\n    ItemStatus.PROCESSING_ERROR,\n    ItemStatus.PROCESSING_REVERT_ERROR,\n];\nconst ITEM_BUSY = [\n    ItemStatus.LOADING,\n    ItemStatus.PROCESSING,\n    ItemStatus.PROCESSING_QUEUED,\n    ItemStatus.INIT,\n];\nconst ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\n\nconst isItemInErrorState = item => ITEM_ERROR.includes(item.status);\nconst isItemInBusyState = item => ITEM_BUSY.includes(item.status);\nconst isItemInReadyState = item => ITEM_READY.includes(item.status);\n\nconst isAsync = state =>\n    isObject(state.options.server) &&\n    (isObject(state.options.server.process) || isFunction(state.options.server.process));\n\nconst queries = state => ({\n    GET_STATUS: () => {\n        const items = getActiveItems(state.items);\n\n        const { EMPTY, ERROR, BUSY, IDLE, READY } = Status;\n\n        if (items.length === 0) return EMPTY;\n\n        if (items.some(isItemInErrorState)) return ERROR;\n\n        if (items.some(isItemInBusyState)) return BUSY;\n\n        if (items.some(isItemInReadyState)) return READY;\n\n        return IDLE;\n    },\n\n    GET_ITEM: query => getItemByQuery(state.items, query),\n\n    GET_ACTIVE_ITEM: query => getItemByQuery(getActiveItems(state.items), query),\n\n    GET_ACTIVE_ITEMS: () => getActiveItems(state.items),\n\n    GET_ITEMS: () => state.items,\n\n    GET_ITEM_NAME: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n    },\n\n    GET_ITEM_SIZE: query => {\n        const item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n    },\n\n    GET_STYLES: () =>\n        Object.keys(state.options)\n            .filter(key => /^style/.test(key))\n            .map(option => ({\n                name: option,\n                value: state.options[option],\n            })),\n\n    GET_PANEL_ASPECT_RATIO: () => {\n        const isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        const aspectRatio = isShapeCircle\n            ? 1\n            : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n    },\n\n    GET_ITEM_PANEL_ASPECT_RATIO: () => state.options.styleItemPanelAspectRatio,\n\n    GET_ITEMS_BY_STATUS: status =>\n        getActiveItems(state.items).filter(item => item.status === status),\n\n    GET_TOTAL_ITEMS: () => getActiveItems(state.items).length,\n\n    SHOULD_UPDATE_FILE_INPUT: () =>\n        state.options.storeAsFile && canUpdateFileInput() && !isAsync(state),\n\n    IS_ASYNC: () => isAsync(state),\n\n    GET_FILE_SIZE_LABELS: query => ({\n        labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,\n        labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,\n        labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,\n        labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined,\n    }),\n});\n\nconst hasRoomForItem = state => {\n    const count = getActiveItems(state.items).length;\n\n    // if cannot have multiple items, to add one item it should currently not contain items\n    if (!state.options.allowMultiple) {\n        return count === 0;\n    }\n\n    // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n    const maxFileCount = state.options.maxFiles;\n    if (maxFileCount === null) {\n        return true;\n    }\n\n    // we check if the current count is smaller than the max count, if so, another file can still be added\n    if (count < maxFileCount) {\n        return true;\n    }\n\n    // no more room for another file\n    return false;\n};\n\nconst limit = (value, min, max) => Math.max(Math.min(max, value), min);\n\nconst arrayInsert = (arr, index, item) => arr.splice(index, 0, item);\n\nconst insertItem = (items, item, index) => {\n    if (isEmpty(item)) {\n        return null;\n    }\n\n    // if index is undefined, append\n    if (typeof index === 'undefined') {\n        items.push(item);\n        return item;\n    }\n\n    // limit the index to the size of the items array\n    index = limit(index, 0, items.length);\n\n    // add item to array\n    arrayInsert(items, index, item);\n\n    // expose\n    return item;\n};\n\nconst isBase64DataURI = str =>\n    /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(\n        str\n    );\n\nconst getFilenameFromURL = url =>\n    `${url}`\n        .split('/')\n        .pop()\n        .split('?')\n        .shift();\n\nconst getExtensionFromFilename = name => name.split('.').pop();\n\nconst guesstimateExtension = type => {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n        return '';\n    }\n\n    // get subtype\n    const subtype = type.split('/').pop();\n\n    // is svg subtype\n    if (/svg/.test(subtype)) {\n        return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n        return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n        return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n        return 'doc';\n    }\n\n    // if is valid subtype\n    if (/[a-z]+/.test(subtype)) {\n        // always use jpg extension\n        if (subtype === 'jpeg') {\n            return 'jpg';\n        }\n\n        // return subtype\n        return subtype;\n    }\n\n    return '';\n};\n\nconst leftPad = (value, padding = '') => (padding + value).slice(-padding.length);\n\nconst getDateString = (date = new Date()) =>\n    `${date.getFullYear()}-${leftPad(date.getMonth() + 1, '00')}-${leftPad(\n        date.getDate(),\n        '00'\n    )}_${leftPad(date.getHours(), '00')}-${leftPad(date.getMinutes(), '00')}-${leftPad(\n        date.getSeconds(),\n        '00'\n    )}`;\n\nconst getFileFromBlob = (blob, filename, type = null, extension = null) => {\n    const file =\n        typeof type === 'string'\n            ? blob.slice(0, blob.size, type)\n            : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date();\n\n    // copy relative path\n    if (blob._relativePath) file._relativePath = blob._relativePath;\n\n    // if blob has name property, use as filename if no filename supplied\n    if (!isString(filename)) {\n        filename = getDateString();\n    }\n\n    // if filename supplied but no extension and filename has extension\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n        file.name = filename;\n    } else {\n        extension = extension || guesstimateExtension(file.type);\n        file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n};\n\nconst getBlobBuilder = () => {\n    return (window.BlobBuilder =\n        window.BlobBuilder ||\n        window.WebKitBlobBuilder ||\n        window.MozBlobBuilder ||\n        window.MSBlobBuilder);\n};\n\nconst createBlob = (arrayBuffer, mimeType) => {\n    const BB = getBlobBuilder();\n\n    if (BB) {\n        const bb = new BB();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n        type: mimeType,\n    });\n};\n\nconst getBlobFromByteStringWithMimeType = (byteString, mimeType) => {\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n};\n\nconst getMimeTypeFromBase64DataURI = dataURI => {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n};\n\nconst getBase64DataFromBase64DataURI = dataURI => {\n    // get data part of string (remove data:image/jpeg...,)\n    const data = dataURI.split(',')[1];\n\n    // remove any whitespace as that causes InvalidCharacterError in IE\n    return data.replace(/\\s/g, '');\n};\n\nconst getByteStringFromBase64DataURI = dataURI => {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n};\n\nconst getBlobFromBase64DataURI = dataURI => {\n    const mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    const byteString = getByteStringFromBase64DataURI(dataURI);\n\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n};\n\nconst getFileFromBase64DataURI = (dataURI, filename, extension) => {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n};\n\nconst getFileNameFromHeader = header => {\n    // test if is content disposition header, if not exit\n    if (!/^content-disposition:/i.test(header)) return null;\n\n    // get filename parts\n    const matches = header\n        .split(/filename=|filename\\*=.+''/)\n        .splice(1)\n        .map(name => name.trim().replace(/^[\"']|[;\"']{0,2}$/g, ''))\n        .filter(name => name.length);\n\n    return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n};\n\nconst getFileSizeFromHeader = header => {\n    if (/content-length:/i.test(header)) {\n        const size = header.match(/[0-9]+/)[0];\n        return size ? parseInt(size, 10) : null;\n    }\n    return null;\n};\n\nconst getTranfserIdFromHeader = header => {\n    if (/x-content-transfer-id:/i.test(header)) {\n        const id = (header.split(':')[1] || '').trim();\n        return id || null;\n    }\n    return null;\n};\n\nconst getFileInfoFromHeaders = headers => {\n    const info = {\n        source: null,\n        name: null,\n        size: null,\n    };\n\n    const rows = headers.split('\\n');\n    for (let header of rows) {\n        const name = getFileNameFromHeader(header);\n        if (name) {\n            info.name = name;\n            continue;\n        }\n\n        const size = getFileSizeFromHeader(header);\n        if (size) {\n            info.size = size;\n            continue;\n        }\n\n        const source = getTranfserIdFromHeader(header);\n        if (source) {\n            info.source = source;\n            continue;\n        }\n    }\n\n    return info;\n};\n\nconst createFileLoader = fetchFn => {\n    const state = {\n        source: null,\n        complete: false,\n        progress: 0,\n        size: null,\n        timestamp: null,\n        duration: 0,\n        request: null,\n    };\n\n    const getProgress = () => state.progress;\n    const abort = () => {\n        if (state.request && state.request.abort) {\n            state.request.abort();\n        }\n    };\n\n    // load source\n    const load = () => {\n        // get quick reference\n        const source = state.source;\n\n        api.fire('init', source);\n\n        // Load Files\n        if (source instanceof File) {\n            api.fire('load', source);\n        } else if (source instanceof Blob) {\n            // Load blobs, set default name to current date\n            api.fire('load', getFileFromBlob(source, source.name));\n        } else if (isBase64DataURI(source)) {\n            // Load base 64, set default name to current date\n            api.fire('load', getFileFromBase64DataURI(source));\n        } else {\n            // Deal as if is external URL, let's load it!\n            loadURL(source);\n        }\n    };\n\n    // loads a url\n    const loadURL = url => {\n        // is remote url and no fetch method supplied\n        if (!fetchFn) {\n            api.fire('error', {\n                type: 'error',\n                body: \"Can't load URL\",\n                code: 400,\n            });\n            return;\n        }\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // load file\n        state.request = fetchFn(\n            url,\n            response => {\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // done!\n                state.complete = true;\n\n                // turn blob response into a file\n                if (response instanceof Blob) {\n                    response = getFileFromBlob(response, response.name || getFilenameFromURL(url));\n                }\n\n                api.fire(\n                    'load',\n                    // if has received blob, we go with blob, if no response, we return null\n                    response instanceof Blob ? response : response ? response.body : null\n                );\n            },\n            error => {\n                api.fire(\n                    'error',\n                    typeof error === 'string'\n                        ? {\n                              type: 'error',\n                              code: 0,\n                              body: error,\n                          }\n                        : error\n                );\n            },\n            (computable, current, total) => {\n                // collected some meta data already\n                if (total) {\n                    state.size = total;\n                }\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // if we can't compute progress, we're not going to fire progress events\n                if (!computable) {\n                    state.progress = null;\n                    return;\n                }\n\n                // update progress percentage\n                state.progress = current / total;\n\n                // expose\n                api.fire('progress', state.progress);\n            },\n            () => {\n                api.fire('abort');\n            },\n            response => {\n                const fileinfo = getFileInfoFromHeaders(\n                    typeof response === 'string' ? response : response.headers\n                );\n                api.fire('meta', {\n                    size: state.size || fileinfo.size,\n                    filename: fileinfo.name,\n                    source: fileinfo.source,\n                });\n            }\n        );\n    };\n\n    const api = {\n        ...on(),\n        setSource: source => (state.source = source),\n        getProgress, // file load progress\n        abort, // abort file load\n        load, // start load\n    };\n\n    return api;\n};\n\nconst isGet = method => /GET|HEAD/.test(method);\n\nconst sendRequest = (data, url, options) => {\n    const api = {\n        onheaders: () => {},\n        onprogress: () => {},\n        onload: () => {},\n        ontimeout: () => {},\n        onerror: () => {},\n        onabort: () => {},\n        abort: () => {\n            aborted = true;\n            xhr.abort();\n        },\n    };\n\n    // timeout identifier, only used when timeout is defined\n    let aborted = false;\n    let headersReceived = false;\n\n    // set default options\n    options = {\n        method: 'POST',\n        headers: {},\n        withCredentials: false,\n        ...options,\n    };\n\n    // encode url\n    url = encodeURI(url);\n\n    // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n        url = `${url}${encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data))}`;\n    }\n\n    // create request\n    const xhr = new XMLHttpRequest();\n\n    // progress of load\n    const process = isGet(options.method) ? xhr : xhr.upload;\n    process.onprogress = e => {\n        // no progress event when aborted ( onprogress is called once after abort() )\n        if (aborted) {\n            return;\n        }\n\n        api.onprogress(e.lengthComputable, e.loaded, e.total);\n    };\n\n    // tries to get header info to the app as fast as possible\n    xhr.onreadystatechange = () => {\n        // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n        if (xhr.readyState < 2) {\n            return;\n        }\n\n        // no server response\n        if (xhr.readyState === 4 && xhr.status === 0) {\n            return;\n        }\n\n        if (headersReceived) {\n            return;\n        }\n\n        headersReceived = true;\n\n        // we've probably received some useful data in response headers\n        api.onheaders(xhr);\n    };\n\n    // load successful\n    xhr.onload = () => {\n        // is classified as valid response\n        if (xhr.status >= 200 && xhr.status < 300) {\n            api.onload(xhr);\n        } else {\n            api.onerror(xhr);\n        }\n    };\n\n    // error during load\n    xhr.onerror = () => api.onerror(xhr);\n\n    // request aborted\n    xhr.onabort = () => {\n        aborted = true;\n        api.onabort();\n    };\n\n    // request timeout\n    xhr.ontimeout = () => api.ontimeout(xhr);\n\n    // open up open up!\n    xhr.open(options.method, url, true);\n\n    // set timeout if defined (do it after open so IE11 plays ball)\n    if (isInt(options.timeout)) {\n        xhr.timeout = options.timeout;\n    }\n\n    // add headers\n    Object.keys(options.headers).forEach(key => {\n        const value = unescape(encodeURIComponent(options.headers[key]));\n        xhr.setRequestHeader(key, value);\n    });\n\n    // set type of response\n    if (options.responseType) {\n        xhr.responseType = options.responseType;\n    }\n\n    // set credentials\n    if (options.withCredentials) {\n        xhr.withCredentials = true;\n    }\n\n    // let's send our data\n    xhr.send(data);\n\n    return api;\n};\n\nconst createResponse = (type, code, body, headers) => ({\n    type,\n    code,\n    body,\n    headers,\n});\n\nconst createTimeoutResponse = cb => xhr => {\n    cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n};\n\nconst hasQS = str => /\\?/.test(str);\nconst buildURL = (...parts) => {\n    let url = '';\n    parts.forEach(part => {\n        url += hasQS(url) && hasQS(part) ? part.replace(/\\?/, '&') : part;\n    });\n    return url;\n};\n\nconst createFetchFunction = (apiUrl = '', action) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied\n    if (!action || !isString(action.url)) {\n        return null;\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal handler\n    return (url, load, error, progress, abort, headers) => {\n        // do local or remote request based on if the url is external\n        const request = sendRequest(url, buildURL(apiUrl, action.url), {\n            ...action,\n            responseType: 'blob',\n        });\n\n        request.onload = xhr => {\n            // get headers\n            const headers = xhr.getAllResponseHeaders();\n\n            // get filename\n            const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n            // create response\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    action.method === 'HEAD'\n                        ? null\n                        : getFileFromBlob(onload(xhr.response), filename),\n                    headers\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onheaders = xhr => {\n            headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n        request.onprogress = progress;\n        request.onabort = abort;\n\n        // should return request\n        return request;\n    };\n};\n\nconst ChunkStatus = {\n    QUEUED: 0,\n    COMPLETE: 1,\n    PROCESSING: 2,\n    ERROR: 3,\n    WAITING: 4,\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort, transfer, options) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\n\n// apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options\nconst processFileChunked = (\n    apiUrl,\n    action,\n    name,\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer,\n    options\n) => {\n    // all chunks\n    const chunks = [];\n    const { chunkTransferId, chunkServer, chunkSize, chunkRetryDelays } = options;\n\n    // default state\n    const state = {\n        serverId: chunkTransferId,\n        aborted: false,\n    };\n\n    // set onload handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload =\n        action.onload ||\n        ((xhr, method) =>\n            method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response);\n    const onerror = action.onerror || (res => null);\n\n    // create server hook\n    const requestTransferId = cb => {\n        const formData = new FormData();\n\n        // add metadata under same name\n        if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(file, metadata)\n                : {\n                      ...action.headers,\n                      'Upload-Length': file.size,\n                  };\n\n        const requestParams = {\n            ...action,\n            headers,\n        };\n\n        // send request object\n        const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    const requestTransferOffset = cb => {\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof action.headers === 'function'\n                ? action.headers(state.serverId)\n                : {\n                      ...action.headers,\n                  };\n\n        const requestParams = {\n            headers,\n            method: 'HEAD',\n        };\n\n        const request = sendRequest(null, requestUrl, requestParams);\n\n        request.onload = xhr => cb(onload(xhr, requestParams.method));\n\n        request.onerror = xhr =>\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n\n        request.ontimeout = createTimeoutResponse(error);\n    };\n\n    // create chunks\n    const lastChunkIndex = Math.floor(file.size / chunkSize);\n    for (let i = 0; i <= lastChunkIndex; i++) {\n        const offset = i * chunkSize;\n        const data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');\n        chunks[i] = {\n            index: i,\n            size: data.size,\n            offset,\n            data,\n            file,\n            progress: 0,\n            retries: [...chunkRetryDelays],\n            status: ChunkStatus.QUEUED,\n            error: null,\n            request: null,\n            timeout: null,\n        };\n    }\n\n    const completeProcessingChunks = () => load(state.serverId);\n\n    const canProcessChunk = chunk =>\n        chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;\n\n    const processChunk = chunk => {\n        // processing is paused, wait here\n        if (state.aborted) return;\n\n        // get next chunk to process\n        chunk = chunk || chunks.find(canProcessChunk);\n\n        // no more chunks to process\n        if (!chunk) {\n            // all done?\n            if (chunks.every(chunk => chunk.status === ChunkStatus.COMPLETE)) {\n                completeProcessingChunks();\n            }\n\n            // no chunk to handle\n            return;\n        }\n\n        // now processing this chunk\n        chunk.status = ChunkStatus.PROCESSING;\n        chunk.progress = null;\n\n        // allow parsing of formdata\n        const ondata = chunkServer.ondata || (fd => fd);\n        const onerror = chunkServer.onerror || (res => null);\n\n        // send request object\n        const requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);\n\n        const headers =\n            typeof chunkServer.headers === 'function'\n                ? chunkServer.headers(chunk)\n                : {\n                      ...chunkServer.headers,\n                      'Content-Type': 'application/offset+octet-stream',\n                      'Upload-Offset': chunk.offset,\n                      'Upload-Length': file.size,\n                      'Upload-Name': file.name,\n                  };\n\n        const request = (chunk.request = sendRequest(ondata(chunk.data), requestUrl, {\n            ...chunkServer,\n            headers,\n        }));\n\n        request.onload = () => {\n            // done!\n            chunk.status = ChunkStatus.COMPLETE;\n\n            // remove request reference\n            chunk.request = null;\n\n            // start processing more chunks\n            processChunks();\n        };\n\n        request.onprogress = (lengthComputable, loaded, total) => {\n            chunk.progress = lengthComputable ? loaded : null;\n            updateTotalProgress();\n        };\n\n        request.onerror = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            chunk.error = onerror(xhr.response) || xhr.statusText;\n            if (!retryProcessChunk(chunk)) {\n                error(\n                    createResponse(\n                        'error',\n                        xhr.status,\n                        onerror(xhr.response) || xhr.statusText,\n                        xhr.getAllResponseHeaders()\n                    )\n                );\n            }\n        };\n\n        request.ontimeout = xhr => {\n            chunk.status = ChunkStatus.ERROR;\n            chunk.request = null;\n            if (!retryProcessChunk(chunk)) {\n                createTimeoutResponse(error)(xhr);\n            }\n        };\n\n        request.onabort = () => {\n            chunk.status = ChunkStatus.QUEUED;\n            chunk.request = null;\n            abort();\n        };\n    };\n\n    const retryProcessChunk = chunk => {\n        // no more retries left\n        if (chunk.retries.length === 0) return false;\n\n        // new retry\n        chunk.status = ChunkStatus.WAITING;\n        clearTimeout(chunk.timeout);\n        chunk.timeout = setTimeout(() => {\n            processChunk(chunk);\n        }, chunk.retries.shift());\n\n        // we're going to retry\n        return true;\n    };\n\n    const updateTotalProgress = () => {\n        // calculate total progress fraction\n        const totalBytesTransfered = chunks.reduce((p, chunk) => {\n            if (p === null || chunk.progress === null) return null;\n            return p + chunk.progress;\n        }, 0);\n\n        // can't compute progress\n        if (totalBytesTransfered === null) return progress(false, 0, 0);\n\n        // calculate progress values\n        const totalSize = chunks.reduce((total, chunk) => total + chunk.size, 0);\n\n        // can update progress indicator\n        progress(true, totalBytesTransfered, totalSize);\n    };\n\n    // process new chunks\n    const processChunks = () => {\n        const totalProcessing = chunks.filter(chunk => chunk.status === ChunkStatus.PROCESSING)\n            .length;\n        if (totalProcessing >= 1) return;\n        processChunk();\n    };\n\n    const abortChunks = () => {\n        chunks.forEach(chunk => {\n            clearTimeout(chunk.timeout);\n            if (chunk.request) {\n                chunk.request.abort();\n            }\n        });\n    };\n\n    // let's go!\n    if (!state.serverId) {\n        requestTransferId(serverId => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // pass back to item so we can use it if something goes wrong\n            transfer(serverId);\n\n            // store internally\n            state.serverId = serverId;\n            processChunks();\n        });\n    } else {\n        requestTransferOffset(offset => {\n            // stop here if aborted, might have happened in between request and callback\n            if (state.aborted) return;\n\n            // mark chunks with lower offset as complete\n            chunks\n                .filter(chunk => chunk.offset < offset)\n                .forEach(chunk => {\n                    chunk.status = ChunkStatus.COMPLETE;\n                    chunk.progress = chunk.size;\n                });\n\n            // continue processing\n            processChunks();\n        });\n    }\n\n    return {\n        abort: () => {\n            state.aborted = true;\n            abortChunks();\n        },\n    };\n};\n\n/*\nfunction signature:\n  (file, metadata, load, error, progress, abort) => {\n    return {\n    abort:() => {}\n  }\n}\n*/\nconst createFileProcessorFunction = (apiUrl, action, name, options) => (\n    file,\n    metadata,\n    load,\n    error,\n    progress,\n    abort,\n    transfer\n) => {\n    // no file received\n    if (!file) return;\n\n    // if was passed a file, and we can chunk it, exit here\n    const canChunkUpload = options.chunkUploads;\n    const shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;\n    const willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);\n    if (file instanceof Blob && willChunkUpload)\n        return processFileChunked(\n            apiUrl,\n            action,\n            name,\n            file,\n            metadata,\n            load,\n            error,\n            progress,\n            abort,\n            transfer,\n            options\n        );\n\n    // set handlers\n    const ondata = action.ondata || (fd => fd);\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    const headers =\n        typeof action.headers === 'function'\n            ? action.headers(file, metadata) || {}\n            : {\n                  ...action.headers,\n              };\n\n    const requestParams = {\n        ...action,\n        headers,\n    };\n\n    // create formdata object\n    var formData = new FormData();\n\n    // add metadata under same name\n    if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n    }\n\n    // Turn into an array of objects so no matter what the input, we can handle it the same way\n    (file instanceof Blob ? [{ name: null, file }] : file).forEach(item => {\n        formData.append(\n            name,\n            item.file,\n            item.name === null ? item.file.name : `${item.name}${item.file.name}`\n        );\n    });\n\n    // send request object\n    const request = sendRequest(ondata(formData), buildURL(apiUrl, action.url), requestParams);\n    request.onload = xhr => {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n    };\n\n    request.onerror = xhr => {\n        error(\n            createResponse(\n                'error',\n                xhr.status,\n                onerror(xhr.response) || xhr.statusText,\n                xhr.getAllResponseHeaders()\n            )\n        );\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst createProcessorFunction = (apiUrl = '', action, name, options) => {\n    // custom handler (should also handle file, load, error, progress and abort)\n    if (typeof action === 'function') return (...params) => action(name, ...params, options);\n\n    // no action supplied\n    if (!action || !isString(action.url)) return null;\n\n    // internal handler\n    return createFileProcessorFunction(apiUrl, action, name, options);\n};\n\n/*\n function signature:\n (uniqueFileId, load, error) => { }\n */\nconst createRevertFunction = (apiUrl = '', action) => {\n    // is custom implementation\n    if (typeof action === 'function') {\n        return action;\n    }\n\n    // no action supplied, return stub function, interface will work, but file won't be removed\n    if (!action || !isString(action.url)) {\n        return (uniqueFileId, load) => load();\n    }\n\n    // set onload hanlder\n    const onload = action.onload || (res => res);\n    const onerror = action.onerror || (res => null);\n\n    // internal implementation\n    return (uniqueFileId, load, error) => {\n        const request = sendRequest(\n            uniqueFileId,\n            apiUrl + action.url,\n            action // contains method, headers and withCredentials properties\n        );\n        request.onload = xhr => {\n            load(\n                createResponse(\n                    'load',\n                    xhr.status,\n                    onload(xhr.response),\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.onerror = xhr => {\n            error(\n                createResponse(\n                    'error',\n                    xhr.status,\n                    onerror(xhr.response) || xhr.statusText,\n                    xhr.getAllResponseHeaders()\n                )\n            );\n        };\n\n        request.ontimeout = createTimeoutResponse(error);\n\n        return request;\n    };\n};\n\nconst getRandomNumber = (min = 0, max = 1) => min + Math.random() * (max - min);\n\nconst createPerceivedPerformanceUpdater = (\n    cb,\n    duration = 1000,\n    offset = 0,\n    tickMin = 25,\n    tickMax = 250\n) => {\n    let timeout = null;\n    const start = Date.now();\n\n    const tick = () => {\n        let runtime = Date.now() - start;\n        let delay = getRandomNumber(tickMin, tickMax);\n\n        if (runtime + delay > duration) {\n            delay = runtime + delay - duration;\n        }\n\n        let progress = runtime / duration;\n        if (progress >= 1 || document.hidden) {\n            cb(1);\n            return;\n        }\n\n        cb(progress);\n\n        timeout = setTimeout(tick, delay);\n    };\n\n    if (duration > 0) tick();\n\n    return {\n        clear: () => {\n            clearTimeout(timeout);\n        },\n    };\n};\n\nconst createFileProcessor = (processFn, options) => {\n    const state = {\n        complete: false,\n        perceivedProgress: 0,\n        perceivedPerformanceUpdater: null,\n        progress: null,\n        timestamp: null,\n        perceivedDuration: 0,\n        duration: 0,\n        request: null,\n        response: null,\n    };\n\n    const { allowMinimumUploadDuration } = options;\n\n    const process = (file, metadata) => {\n        const progressFn = () => {\n            // we've not yet started the real download, stop here\n            // the request might not go through, for instance, there might be some server trouble\n            // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n            if (state.duration === 0 || state.progress === null) return;\n\n            // as we're now processing, fire the progress event\n            api.fire('progress', api.getProgress());\n        };\n\n        const completeFn = () => {\n            state.complete = true;\n            api.fire('load-perceived', state.response.body);\n        };\n\n        // let's start processing\n        api.fire('start');\n\n        // set request start\n        state.timestamp = Date.now();\n\n        // create perceived performance progress indicator\n        state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(\n            progress => {\n                state.perceivedProgress = progress;\n                state.perceivedDuration = Date.now() - state.timestamp;\n\n                progressFn();\n\n                // if fake progress is done, and a response has been received,\n                // and we've not yet called the complete method\n                if (state.response && state.perceivedProgress === 1 && !state.complete) {\n                    // we done!\n                    completeFn();\n                }\n            },\n            // random delay as in a list of files you start noticing\n            // files uploading at the exact same speed\n            allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0\n        );\n\n        // remember request so we can abort it later\n        state.request = processFn(\n            // the file to process\n            file,\n\n            // the metadata to send along\n            metadata,\n\n            // callbacks (load, error, progress, abort, transfer)\n            // load expects the body to be a server id if\n            // you want to make use of revert\n            response => {\n                // we put the response in state so we can access\n                // it outside of this method\n                state.response = isObject(response)\n                    ? response\n                    : {\n                          type: 'load',\n                          code: 200,\n                          body: `${response}`,\n                          headers: {},\n                      };\n\n                // update duration\n                state.duration = Date.now() - state.timestamp;\n\n                // force progress to 1 as we're now done\n                state.progress = 1;\n\n                // actual load is done let's share results\n                api.fire('load', state.response.body);\n\n                // we are really done\n                // if perceived progress is 1 ( wait for perceived progress to complete )\n                // or if server does not support progress ( null )\n                if (\n                    !allowMinimumUploadDuration ||\n                    (allowMinimumUploadDuration && state.perceivedProgress === 1)\n                ) {\n                    completeFn();\n                }\n            },\n\n            // error is expected to be an object with type, code, body\n            error => {\n                // cancel updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // update others about this error\n                api.fire(\n                    'error',\n                    isObject(error)\n                        ? error\n                        : {\n                              type: 'error',\n                              code: 0,\n                              body: `${error}`,\n                          }\n                );\n            },\n\n            // actual processing progress\n            (computable, current, total) => {\n                // update actual duration\n                state.duration = Date.now() - state.timestamp;\n\n                // update actual progress\n                state.progress = computable ? current / total : null;\n\n                progressFn();\n            },\n\n            // abort does not expect a value\n            () => {\n                // stop updater\n                state.perceivedPerformanceUpdater.clear();\n\n                // fire the abort event so we can switch visuals\n                api.fire('abort', state.response ? state.response.body : null);\n            },\n\n            // register the id for this transfer\n            transferId => {\n                api.fire('transfer', transferId);\n            }\n        );\n    };\n\n    const abort = () => {\n        // no request running, can't abort\n        if (!state.request) return;\n\n        // stop updater\n        state.perceivedPerformanceUpdater.clear();\n\n        // abort actual request\n        if (state.request.abort) state.request.abort();\n\n        // if has response object, we've completed the request\n        state.complete = true;\n    };\n\n    const reset = () => {\n        abort();\n        state.complete = false;\n        state.perceivedProgress = 0;\n        state.progress = 0;\n        state.timestamp = null;\n        state.perceivedDuration = 0;\n        state.duration = 0;\n        state.request = null;\n        state.response = null;\n    };\n\n    const getProgress = allowMinimumUploadDuration\n        ? () => (state.progress ? Math.min(state.progress, state.perceivedProgress) : null)\n        : () => state.progress || null;\n\n    const getDuration = allowMinimumUploadDuration\n        ? () => Math.min(state.duration, state.perceivedDuration)\n        : () => state.duration;\n\n    const api = {\n        ...on(),\n        process, // start processing file\n        abort, // abort active process request\n        getProgress,\n        getDuration,\n        reset,\n    };\n\n    return api;\n};\n\nconst getFilenameWithoutExtension = name => name.substring(0, name.lastIndexOf('.')) || name;\n\nconst createFileStub = source => {\n    let data = [source.name, source.size, source.type];\n\n    // is blob or base64, then we need to set the name\n    if (source instanceof Blob || isBase64DataURI(source)) {\n        data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n        // if is base64 data uri we need to determine the average size and type\n        data[1] = source.length;\n        data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n        // url\n        data[0] = getFilenameFromURL(source);\n        data[1] = 0;\n        data[2] = 'application/octet-stream';\n    }\n\n    return {\n        name: data[0],\n        size: data[1],\n        type: data[2],\n    };\n};\n\nconst isFile = value => !!(value instanceof File || (value instanceof Blob && value.name));\n\nconst deepCloneObject = src => {\n    if (!isObject(src)) return src;\n    const target = isArray(src) ? [] : {};\n    for (const key in src) {\n        if (!src.hasOwnProperty(key)) continue;\n        const v = src[key];\n        target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n    return target;\n};\n\nconst createItem = (origin = null, serverFileReference = null, file = null) => {\n    // unique id for this item, is used to identify the item across views\n    const id = getUniqueId();\n\n    /**\n     * Internal item state\n     */\n    const state = {\n        // is archived\n        archived: false,\n\n        // if is frozen, no longer fires events\n        frozen: false,\n\n        // removed from view\n        released: false,\n\n        // original source\n        source: null,\n\n        // file model reference\n        file,\n\n        // id of file on server\n        serverFileReference,\n\n        // id of file transfer on server\n        transferId: null,\n\n        // is aborted\n        processingAborted: false,\n\n        // current item status\n        status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n\n        // active processes\n        activeLoader: null,\n        activeProcessor: null,\n    };\n\n    // callback used when abort processing is called to link back to the resolve method\n    let abortProcessingRequestComplete = null;\n\n    /**\n     * Externally added item metadata\n     */\n    const metadata = {};\n\n    // item data\n    const setStatus = status => (state.status = status);\n\n    // fire event unless the item has been archived\n    const fire = (event, ...params) => {\n        if (state.released || state.frozen) return;\n        api.fire(event, ...params);\n    };\n\n    // file data\n    const getFileExtension = () => getExtensionFromFilename(state.file.name);\n    const getFileType = () => state.file.type;\n    const getFileSize = () => state.file.size;\n    const getFile = () => state.file;\n\n    //\n    // logic to load a file\n    //\n    const load = (source, loader, onload) => {\n        // remember the original item source\n        state.source = source;\n\n        // source is known\n        api.fireSync('init');\n\n        // file stub is already there\n        if (state.file) {\n            api.fireSync('load-skip');\n            return;\n        }\n\n        // set a stub file object while loading the actual data\n        state.file = createFileStub(source);\n\n        // starts loading\n        loader.on('init', () => {\n            fire('load-init');\n        });\n\n        // we'eve received a size indication, let's update the stub\n        loader.on('meta', meta => {\n            // set size of file stub\n            state.file.size = meta.size;\n\n            // set name of file stub\n            state.file.filename = meta.filename;\n\n            // if has received source, we done\n            if (meta.source) {\n                origin = FileOrigin.LIMBO;\n                state.serverFileReference = meta.source;\n                state.status = ItemStatus.PROCESSING_COMPLETE;\n            }\n\n            // size has been updated\n            fire('load-meta');\n        });\n\n        // the file is now loading we need to update the progress indicators\n        loader.on('progress', progress => {\n            setStatus(ItemStatus.LOADING);\n\n            fire('load-progress', progress);\n        });\n\n        // an error was thrown while loading the file, we need to switch to error state\n        loader.on('error', error => {\n            setStatus(ItemStatus.LOAD_ERROR);\n\n            fire('load-request-error', error);\n        });\n\n        // user or another process aborted the file load (cannot retry)\n        loader.on('abort', () => {\n            setStatus(ItemStatus.INIT);\n            fire('load-abort');\n        });\n\n        // done loading\n        loader.on('load', file => {\n            // as we've now loaded the file the loader is no longer required\n            state.activeLoader = null;\n\n            // called when file has loaded succesfully\n            const success = result => {\n                // set (possibly) transformed file\n                state.file = isFile(result) ? result : state.file;\n\n                // file received\n                if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n                    setStatus(ItemStatus.PROCESSING_COMPLETE);\n                } else {\n                    setStatus(ItemStatus.IDLE);\n                }\n\n                fire('load');\n            };\n\n            const error = result => {\n                // set original file\n                state.file = file;\n                fire('load-meta');\n\n                setStatus(ItemStatus.LOAD_ERROR);\n                fire('load-file-error', result);\n            };\n\n            // if we already have a server file reference, we don't need to call the onload method\n            if (state.serverFileReference) {\n                success(file);\n                return;\n            }\n\n            // no server id, let's give this file the full treatment\n            onload(file, success, error);\n        });\n\n        // set loader source data\n        loader.setSource(source);\n\n        // set as active loader\n        state.activeLoader = loader;\n\n        // load the source data\n        loader.load();\n    };\n\n    const retryLoad = () => {\n        if (!state.activeLoader) {\n            return;\n        }\n        state.activeLoader.load();\n    };\n\n    const abortLoad = () => {\n        if (state.activeLoader) {\n            state.activeLoader.abort();\n            return;\n        }\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n    };\n\n    //\n    // logic to process a file\n    //\n    const process = (processor, onprocess) => {\n        // processing was aborted\n        if (state.processingAborted) {\n            state.processingAborted = false;\n            return;\n        }\n\n        // now processing\n        setStatus(ItemStatus.PROCESSING);\n\n        // reset abort callback\n        abortProcessingRequestComplete = null;\n\n        // if no file loaded we'll wait for the load event\n        if (!(state.file instanceof Blob)) {\n            api.on('load', () => {\n                process(processor, onprocess);\n            });\n            return;\n        }\n\n        // setup processor\n        processor.on('load', serverFileReference => {\n            // need this id to be able to revert the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n        });\n\n        // register transfer id\n        processor.on('transfer', transferId => {\n            // need this id to be able to revert the upload\n            state.transferId = transferId;\n        });\n\n        processor.on('load-perceived', serverFileReference => {\n            // no longer required\n            state.activeProcessor = null;\n\n            // need this id to be able to rever the upload\n            state.transferId = null;\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n            fire('process-complete', serverFileReference);\n        });\n\n        processor.on('start', () => {\n            fire('process-start');\n        });\n\n        processor.on('error', error => {\n            state.activeProcessor = null;\n            setStatus(ItemStatus.PROCESSING_ERROR);\n            fire('process-error', error);\n        });\n\n        processor.on('abort', serverFileReference => {\n            state.activeProcessor = null;\n\n            // if file was uploaded but processing was cancelled during perceived processor time store file reference\n            state.serverFileReference = serverFileReference;\n\n            setStatus(ItemStatus.IDLE);\n            fire('process-abort');\n\n            // has timeout so doesn't interfere with remove action\n            if (abortProcessingRequestComplete) {\n                abortProcessingRequestComplete();\n            }\n        });\n\n        processor.on('progress', progress => {\n            fire('process-progress', progress);\n        });\n\n        // when successfully transformed\n        const success = file => {\n            // if was archived in the mean time, don't process\n            if (state.archived) return;\n\n            // process file!\n            processor.process(file, { ...metadata });\n        };\n\n        // something went wrong during transform phase\n        const error = console.error;\n\n        // start processing the file\n        onprocess(state.file, success, error);\n\n        // set as active processor\n        state.activeProcessor = processor;\n    };\n\n    const requestProcessing = () => {\n        state.processingAborted = false;\n        setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    const abortProcessing = () =>\n        new Promise(resolve => {\n            if (!state.activeProcessor) {\n                state.processingAborted = true;\n\n                setStatus(ItemStatus.IDLE);\n                fire('process-abort');\n\n                resolve();\n                return;\n            }\n\n            abortProcessingRequestComplete = () => {\n                resolve();\n            };\n\n            state.activeProcessor.abort();\n        });\n\n    //\n    // logic to revert a processed file\n    //\n    const revert = (revertFileUpload, forceRevert) =>\n        new Promise((resolve, reject) => {\n            // a completed upload will have a serverFileReference, a failed chunked upload where\n            // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set\n            const serverTransferId =\n                state.serverFileReference !== null ? state.serverFileReference : state.transferId;\n\n            // cannot revert without a server id for this process\n            if (serverTransferId === null) {\n                resolve();\n                return;\n            }\n\n            // revert the upload (fire and forget)\n            revertFileUpload(\n                serverTransferId,\n                () => {\n                    // reset file server id and transfer id as now it's not available on the server\n                    state.serverFileReference = null;\n                    state.transferId = null;\n                    resolve();\n                },\n                error => {\n                    // don't set error state when reverting is optional, it will always resolve\n                    if (!forceRevert) {\n                        resolve();\n                        return;\n                    }\n\n                    // oh no errors\n                    setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n                    fire('process-revert-error');\n                    reject(error);\n                }\n            );\n\n            // fire event\n            setStatus(ItemStatus.IDLE);\n            fire('process-revert');\n        });\n\n    // exposed methods\n    const setMetadata = (key, value, silent) => {\n        const keys = key.split('.');\n        const root = keys[0];\n        const last = keys.pop();\n        let data = metadata;\n        keys.forEach(key => (data = data[key]));\n\n        // compare old value against new value, if they're the same, we're not updating\n        if (JSON.stringify(data[last]) === JSON.stringify(value)) return;\n\n        // update value\n        data[last] = value;\n\n        // fire update\n        fire('metadata-update', {\n            key: root,\n            value: metadata[root],\n            silent,\n        });\n    };\n\n    const getMetadata = key => deepCloneObject(key ? metadata[key] : metadata);\n\n    const api = {\n        id: { get: () => id },\n        origin: { get: () => origin, set: value => (origin = value) },\n        serverId: { get: () => state.serverFileReference },\n        transferId: { get: () => state.transferId },\n        status: { get: () => state.status },\n        filename: { get: () => state.file.name },\n        filenameWithoutExtension: { get: () => getFilenameWithoutExtension(state.file.name) },\n        fileExtension: { get: getFileExtension },\n        fileType: { get: getFileType },\n        fileSize: { get: getFileSize },\n        file: { get: getFile },\n        relativePath: { get: () => state.file._relativePath },\n\n        source: { get: () => state.source },\n\n        getMetadata,\n        setMetadata: (key, value, silent) => {\n            if (isObject(key)) {\n                const data = key;\n                Object.keys(data).forEach(key => {\n                    setMetadata(key, data[key], value);\n                });\n                return key;\n            }\n            setMetadata(key, value, silent);\n            return value;\n        },\n\n        extend: (name, handler) => (itemAPI[name] = handler),\n\n        abortLoad,\n        retryLoad,\n        requestProcessing,\n        abortProcessing,\n\n        load,\n        process,\n        revert,\n\n        ...on(),\n\n        freeze: () => (state.frozen = true),\n\n        release: () => (state.released = true),\n        released: { get: () => state.released },\n\n        archive: () => (state.archived = true),\n        archived: { get: () => state.archived },\n    };\n\n    // create it here instead of returning it instantly so we can extend it later\n    const itemAPI = createObject(api);\n\n    return itemAPI;\n};\n\nconst getItemIndexByQuery = (items, query) => {\n    // just return first index\n    if (isEmpty(query)) {\n        return 0;\n    }\n\n    // invalid queries\n    if (!isString(query)) {\n        return -1;\n    }\n\n    // return item by id (or -1 if not found)\n    return items.findIndex(item => item.id === query);\n};\n\nconst getItemById = (items, itemId) => {\n    const index = getItemIndexByQuery(items, itemId);\n    if (index < 0) {\n        return;\n    }\n    return items[index] || null;\n};\n\nconst fetchBlob = (url, load, error, progress, abort, headers) => {\n    const request = sendRequest(null, url, {\n        method: 'GET',\n        responseType: 'blob',\n    });\n\n    request.onload = xhr => {\n        // get headers\n        const headers = xhr.getAllResponseHeaders();\n\n        // get filename\n        const filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);\n\n        // create response\n        load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = xhr => {\n        error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = xhr => {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort;\n\n    // should return request\n    return request;\n};\n\nconst getDomainFromURL = url => {\n    if (url.indexOf('//') === 0) {\n        url = location.protocol + url;\n    }\n    return url\n        .toLowerCase()\n        .replace('blob:', '')\n        .replace(/([a-z])?:\\/\\//, '$1')\n        .split('/')[0];\n};\n\nconst isExternalURL = url =>\n    (url.indexOf(':') > -1 || url.indexOf('//') > -1) &&\n    getDomainFromURL(location.href) !== getDomainFromURL(url);\n\nconst dynamicLabel = label => (...params) => (isFunction(label) ? label(...params) : label);\n\nconst isMockItem = item => !isFile(item.file);\n\nconst listUpdated = (dispatch, state) => {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(() => {\n        dispatch('DID_UPDATE_ITEMS', { items: getActiveItems(state.items) });\n    }, 0);\n};\n\nconst optionalPromise = (fn, ...params) =>\n    new Promise(resolve => {\n        if (!fn) {\n            return resolve(true);\n        }\n\n        const result = fn(...params);\n\n        if (result == null) {\n            return resolve(true);\n        }\n\n        if (typeof result === 'boolean') {\n            return resolve(result);\n        }\n\n        if (typeof result.then === 'function') {\n            result.then(resolve);\n        }\n    });\n\nconst sortItems = (state, compare) => {\n    state.items.sort((a, b) => compare(createItemAPI(a), createItemAPI(b)));\n};\n\n// returns item based on state\nconst getItemByQueryFromState = (state, itemHandler) => ({\n    query,\n    success = () => {},\n    failure = () => {},\n    ...options\n} = {}) => {\n    const item = getItemByQuery(state.items, query);\n    if (!item) {\n        failure({\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        });\n        return;\n    }\n    itemHandler(item, success, failure, options || {});\n};\n\nconst actions = (dispatch, query, state) => ({\n    /**\n     * Aborts all ongoing processes\n     */\n    ABORT_ALL: () => {\n        getActiveItems(state.items).forEach(item => {\n            item.freeze();\n            item.abortLoad();\n            item.abortProcessing();\n        });\n    },\n\n    /**\n     * Sets initial files\n     */\n    DID_SET_FILES: ({ value = [] }) => {\n        // map values to file objects\n        const files = value.map(file => ({\n            source: file.source ? file.source : file,\n            options: file.options,\n        }));\n\n        // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n        let activeItems = getActiveItems(state.items);\n\n        activeItems.forEach(item => {\n            // if item not is in new value, remove\n            if (!files.find(file => file.source === item.source || file.source === item.file)) {\n                dispatch('REMOVE_ITEM', { query: item, remove: false });\n            }\n        });\n\n        // add new files\n        activeItems = getActiveItems(state.items);\n        files.forEach((file, index) => {\n            // if file is already in list\n            if (activeItems.find(item => item.source === file.source || item.file === file.source))\n                return;\n\n            // not in list, add\n            dispatch('ADD_ITEM', {\n                ...file,\n                interactionMethod: InteractionMethod.NONE,\n                index,\n            });\n        });\n    },\n\n    DID_UPDATE_ITEM_METADATA: ({ id, action, change }) => {\n        // don't do anything\n        if (change.silent) return;\n\n        // if is called multiple times in close succession we combined all calls together to save resources\n        clearTimeout(state.itemUpdateTimeout);\n        state.itemUpdateTimeout = setTimeout(() => {\n            const item = getItemById(state.items, id);\n\n            // only revert and attempt to upload when we're uploading to a server\n            if (!query('IS_ASYNC')) {\n                // should we update the output data\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n                    item,\n                    query,\n                    action,\n                    change,\n                }).then(shouldPrepareOutput => {\n                    // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                    const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                    if (beforePrepareFile)\n                        shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                    if (!shouldPrepareOutput) return;\n\n                    dispatch(\n                        'REQUEST_PREPARE_OUTPUT',\n                        {\n                            query: id,\n                            item,\n                            success: file => {\n                                dispatch('DID_PREPARE_OUTPUT', { id, file });\n                            },\n                        },\n                        true\n                    );\n                });\n\n                return;\n            }\n\n            // if is local item we need to enable upload button so change can be propagated to server\n            if (item.origin === FileOrigin.LOCAL) {\n                dispatch('DID_LOAD_ITEM', {\n                    id: item.id,\n                    error: null,\n                    serverFileReference: item.source,\n                });\n            }\n\n            // for async scenarios\n            const upload = () => {\n                // we push this forward a bit so the interface is updated correctly\n                setTimeout(() => {\n                    dispatch('REQUEST_ITEM_PROCESSING', { query: id });\n                }, 32);\n            };\n\n            const revert = doUpload => {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(doUpload ? upload : () => {})\n                    .catch(() => {});\n            };\n\n            const abort = doUpload => {\n                item.abortProcessing().then(doUpload ? upload : () => {});\n            };\n\n            // if we should re-upload the file immediately\n            if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n                return revert(state.options.instantUpload);\n            }\n\n            // if currently uploading, cancel upload\n            if (item.status === ItemStatus.PROCESSING) {\n                return abort(state.options.instantUpload);\n            }\n\n            if (state.options.instantUpload) {\n                upload();\n            }\n        }, 0);\n    },\n\n    MOVE_ITEM: ({ query, index }) => {\n        const item = getItemByQuery(state.items, query);\n        if (!item) return;\n        const currentIndex = state.items.indexOf(item);\n        index = limit(index, 0, state.items.length - 1);\n        if (currentIndex === index) return;\n        state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);\n    },\n\n    SORT: ({ compare }) => {\n        sortItems(state, compare);\n        dispatch('DID_SORT_ITEMS', {\n            items: query('GET_ACTIVE_ITEMS'),\n        });\n    },\n\n    ADD_ITEMS: ({ items, index, interactionMethod, success = () => {}, failure = () => {} }) => {\n        let currentIndex = index;\n\n        if (index === -1 || typeof index === 'undefined') {\n            const insertLocation = query('GET_ITEM_INSERT_LOCATION');\n            const totalItems = query('GET_TOTAL_ITEMS');\n            currentIndex = insertLocation === 'before' ? 0 : totalItems;\n        }\n\n        const ignoredFiles = query('GET_IGNORED_FILES');\n        const isValidFile = source =>\n            isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n        const validItems = items.filter(isValidFile);\n\n        const promises = validItems.map(\n            source =>\n                new Promise((resolve, reject) => {\n                    dispatch('ADD_ITEM', {\n                        interactionMethod,\n                        source: source.source || source,\n                        success: resolve,\n                        failure: reject,\n                        index: currentIndex++,\n                        options: source.options || {},\n                    });\n                })\n        );\n\n        Promise.all(promises)\n            .then(success)\n            .catch(failure);\n    },\n\n    /**\n     * @param source\n     * @param index\n     * @param interactionMethod\n     */\n    ADD_ITEM: ({\n        source,\n        index = -1,\n        interactionMethod,\n        success = () => {},\n        failure = () => {},\n        options = {},\n    }) => {\n        // if no source supplied\n        if (isEmpty(source)) {\n            failure({\n                error: createResponse('error', 0, 'No source'),\n                file: null,\n            });\n            return;\n        }\n\n        // filter out invalid file items, used to filter dropped directory contents\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n            // fail silently\n            return;\n        }\n\n        // test if there's still room in the list of files\n        if (!hasRoomForItem(state)) {\n            // if multiple allowed, we can't replace\n            // or if only a single item is allowed but we're not allowed to replace it we exit\n            if (\n                state.options.allowMultiple ||\n                (!state.options.allowMultiple && !state.options.allowReplace)\n            ) {\n                const error = createResponse('warning', 0, 'Max files');\n\n                dispatch('DID_THROW_MAX_FILES', {\n                    source,\n                    error,\n                });\n\n                failure({ error, file: null });\n\n                return;\n            }\n\n            // let's replace the item\n            // id of first item we're about to remove\n            const item = getActiveItems(state.items)[0];\n\n            // if has been processed remove it from the server as well\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                const forceRevert = query('GET_FORCE_REVERT');\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    forceRevert\n                )\n                    .then(() => {\n                        if (!forceRevert) return;\n\n                        // try to add now\n                        dispatch('ADD_ITEM', {\n                            source,\n                            index,\n                            interactionMethod,\n                            success,\n                            failure,\n                            options,\n                        });\n                    })\n                    .catch(() => {}); // no need to handle this catch state for now\n\n                if (forceRevert) return;\n            }\n\n            // remove first item as it will be replaced by this item\n            dispatch('REMOVE_ITEM', { query: item.id });\n        }\n\n        // where did the file originate\n        const origin =\n            options.type === 'local'\n                ? FileOrigin.LOCAL\n                : options.type === 'limbo'\n                ? FileOrigin.LIMBO\n                : FileOrigin.INPUT;\n\n        // create a new blank item\n        const item = createItem(\n            // where did this file come from\n            origin,\n\n            // an input file never has a server file reference\n            origin === FileOrigin.INPUT ? null : source,\n\n            // file mock data, if defined\n            options.file\n        );\n\n        // set initial meta data\n        Object.keys(options.metadata || {}).forEach(key => {\n            item.setMetadata(key, options.metadata[key]);\n        });\n\n        // created the item, let plugins add methods\n        applyFilters('DID_CREATE_ITEM', item, { query, dispatch });\n\n        // where to insert new items\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n        // adjust index if is not allowed to pick location\n        if (!state.options.itemInsertLocationFreedom) {\n            index = itemInsertLocation === 'before' ? -1 : state.items.length;\n        }\n\n        // add item to list\n        insertItem(state.items, item, index);\n\n        // sort items in list\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // get a quick reference to the item id\n        const id = item.id;\n\n        // observe item events\n        item.on('init', () => {\n            dispatch('DID_INIT_ITEM', { id });\n        });\n\n        item.on('load-init', () => {\n            dispatch('DID_START_ITEM_LOAD', { id });\n        });\n\n        item.on('load-meta', () => {\n            dispatch('DID_UPDATE_ITEM_META', { id });\n        });\n\n        item.on('load-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', { id, progress });\n        });\n\n        item.on('load-request-error', error => {\n            const mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);\n\n            // is client error, no way to recover\n            if (error.code >= 400 && error.code < 500) {\n                dispatch('DID_THROW_ITEM_INVALID', {\n                    id,\n                    error,\n                    status: {\n                        main: mainStatus,\n                        sub: `${error.code} (${error.body})`,\n                    },\n                });\n\n                // reject the file so can be dealt with through API\n                failure({ error, file: createItemAPI(item) });\n                return;\n            }\n\n            // is possible server error, so might be possible to retry\n            dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n                id,\n                error,\n                status: {\n                    main: mainStatus,\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('load-file-error', error => {\n            dispatch('DID_THROW_ITEM_INVALID', {\n                id,\n                error: error.status,\n                status: error.status,\n            });\n            failure({ error: error.status, file: createItemAPI(item) });\n        });\n\n        item.on('load-abort', () => {\n            dispatch('REMOVE_ITEM', { query: id });\n        });\n\n        item.on('load-skip', () => {\n            dispatch('COMPLETE_LOAD_ITEM', {\n                query: id,\n                item,\n                data: {\n                    source,\n                    success,\n                },\n            });\n        });\n\n        item.on('load', () => {\n            const handleAdd = shouldAdd => {\n                // no should not add this file\n                if (!shouldAdd) {\n                    dispatch('REMOVE_ITEM', {\n                        query: id,\n                    });\n                    return;\n                }\n\n                // now interested in metadata updates\n                item.on('metadata-update', change => {\n                    dispatch('DID_UPDATE_ITEM_METADATA', { id, change });\n                });\n\n                // let plugins decide if the output data should be prepared at this point\n                // means we'll do this and wait for idle state\n                applyFilterChain('SHOULD_PREPARE_OUTPUT', false, { item, query }).then(\n                    shouldPrepareOutput => {\n                        // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook\n                        const beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');\n                        if (beforePrepareFile)\n                            shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);\n\n                        const loadComplete = () => {\n                            dispatch('COMPLETE_LOAD_ITEM', {\n                                query: id,\n                                item,\n                                data: {\n                                    source,\n                                    success,\n                                },\n                            });\n\n                            listUpdated(dispatch, state);\n                        };\n\n                        // exit\n                        if (shouldPrepareOutput) {\n                            // wait for idle state and then run PREPARE_OUTPUT\n                            dispatch(\n                                'REQUEST_PREPARE_OUTPUT',\n                                {\n                                    query: id,\n                                    item,\n                                    success: file => {\n                                        dispatch('DID_PREPARE_OUTPUT', { id, file });\n                                        loadComplete();\n                                    },\n                                },\n                                true\n                            );\n\n                            return;\n                        }\n\n                        loadComplete();\n                    }\n                );\n            };\n\n            // item loaded, allow plugins to\n            // - read data (quickly)\n            // - add metadata\n            applyFilterChain('DID_LOAD_ITEM', item, { query, dispatch })\n                .then(() => {\n                    optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(\n                        handleAdd\n                    );\n                })\n                .catch(e => {\n                    if (!e || !e.error || !e.status) return handleAdd(false);\n                    dispatch('DID_THROW_ITEM_INVALID', {\n                        id,\n                        error: e.error,\n                        status: e.status,\n                    });\n                });\n        });\n\n        item.on('process-start', () => {\n            dispatch('DID_START_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-progress', progress => {\n            dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', { id, progress });\n        });\n\n        item.on('process-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-revert-error', error => {\n            dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n                id,\n                error,\n                status: {\n                    main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n                    sub: state.options.labelTapToRetry,\n                },\n            });\n        });\n\n        item.on('process-complete', serverFileReference => {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id,\n                error: null,\n                serverFileReference,\n            });\n            dispatch('DID_DEFINE_VALUE', { id, value: serverFileReference });\n        });\n\n        item.on('process-abort', () => {\n            dispatch('DID_ABORT_ITEM_PROCESSING', { id });\n        });\n\n        item.on('process-revert', () => {\n            dispatch('DID_REVERT_ITEM_PROCESSING', { id });\n            dispatch('DID_DEFINE_VALUE', { id, value: null });\n        });\n\n        // let view know the item has been inserted\n        dispatch('DID_ADD_ITEM', { id, index, interactionMethod });\n\n        listUpdated(dispatch, state);\n\n        // start loading the source\n        const { url, load, restore, fetch } = state.options.server || {};\n\n        item.load(\n            source,\n\n            // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n            createFileLoader(\n                origin === FileOrigin.INPUT\n                    ? // input, if is remote, see if should use custom fetch, else use default fetchBlob\n                      isString(source) && isExternalURL(source)\n                        ? fetch\n                            ? createFetchFunction(url, fetch)\n                            : fetchBlob // remote url\n                        : fetchBlob // try to fetch url\n                    : // limbo or local\n                    origin === FileOrigin.LIMBO\n                    ? createFetchFunction(url, restore) // limbo\n                    : createFetchFunction(url, load) // local\n            ),\n\n            // called when the file is loaded so it can be piped through the filters\n            (file, success, error) => {\n                // let's process the file\n                applyFilterChain('LOAD_FILE', file, { query })\n                    .then(success)\n                    .catch(error);\n            }\n        );\n    },\n\n    REQUEST_PREPARE_OUTPUT: ({ item, success, failure = () => {} }) => {\n        // error response if item archived\n        const err = {\n            error: createResponse('error', 0, 'Item not found'),\n            file: null,\n        };\n\n        // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n        if (item.archived) return failure(err);\n\n        // allow plugins to alter the file data\n        applyFilterChain('PREPARE_OUTPUT', item.file, { query, item }).then(result => {\n            applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, { query, item }).then(result => {\n                // don't handle archived items, an item could have been archived (load aborted) while being prepared\n                if (item.archived) return failure(err);\n\n                // we done!\n                success(result);\n            });\n        });\n    },\n\n    COMPLETE_LOAD_ITEM: ({ item, data }) => {\n        const { success, source } = data;\n\n        // sort items in list\n        const itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n        if (isFunction(itemInsertLocation) && source) {\n            sortItems(state, itemInsertLocation);\n        }\n\n        // let interface know the item has loaded\n        dispatch('DID_LOAD_ITEM', {\n            id: item.id,\n            error: null,\n            serverFileReference: item.origin === FileOrigin.INPUT ? null : source,\n        });\n\n        // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n        success(createItemAPI(item));\n\n        // if this is a local server file we need to show a different state\n        if (item.origin === FileOrigin.LOCAL) {\n            dispatch('DID_LOAD_LOCAL_ITEM', { id: item.id });\n            return;\n        }\n\n        // if is a temp server file we prevent async upload call here (as the file is already on the server)\n        if (item.origin === FileOrigin.LIMBO) {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n                id: item.id,\n                error: null,\n                serverFileReference: source,\n            });\n\n            dispatch('DID_DEFINE_VALUE', {\n                id: item.id,\n                value: item.serverId || source,\n            });\n            return;\n        }\n\n        // id we are allowed to upload the file immediately, lets do it\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n            dispatch('REQUEST_ITEM_PROCESSING', { query: item.id });\n        }\n    },\n\n    RETRY_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        // try loading the source one more time\n        item.retryLoad();\n    }),\n\n    REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, (item, success, failure) => {\n        dispatch(\n            'REQUEST_PREPARE_OUTPUT',\n            {\n                query: item.id,\n                item,\n                success: file => {\n                    dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n                    success({\n                        file: item,\n                        output: file,\n                    });\n                },\n                failure,\n            },\n            true\n        );\n    }),\n\n    REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, (item, success, failure) => {\n        // cannot be queued (or is already queued)\n        const itemCanBeQueuedForProcessing =\n            // waiting for something\n            item.status === ItemStatus.IDLE ||\n            // processing went wrong earlier\n            item.status === ItemStatus.PROCESSING_ERROR;\n\n        // not ready to be processed\n        if (!itemCanBeQueuedForProcessing) {\n            const processNow = () =>\n                dispatch('REQUEST_ITEM_PROCESSING', { query: item, success, failure });\n\n            const process = () => (document.hidden ? processNow() : setTimeout(processNow, 32));\n\n            // if already done processing or tried to revert but didn't work, try again\n            if (\n                item.status === ItemStatus.PROCESSING_COMPLETE ||\n                item.status === ItemStatus.PROCESSING_REVERT_ERROR\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                )\n                    .then(process)\n                    .catch(() => {}); // don't continue with processing if something went wrong\n            } else if (item.status === ItemStatus.PROCESSING) {\n                item.abortProcessing().then(process);\n            }\n\n            return;\n        }\n\n        // already queued for processing\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n\n        item.requestProcessing();\n\n        dispatch('DID_REQUEST_ITEM_PROCESSING', { id: item.id });\n\n        dispatch('PROCESS_ITEM', { query: item, success, failure }, true);\n    }),\n\n    PROCESS_ITEM: getItemByQueryFromState(state, (item, success, failure) => {\n        const maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        const totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length;\n\n        // queue and wait till queue is freed up\n        if (totalCurrentUploads === maxParallelUploads) {\n            // queue for later processing\n            state.processingQueue.push({\n                id: item.id,\n                success,\n                failure,\n            });\n\n            // stop it!\n            return;\n        }\n\n        // if was not queued or is already processing exit here\n        if (item.status === ItemStatus.PROCESSING) return;\n\n        const processNext = () => {\n            // process queueud items\n            const queueEntry = state.processingQueue.shift();\n\n            // no items left\n            if (!queueEntry) return;\n\n            // get item reference\n            const { id, success, failure } = queueEntry;\n            const itemReference = getItemByQuery(state.items, id);\n\n            // if item was archived while in queue, jump to next\n            if (!itemReference || itemReference.archived) {\n                processNext();\n                return;\n            }\n\n            // process queued item\n            dispatch('PROCESS_ITEM', { query: id, success, failure }, true);\n        };\n\n        // we done function\n        item.onOnce('process-complete', () => {\n            success(createItemAPI(item));\n            processNext();\n\n            // if origin is local, and we're instant uploading, trigger remove of original\n            // as revert will remove file from list\n            const server = state.options.server;\n            const instantUpload = state.options.instantUpload;\n            if (instantUpload && item.origin === FileOrigin.LOCAL && isFunction(server.remove)) {\n                const noop = () => {};\n                item.origin = FileOrigin.LIMBO;\n                state.options.server.remove(item.source, noop, noop);\n            }\n\n            // All items processed? No errors?\n            const allItemsProcessed =\n                query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length ===\n                state.items.length;\n            if (allItemsProcessed) {\n                dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n            }\n        });\n\n        // we error function\n        item.onOnce('process-error', error => {\n            failure({ error, file: createItemAPI(item) });\n            processNext();\n        });\n\n        // start file processing\n        const options = state.options;\n        item.process(\n            createFileProcessor(\n                createProcessorFunction(options.server.url, options.server.process, options.name, {\n                    chunkTransferId: item.transferId,\n                    chunkServer: options.server.patch,\n                    chunkUploads: options.chunkUploads,\n                    chunkForce: options.chunkForce,\n                    chunkSize: options.chunkSize,\n                    chunkRetryDelays: options.chunkRetryDelays,\n                }),\n                {\n                    allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION'),\n                }\n            ),\n            // called when the file is about to be processed so it can be piped through the transform filters\n            (file, success, error) => {\n                // allow plugins to alter the file data\n                applyFilterChain('PREPARE_OUTPUT', file, { query, item })\n                    .then(file => {\n                        dispatch('DID_PREPARE_OUTPUT', { id: item.id, file });\n\n                        success(file);\n                    })\n                    .catch(error);\n            }\n        );\n    }),\n\n    RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        dispatch('REQUEST_ITEM_PROCESSING', { query: item });\n    }),\n\n    REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, item => {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(shouldRemove => {\n            if (!shouldRemove) {\n                return;\n            }\n            dispatch('REMOVE_ITEM', { query: item });\n        });\n    }),\n\n    RELEASE_ITEM: getItemByQueryFromState(state, item => {\n        item.release();\n    }),\n\n    REMOVE_ITEM: getItemByQueryFromState(state, (item, success, failure, options) => {\n        const removeFromView = () => {\n            // get id reference\n            const id = item.id;\n\n            // archive the item, this does not remove it from the list\n            getItemById(state.items, id).archive();\n\n            // tell the view the item has been removed\n            dispatch('DID_REMOVE_ITEM', { error: null, id, item });\n\n            // now the list has been modified\n            listUpdated(dispatch, state);\n\n            // correctly removed\n            success(createItemAPI(item));\n        };\n\n        // if this is a local file and the `server.remove` function has been configured,\n        // send source there so dev can remove file from server\n        const server = state.options.server;\n        if (\n            item.origin === FileOrigin.LOCAL &&\n            server &&\n            isFunction(server.remove) &&\n            options.remove !== false\n        ) {\n            dispatch('DID_START_ITEM_REMOVE', { id: item.id });\n\n            server.remove(\n                item.source,\n                () => removeFromView(),\n                status => {\n                    dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n                        id: item.id,\n                        error: createResponse('error', 0, status, null),\n                        status: {\n                            main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                            sub: state.options.labelTapToRetry,\n                        },\n                    });\n                }\n            );\n        } else {\n            // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)\n            if (\n                (options.revert && item.origin !== FileOrigin.LOCAL && item.serverId !== null) ||\n                // if chunked uploads are enabled and we're uploading in chunks for this specific file\n                // or if the file isn't big enough for chunked uploads but chunkForce is set then call\n                // revert before removing from the view...\n                (state.options.chunkUploads && item.file.size > state.options.chunkSize) ||\n                (state.options.chunkUploads && state.options.chunkForce)\n            ) {\n                item.revert(\n                    createRevertFunction(state.options.server.url, state.options.server.revert),\n                    query('GET_FORCE_REVERT')\n                );\n            }\n\n            // can now safely remove from view\n            removeFromView();\n        }\n    }),\n\n    ABORT_ITEM_LOAD: getItemByQueryFromState(state, item => {\n        item.abortLoad();\n    }),\n\n    ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // test if is already processed\n        if (item.serverId) {\n            dispatch('REVERT_ITEM_PROCESSING', { id: item.id });\n            return;\n        }\n\n        // abort\n        item.abortProcessing().then(() => {\n            const shouldRemove = state.options.instantUpload;\n            if (shouldRemove) {\n                dispatch('REMOVE_ITEM', { query: item.id });\n            }\n        });\n    }),\n\n    REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        // not instant uploading, revert immediately\n        if (!state.options.instantUpload) {\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n            return;\n        }\n\n        // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n        const handleRevert = shouldRevert => {\n            if (!shouldRevert) return;\n            dispatch('REVERT_ITEM_PROCESSING', { query: item });\n        };\n\n        const fn = query('GET_BEFORE_REMOVE_FILE');\n        if (!fn) {\n            return handleRevert(true);\n        }\n\n        const requestRemoveResult = fn(createItemAPI(item));\n        if (requestRemoveResult == null) {\n            // undefined or null\n            return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n            return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n            requestRemoveResult.then(handleRevert);\n        }\n    }),\n\n    REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, item => {\n        item.revert(\n            createRevertFunction(state.options.server.url, state.options.server.revert),\n            query('GET_FORCE_REVERT')\n        )\n            .then(() => {\n                const shouldRemove = state.options.instantUpload || isMockItem(item);\n                if (shouldRemove) {\n                    dispatch('REMOVE_ITEM', { query: item.id });\n                }\n            })\n            .catch(() => {});\n    }),\n\n    SET_OPTIONS: ({ options }) => {\n        // get all keys passed\n        const optionKeys = Object.keys(options);\n\n        // get prioritized keyed to include (remove once not in options object)\n        const prioritizedOptionKeys = PrioritizedOptions.filter(key => optionKeys.includes(key));\n\n        // order the keys, prioritized first, then rest\n        const orderedOptionKeys = [\n            // add prioritized first if passed to options, else remove\n            ...prioritizedOptionKeys,\n\n            // prevent duplicate keys\n            ...Object.keys(options).filter(key => !prioritizedOptionKeys.includes(key)),\n        ];\n\n        // dispatch set event for each option\n        orderedOptionKeys.forEach(key => {\n            dispatch(`SET_${fromCamels(key, '_').toUpperCase()}`, {\n                value: options[key],\n            });\n        });\n    },\n});\n\nconst PrioritizedOptions = [\n    'server', // must be processed before \"files\"\n];\n\nconst formatFilename = name => name;\n\nconst createElement$1 = tagName => {\n    return document.createElement(tagName);\n};\n\nconst text = (node, value) => {\n    let textNode = node.childNodes[0];\n    if (!textNode) {\n        textNode = document.createTextNode(value);\n        node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n        textNode.nodeValue = value;\n    }\n};\n\nconst polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n    const angleInRadians = (((angleInDegrees % 360) - 90) * Math.PI) / 180.0;\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians),\n    };\n};\n\nconst describeArc = (x, y, radius, startAngle, endAngle, arcSweep) => {\n    const start = polarToCartesian(x, y, radius, endAngle);\n    const end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n};\n\nconst percentageArc = (x, y, radius, from, to) => {\n    let arcSweep = 1;\n    if (to > from && to - from <= 0.5) {\n        arcSweep = 0;\n    }\n    if (from > to && from - to >= 0.5) {\n        arcSweep = 0;\n    }\n    return describeArc(\n        x,\n        y,\n        radius,\n        Math.min(0.9999, from) * 360,\n        Math.min(0.9999, to) * 360,\n        arcSweep\n    );\n};\n\nconst create = ({ root, props }) => {\n    // start at 0\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0;\n\n    // svg\n    const svg = createElement('svg');\n    root.ref.path = createElement('path', {\n        'stroke-width': 2,\n        'stroke-linecap': 'round',\n    });\n    svg.appendChild(root.ref.path);\n\n    root.ref.svg = svg;\n\n    root.appendChild(svg);\n};\n\nconst write = ({ root, props }) => {\n    if (props.opacity === 0) {\n        return;\n    }\n\n    if (props.align) {\n        root.element.dataset.align = props.align;\n    }\n\n    // get width of stroke\n    const ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);\n\n    // calculate size of ring\n    const size = root.rect.element.width * 0.5;\n\n    // ring state\n    let ringFrom = 0;\n    let ringTo = 0;\n\n    // now in busy mode\n    if (props.spin) {\n        ringFrom = 0;\n        ringTo = 0.5;\n    } else {\n        ringFrom = 0;\n        ringTo = props.progress;\n    }\n\n    // get arc path\n    const coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);\n\n    // update progress bar\n    attr(root.ref.path, 'd', coordinates);\n\n    // hide while contains 0 value\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n};\n\nconst progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create,\n    write,\n    mixins: {\n        apis: ['progress', 'spin', 'align'],\n        styles: ['opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 500 },\n            progress: {\n                type: 'spring',\n                stiffness: 0.95,\n                damping: 0.65,\n                mass: 10,\n            },\n        },\n    },\n});\n\nconst create$1 = ({ root, props }) => {\n    root.element.innerHTML = (props.icon || '') + `<span>${props.label}</span>`;\n\n    props.isDisabled = false;\n};\n\nconst write$1 = ({ root, props }) => {\n    const { isDisabled } = props;\n    const shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n\n    if (shouldDisable && !isDisabled) {\n        props.isDisabled = true;\n        attr(root.element, 'disabled', 'disabled');\n    } else if (!shouldDisable && isDisabled) {\n        props.isDisabled = false;\n        root.element.removeAttribute('disabled');\n    }\n};\n\nconst fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n        type: 'button',\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n        apis: ['label'],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n        listeners: true,\n    },\n    create: create$1,\n    write: write$1,\n});\n\nconst toNaturalFileSize = (bytes, decimalSeparator = '.', base = 1000, options = {}) => {\n    const {\n        labelBytes = 'bytes',\n        labelKilobytes = 'KB',\n        labelMegabytes = 'MB',\n        labelGigabytes = 'GB',\n    } = options;\n\n    // no negative byte sizes\n    bytes = Math.round(Math.abs(bytes));\n\n    const KB = base;\n    const MB = base * base;\n    const GB = base * base * base;\n\n    // just bytes\n    if (bytes < KB) {\n        return `${bytes} ${labelBytes}`;\n    }\n\n    // kilobytes\n    if (bytes < MB) {\n        return `${Math.floor(bytes / KB)} ${labelKilobytes}`;\n    }\n\n    // megabytes\n    if (bytes < GB) {\n        return `${removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator)} ${labelMegabytes}`;\n    }\n\n    // gigabytes\n    return `${removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator)} ${labelGigabytes}`;\n};\n\nconst removeDecimalsWhenZero = (value, decimalCount, separator) => {\n    return value\n        .toFixed(decimalCount)\n        .split('.')\n        .filter(part => part !== '0')\n        .join(separator);\n};\n\nconst create$2 = ({ root, props }) => {\n    // filename\n    const fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main';\n    // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName;\n\n    // filesize\n    const fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize;\n\n    // set initial values\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFile = ({ root, props }) => {\n    text(\n        root.ref.fileSize,\n        toNaturalFileSize(\n            root.query('GET_ITEM_SIZE', props.id),\n            '.',\n            root.query('GET_FILE_SIZE_BASE'),\n            root.query('GET_FILE_SIZE_LABELS', root.query)\n        )\n    );\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst updateFileSizeOnError = ({ root, props }) => {\n    // if size is available don't fallback to unknown size message\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n        updateFile({ root, props });\n        return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n};\n\nconst fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: updateFile,\n        DID_UPDATE_ITEM_META: updateFile,\n        DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n        DID_THROW_ITEM_INVALID: updateFileSizeOnError,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$2,\n    mixins: {\n        styles: ['translateX', 'translateY'],\n        animations: {\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst toPercentage = value => Math.round(value * 100);\n\nconst create$3 = ({ root }) => {\n    // main status\n    const main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main;\n\n    // sub status\n    const sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n\n    didSetItemLoadProgress({ root, action: { progress: null } });\n};\n\nconst didSetItemLoadProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_LOADING')\n            : `${root.query('GET_LABEL_FILE_LOADING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didSetItemProcessProgress = ({ root, action }) => {\n    const title =\n        action.progress === null\n            ? root.query('GET_LABEL_FILE_PROCESSING')\n            : `${root.query('GET_LABEL_FILE_PROCESSING')} ${toPercentage(action.progress)}%`;\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didRequestItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n};\n\nconst didAbortItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n};\n\nconst didCompleteItemProcessing = ({ root }) => {\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n};\n\nconst clear = ({ root }) => {\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n};\n\nconst error = ({ root, action }) => {\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n};\n\nconst fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: clear,\n        DID_REVERT_ITEM_PROCESSING: clear,\n        DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n        DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n        DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n        DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n        DID_THROW_ITEM_LOAD_ERROR: error,\n        DID_THROW_ITEM_INVALID: error,\n        DID_THROW_ITEM_PROCESSING_ERROR: error,\n        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n        DID_THROW_ITEM_REMOVE_ERROR: error,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    create: create$3,\n    mixins: {\n        styles: ['translateX', 'translateY', 'opacity'],\n        animations: {\n            opacity: { type: 'tween', duration: 250 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\n/**\n * Button definitions for the file view\n */\n\nconst Buttons = {\n    AbortItemLoad: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n        action: 'ABORT_ITEM_LOAD',\n        className: 'filepond--action-abort-item-load',\n        align: 'LOAD_INDICATOR_POSITION', // right\n    },\n    RetryItemLoad: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n        action: 'RETRY_ITEM_LOAD',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-load',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RemoveItem: {\n        label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n        action: 'REQUEST_REMOVE_ITEM',\n        icon: 'GET_ICON_REMOVE',\n        className: 'filepond--action-remove-item',\n        align: 'BUTTON_REMOVE_ITEM_POSITION', // left\n    },\n    ProcessItem: {\n        label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n        action: 'REQUEST_ITEM_PROCESSING',\n        icon: 'GET_ICON_PROCESS',\n        className: 'filepond--action-process-item',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    AbortItemProcessing: {\n        label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n        action: 'ABORT_ITEM_PROCESSING',\n        className: 'filepond--action-abort-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RetryItemProcessing: {\n        label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n        action: 'RETRY_ITEM_PROCESSING',\n        icon: 'GET_ICON_RETRY',\n        className: 'filepond--action-retry-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n    RevertItemProcessing: {\n        label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n        action: 'REQUEST_REVERT_ITEM_PROCESSING',\n        icon: 'GET_ICON_UNDO',\n        className: 'filepond--action-revert-item-processing',\n        align: 'BUTTON_PROCESS_ITEM_POSITION', // right\n    },\n};\n\n// make a list of buttons, we can then remove buttons from this list if they're disabled\nconst ButtonKeys = [];\nforin(Buttons, key => {\n    ButtonKeys.push(key);\n});\n\nconst calculateFileInfoOffset = root => {\n    if (getRemoveIndicatorAligment(root) === 'right') return 0;\n    const buttonRect = root.ref.buttonRemoveItem.rect.element;\n    return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;\n};\n\nconst calculateButtonWidth = root => {\n    const buttonRect = root.ref.buttonAbortItemLoad.rect.element;\n    return buttonRect.width;\n};\n\n// Force on full pixels so text stays crips\nconst calculateFileVerticalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\nconst calculateFileHorizontalCenterOffset = root =>\n    Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n\nconst getLoadIndicatorAlignment = root => root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\nconst getProcessIndicatorAlignment = root => root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\nconst getRemoveIndicatorAligment = root => root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n\nconst DefaultStyle = {\n    buttonAbortItemLoad: { opacity: 0 },\n    buttonRetryItemLoad: { opacity: 0 },\n    buttonRemoveItem: { opacity: 0 },\n    buttonProcessItem: { opacity: 0 },\n    buttonAbortItemProcessing: { opacity: 0 },\n    buttonRetryItemProcessing: { opacity: 0 },\n    buttonRevertItemProcessing: { opacity: 0 },\n    loadProgressIndicator: { opacity: 0, align: getLoadIndicatorAlignment },\n    processProgressIndicator: { opacity: 0, align: getProcessIndicatorAlignment },\n    processingCompleteIndicator: { opacity: 0, scaleX: 0.75, scaleY: 0.75 },\n    info: { translateX: 0, translateY: 0, opacity: 0 },\n    status: { translateX: 0, translateY: 0, opacity: 0 },\n};\n\nconst IdleStyle = {\n    buttonRemoveItem: { opacity: 1 },\n    buttonProcessItem: { opacity: 1 },\n    info: { translateX: calculateFileInfoOffset },\n    status: { translateX: calculateFileInfoOffset },\n};\n\nconst ProcessingStyle = {\n    buttonAbortItemProcessing: { opacity: 1 },\n    processProgressIndicator: { opacity: 1 },\n    status: { opacity: 1 },\n};\n\nconst StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset, opacity: 1 },\n    },\n    DID_START_ITEM_LOAD: {\n        buttonAbortItemLoad: { opacity: 1 },\n        loadProgressIndicator: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n        buttonRetryItemLoad: { opacity: 1 },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_START_ITEM_REMOVE: {\n        processProgressIndicator: { opacity: 1, align: getRemoveIndicatorAligment },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 0 },\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n        processProgressIndicator: { opacity: 0, align: getRemoveIndicatorAligment },\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1, translateX: calculateFileInfoOffset },\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n        buttonRemoveItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { translateX: calculateFileInfoOffset },\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        info: { opacity: 1 },\n        status: { opacity: 1 },\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonRetryItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n        buttonRevertItemProcessing: { opacity: 1 },\n        status: { opacity: 1 },\n        info: { opacity: 1 },\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n        buttonRemoveItem: { opacity: 1 },\n        buttonProcessItem: { opacity: 1 },\n        info: { translateX: calculateFileInfoOffset },\n        status: { opacity: 1 },\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle,\n};\n\n// complete indicator view\nconst processingCompleteIndicatorView = createView({\n    create: ({ root }) => {\n        root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n        styles: ['scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\n/**\n * Creates the file view\n */\nconst create$4 = ({ root, props }) => {\n    // copy Buttons object\n    const LocalButtons = Object.keys(Buttons).reduce((prev, curr) => {\n        prev[curr] = { ...Buttons[curr] };\n        return prev;\n    }, {});\n\n    const { id } = props;\n\n    // allow reverting upload\n    const allowRevert = root.query('GET_ALLOW_REVERT');\n\n    // allow remove file\n    const allowRemove = root.query('GET_ALLOW_REMOVE');\n\n    // allow processing upload\n    const allowProcess = root.query('GET_ALLOW_PROCESS');\n\n    // is instant uploading, need this to determine the icon of the undo button\n    const instantUpload = root.query('GET_INSTANT_UPLOAD');\n\n    // is async set up\n    const isAsync = root.query('IS_ASYNC');\n\n    // should align remove item buttons\n    const alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');\n\n    // enabled buttons array\n    let buttonFilter;\n    if (isAsync) {\n        if (allowProcess && !allowRevert) {\n            // only remove revert button\n            buttonFilter = key => !/RevertItemProcessing/.test(key);\n        } else if (!allowProcess && allowRevert) {\n            // only remove process button\n            buttonFilter = key => !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);\n        } else if (!allowProcess && !allowRevert) {\n            // remove all process buttons\n            buttonFilter = key => !/Process/.test(key);\n        }\n    } else {\n        // no process controls available\n        buttonFilter = key => !/Process/.test(key);\n    }\n\n    const enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();\n\n    // update icon and label for revert button when instant uploading\n    if (instantUpload && allowRevert) {\n        LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n        LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    }\n\n    // remove last button (revert) if not allowed\n    if (isAsync && !allowRevert) {\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileHorizontalCenterOffset;\n        map.info.translateY = calculateFileVerticalCenterOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // should align center\n    if (isAsync && !allowProcess) {\n        [\n            'DID_START_ITEM_PROCESSING',\n            'DID_REQUEST_ITEM_PROCESSING',\n            'DID_UPDATE_ITEM_PROCESS_PROGRESS',\n            'DID_THROW_ITEM_PROCESSING_ERROR',\n        ].forEach(key => {\n            StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;\n        });\n        StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;\n    }\n\n    // move remove button to right\n    if (alignRemoveItemButton && allowRevert) {\n        LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';\n        const map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n        map.info.translateX = calculateFileInfoOffset;\n        map.status.translateY = calculateFileVerticalCenterOffset;\n        map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };\n    }\n\n    // show/hide RemoveItem button\n    if (!allowRemove) {\n        LocalButtons['RemoveItem'].disabled = true;\n    }\n\n    // create the button views\n    forin(LocalButtons, (key, definition) => {\n        // create button\n        const buttonView = root.createChildView(fileActionButton, {\n            label: root.query(definition.label),\n            icon: root.query(definition.icon),\n            opacity: 0,\n        });\n\n        // should be appended?\n        if (enabledButtons.includes(key)) {\n            root.appendChildView(buttonView);\n        }\n\n        // toggle\n        if (definition.disabled) {\n            buttonView.element.setAttribute('disabled', 'disabled');\n            buttonView.element.setAttribute('hidden', 'hidden');\n        }\n\n        // add position attribute\n        buttonView.element.dataset.align = root.query(`GET_STYLE_${definition.align}`);\n\n        // add class\n        buttonView.element.classList.add(definition.className);\n\n        // handle interactions\n        buttonView.on('click', e => {\n            e.stopPropagation();\n            if (definition.disabled) return;\n            root.dispatch(definition.action, { query: id });\n        });\n\n        // set reference\n        root.ref[`button${key}`] = buttonView;\n    });\n\n    // checkmark\n    root.ref.processingCompleteIndicator = root.appendChildView(\n        root.createChildView(processingCompleteIndicatorView)\n    );\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query(\n        `GET_STYLE_BUTTON_PROCESS_ITEM_POSITION`\n    );\n\n    // create file info view\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, { id }));\n\n    // create file status view\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, { id }));\n\n    // add progress indicators\n    const loadIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_LOAD_INDICATOR_POSITION`),\n        })\n    );\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n\n    const progressIndicatorView = root.appendChildView(\n        root.createChildView(progressIndicator, {\n            opacity: 0,\n            align: root.query(`GET_STYLE_PROGRESS_INDICATOR_POSITION`),\n        })\n    );\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n\n    // current active styles\n    root.ref.activeStyles = [];\n};\n\nconst write$2 = ({ root, actions, props }) => {\n    // route actions\n    route({ root, actions, props });\n\n    // select last state change action\n    let action = actions\n        .concat()\n        .filter(action => /^DID_/.test(action.type))\n        .reverse()\n        .find(action => StyleMap[action.type]);\n\n    // a new action happened, let's get the matching styles\n    if (action) {\n        // define new active styles\n        root.ref.activeStyles = [];\n\n        const stylesToApply = StyleMap[action.type];\n        forin(DefaultStyle, (name, defaultStyles) => {\n            // get reference to control\n            const control = root.ref[name];\n\n            // loop over all styles for this control\n            forin(defaultStyles, (key, defaultValue) => {\n                const value =\n                    stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined'\n                        ? stylesToApply[name][key]\n                        : defaultValue;\n                root.ref.activeStyles.push({ control, key, value });\n            });\n        });\n    }\n\n    // apply active styles to element\n    root.ref.activeStyles.forEach(({ control, key, value }) => {\n        control[key] = typeof value === 'function' ? value(root) : value;\n    });\n};\n\nconst route = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: ({ root, action }) => {\n        root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: ({ root, action }) => {\n        root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: ({ root, action }) => {\n        root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: ({ root }) => {\n        root.ref.loadProgressIndicator.spin = true;\n        root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: ({ root }) => {\n        root.ref.processProgressIndicator.spin = true;\n        root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: ({ root, action }) => {\n        root.ref.loadProgressIndicator.spin = false;\n        root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ({ root, action }) => {\n        root.ref.processProgressIndicator.spin = false;\n        root.ref.processProgressIndicator.progress = action.progress;\n    },\n});\n\nconst file = createView({\n    create: create$4,\n    write: write$2,\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    name: 'file',\n});\n\n/**\n * Creates the file view\n */\nconst create$5 = ({ root, props }) => {\n    // filename\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName);\n\n    // file appended\n    root.ref.file = root.appendChildView(root.createChildView(file, { id: props.id }));\n\n    // data has moved to data.js\n    root.ref.data = false;\n};\n\n/**\n * Data storage\n */\nconst didLoadItem = ({ root, props }) => {\n    // updates the legend of the fieldset so screenreaders can better group buttons\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n};\n\nconst fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n        DID_LOAD_ITEM: didLoadItem,\n    }),\n    didCreateView: root => {\n        applyFilters('CREATE_VIEW', { ...root, view: root });\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper',\n});\n\nconst PANEL_SPRING_PROPS = { type: 'spring', damping: 0.6, mass: 7 };\n\nconst create$6 = ({ root, props }) => {\n    [\n        {\n            name: 'top',\n        },\n        {\n            name: 'center',\n            props: {\n                translateY: null,\n                scaleY: null,\n            },\n            mixins: {\n                animations: {\n                    scaleY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY', 'scaleY'],\n            },\n        },\n        {\n            name: 'bottom',\n            props: {\n                translateY: null,\n            },\n            mixins: {\n                animations: {\n                    translateY: PANEL_SPRING_PROPS,\n                },\n                styles: ['translateY'],\n            },\n        },\n    ].forEach(section => {\n        createSection(root, section, props.name);\n    });\n\n    root.element.classList.add(`filepond--${props.name}`);\n\n    root.ref.scalable = null;\n};\n\nconst createSection = (root, section, className) => {\n    const viewConstructor = createView({\n        name: `panel-${section.name} filepond--${className}`,\n        mixins: section.mixins,\n        ignoreRectUpdate: true,\n    });\n\n    const view = root.createChildView(viewConstructor, section.props);\n\n    root.ref[section.name] = root.appendChildView(view);\n};\n\nconst write$3 = ({ root, props }) => {\n    // update scalable state\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n        root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n        root.element.dataset.scalable = root.ref.scalable;\n    }\n\n    // no height, can't set\n    if (!props.height) return;\n\n    // get child rects\n    const topRect = root.ref.top.rect.element;\n    const bottomRect = root.ref.bottom.rect.element;\n\n    // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n    const height = Math.max(topRect.height + bottomRect.height, props.height);\n\n    // offset center part\n    root.ref.center.translateY = topRect.height;\n\n    // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;\n\n    // offset bottom part\n    root.ref.bottom.translateY = height - bottomRect.height;\n};\n\nconst panel = createView({\n    name: 'panel',\n    read: ({ root, props }) => (props.heightCurrent = root.ref.bottom.translateY),\n    write: write$3,\n    create: create$6,\n    ignoreRect: true,\n    mixins: {\n        apis: ['height', 'heightCurrent', 'scalable'],\n    },\n});\n\nconst createDragHelper = items => {\n    const itemIds = items.map(item => item.id);\n    let prevIndex = undefined;\n    return {\n        setIndex: index => {\n            prevIndex = index;\n        },\n        getIndex: () => prevIndex,\n        getItemIndex: item => itemIds.indexOf(item.id),\n    };\n};\n\nconst ITEM_TRANSLATE_SPRING = {\n    type: 'spring',\n    stiffness: 0.75,\n    damping: 0.45,\n    mass: 10,\n};\n\nconst ITEM_SCALE_SPRING = 'spring';\n\nconst StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy processing',\n    DID_REQUEST_ITEM_PROCESSING: 'busy processing',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle',\n};\n\n/**\n * Creates the file view\n */\nconst create$7 = ({ root, props }) => {\n    // select\n    root.ref.handleClick = e => root.dispatch('DID_ACTIVATE_ITEM', { id: props.id });\n\n    // set id\n    root.element.id = `filepond--item-${props.id}`;\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // file view\n    root.ref.container = root.appendChildView(root.createChildView(fileWrapper, { id: props.id }));\n\n    // file panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'item-panel' }));\n\n    // default start height\n    root.ref.panel.height = null;\n\n    // by default not marked for removal\n    props.markedForRemoval = false;\n\n    // if not allowed to reorder file items, exit here\n    if (!root.query('GET_ALLOW_REORDER')) return;\n\n    // set to idle so shows grab cursor\n    root.element.dataset.dragState = 'idle';\n\n    const grab = e => {\n        if (!e.isPrimary) return;\n\n        let removedActivateListener = false;\n\n        const origin = {\n            x: e.pageX,\n            y: e.pageY,\n        };\n\n        props.dragOrigin = {\n            x: root.translateX,\n            y: root.translateY,\n        };\n\n        props.dragCenter = {\n            x: e.offsetX,\n            y: e.offsetY,\n        };\n\n        const dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));\n\n        root.dispatch('DID_GRAB_ITEM', { id: props.id, dragState });\n\n        const drag = e => {\n            if (!e.isPrimary) return;\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            // if dragged stop listening to clicks, will re-add when done dragging\n            const dist =\n                props.dragOffset.x * props.dragOffset.x + props.dragOffset.y * props.dragOffset.y;\n            if (dist > 16 && !removedActivateListener) {\n                removedActivateListener = true;\n                root.element.removeEventListener('click', root.ref.handleClick);\n            }\n\n            root.dispatch('DID_DRAG_ITEM', { id: props.id, dragState });\n        };\n\n        const drop = e => {\n            if (!e.isPrimary) return;\n\n            document.removeEventListener('pointermove', drag);\n            document.removeEventListener('pointerup', drop);\n\n            props.dragOffset = {\n                x: e.pageX - origin.x,\n                y: e.pageY - origin.y,\n            };\n\n            root.dispatch('DID_DROP_ITEM', { id: props.id, dragState });\n\n            // start listening to clicks again\n            if (removedActivateListener) {\n                setTimeout(() => root.element.addEventListener('click', root.ref.handleClick), 0);\n            }\n        };\n\n        document.addEventListener('pointermove', drag);\n        document.addEventListener('pointerup', drop);\n    };\n\n    root.element.addEventListener('pointerdown', grab);\n};\n\nconst route$1 = createRoute({\n    DID_UPDATE_PANEL_HEIGHT: ({ root, action }) => {\n        root.height = action.height;\n    },\n});\n\nconst write$4 = createRoute(\n    {\n        DID_GRAB_ITEM: ({ root, props }) => {\n            props.dragOrigin = {\n                x: root.translateX,\n                y: root.translateY,\n            };\n        },\n        DID_DRAG_ITEM: ({ root }) => {\n            root.element.dataset.dragState = 'drag';\n        },\n        DID_DROP_ITEM: ({ root, props }) => {\n            props.dragOffset = null;\n            props.dragOrigin = null;\n            root.element.dataset.dragState = 'drop';\n        },\n    },\n    ({ root, actions, props, shouldOptimize }) => {\n        if (root.element.dataset.dragState === 'drop') {\n            if (root.scaleX <= 1) {\n                root.element.dataset.dragState = 'idle';\n            }\n        }\n\n        // select last state change action\n        let action = actions\n            .concat()\n            .filter(action => /^DID_/.test(action.type))\n            .reverse()\n            .find(action => StateMap[action.type]);\n\n        // no need to set same state twice\n        if (action && action.type !== props.currentState) {\n            // set current state\n            props.currentState = action.type;\n\n            // set state\n            root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n        }\n\n        // route actions\n        const aspectRatio =\n            root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n        if (!aspectRatio) {\n            route$1({ root, actions, props });\n            if (!root.height && root.ref.container.rect.element.height > 0) {\n                root.height = root.ref.container.rect.element.height;\n            }\n        } else if (!shouldOptimize) {\n            root.height = root.rect.element.width * aspectRatio;\n        }\n\n        // sync panel height with item height\n        if (shouldOptimize) {\n            root.ref.panel.height = null;\n        }\n\n        root.ref.panel.height = root.height;\n    }\n);\n\nconst item = createView({\n    create: create$7,\n    write: write$4,\n    destroy: ({ root, props }) => {\n        root.element.removeEventListener('click', root.ref.handleClick);\n        root.dispatch('RELEASE_ITEM', { query: props.id });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n        apis: [\n            'id',\n            'interactionMethod',\n            'markedForRemoval',\n            'spawnDate',\n            'dragCenter',\n            'dragOrigin',\n            'dragOffset',\n        ],\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n        animations: {\n            scaleX: ITEM_SCALE_SPRING,\n            scaleY: ITEM_SCALE_SPRING,\n            translateX: ITEM_TRANSLATE_SPRING,\n            translateY: ITEM_TRANSLATE_SPRING,\n            opacity: { type: 'tween', duration: 150 },\n        },\n    },\n});\n\nvar getItemsPerRow = (horizontalSpace, itemWidth) => {\n    // add one pixel leeway, when using percentages for item width total items can be 1.99 per row\n\n    return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));\n};\n\nconst getItemIndexByPosition = (view, children, positionInView) => {\n    if (!positionInView) return;\n\n    const horizontalSpace = view.rect.element.width;\n    // const children = view.childViews;\n    const l = children.length;\n    let last = null;\n\n    // -1, don't move items to accomodate (either add to top or bottom)\n    if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;\n\n    // let's get the item width\n    const item = children[0];\n    const itemRect = item.rect.element;\n    const itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n    const itemWidth = itemRect.width + itemHorizontalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        for (let index = 0; index < l; index++) {\n            const child = children[index];\n            const childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n            if (positionInView.top < childMid) {\n                return index;\n            }\n        }\n        return l;\n    }\n\n    // grid\n    const itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n    const itemHeight = itemRect.height + itemVerticalMargin;\n    for (let index = 0; index < l; index++) {\n        const indexX = index % itemsPerRow;\n        const indexY = Math.floor(index / itemsPerRow);\n\n        const offsetX = indexX * itemWidth;\n        const offsetY = indexY * itemHeight;\n\n        const itemTop = offsetY - itemRect.marginTop;\n        const itemRight = offsetX + itemWidth;\n        const itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n\n        if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n            if (positionInView.left < itemRight) {\n                return index;\n            } else if (index !== l - 1) {\n                last = index;\n            } else {\n                last = null;\n            }\n        }\n    }\n\n    if (last !== null) {\n        return last;\n    }\n\n    return l;\n};\n\nconst dropAreaDimensions = {\n    height: 0,\n    width: 0,\n    get getHeight() {\n        return this.height;\n    },\n    set setHeight(val) {\n        if (this.height === 0 || val === 0) this.height = val;\n    },\n    get getWidth() {\n        return this.width;\n    },\n    set setWidth(val) {\n        if (this.width === 0 || val === 0) this.width = val;\n    },\n    setDimensions: function(height, width) {\n        if (this.height === 0 || height === 0) this.height = height;\n        if (this.width === 0 || width === 0) this.width = width;\n    },\n};\n\nconst create$8 = ({ root }) => {\n    // need to set role to list as otherwise it won't be read as a list by VoiceOver\n    attr(root.element, 'role', 'list');\n\n    root.ref.lastItemSpanwDate = Date.now();\n};\n\n/**\n * Inserts a new item\n * @param root\n * @param action\n */\nconst addItemView = ({ root, action }) => {\n    const { id, index, interactionMethod } = action;\n\n    root.ref.addIndex = index;\n\n    const now = Date.now();\n    let spawnDate = now;\n    let opacity = 1;\n\n    if (interactionMethod !== InteractionMethod.NONE) {\n        opacity = 0;\n        const cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n        const dist = now - root.ref.lastItemSpanwDate;\n        spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n    }\n\n    root.ref.lastItemSpanwDate = spawnDate;\n\n    root.appendChildView(\n        root.createChildView(\n            // view type\n            item,\n\n            // props\n            {\n                spawnDate,\n                id,\n                opacity,\n                interactionMethod,\n            }\n        ),\n        index\n    );\n};\n\nconst moveItem = (item, x, y, vx = 0, vy = 1) => {\n    // set to null to remove animation while dragging\n    if (item.dragOffset) {\n        item.translateX = null;\n        item.translateY = null;\n        item.translateX = item.dragOrigin.x + item.dragOffset.x;\n        item.translateY = item.dragOrigin.y + item.dragOffset.y;\n        item.scaleX = 1.025;\n        item.scaleY = 1.025;\n    } else {\n        item.translateX = x;\n        item.translateY = y;\n\n        if (Date.now() > item.spawnDate) {\n            // reveal element\n            if (item.opacity === 0) {\n                introItemView(item, x, y, vx, vy);\n            }\n\n            // make sure is default scale every frame\n            item.scaleX = 1;\n            item.scaleY = 1;\n            item.opacity = 1;\n        }\n    }\n};\n\nconst introItemView = (item, x, y, vx, vy) => {\n    if (item.interactionMethod === InteractionMethod.NONE) {\n        item.translateX = null;\n        item.translateX = x;\n        item.translateY = null;\n        item.translateY = y;\n    } else if (item.interactionMethod === InteractionMethod.DROP) {\n        item.translateX = null;\n        item.translateX = x - vx * 20;\n\n        item.translateY = null;\n        item.translateY = y - vy * 10;\n\n        item.scaleX = 0.8;\n        item.scaleY = 0.8;\n    } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n        item.translateY = null;\n        item.translateY = y - 30;\n    } else if (item.interactionMethod === InteractionMethod.API) {\n        item.translateX = null;\n        item.translateX = x - 30;\n        item.translateY = null;\n    }\n};\n\n/**\n * Removes an existing item\n * @param root\n * @param action\n */\nconst removeItemView = ({ root, action }) => {\n    const { id } = action;\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    // if no view found, exit\n    if (!view) {\n        return;\n    }\n\n    // animate view out of view\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0;\n\n    // mark for removal\n    view.markedForRemoval = true;\n};\n\nconst getItemHeight = child =>\n    child.rect.element.height +\n    child.rect.element.marginBottom * 0.5 +\n    child.rect.element.marginTop * 0.5;\nconst getItemWidth = child =>\n    child.rect.element.width +\n    child.rect.element.marginLeft * 0.5 +\n    child.rect.element.marginRight * 0.5;\n\nconst dragItem = ({ root, action }) => {\n    const { id, dragState } = action;\n\n    // reference to item\n    const item = root.query('GET_ITEM', { id });\n\n    // get the view matching the given id\n    const view = root.childViews.find(child => child.id === id);\n\n    const numItems = root.childViews.length;\n    const oldIndex = dragState.getItemIndex(item);\n\n    // if no view found, exit\n    if (!view) return;\n\n    const dragPosition = {\n        x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,\n        y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y,\n    };\n\n    // get drag area dimensions\n    const dragHeight = getItemHeight(view);\n    const dragWidth = getItemWidth(view);\n\n    // get rows and columns (There will always be at least one row and one column if a file is present)\n    let cols = Math.floor(root.rect.outer.width / dragWidth);\n    if (cols > numItems) cols = numItems;\n\n    // rows are used to find when we have left the preview area bounding box\n    const rows = Math.floor(numItems / cols + 1);\n\n    dropAreaDimensions.setHeight = dragHeight * rows;\n    dropAreaDimensions.setWidth = dragWidth * cols;\n\n    // get new index of dragged item\n    var location = {\n        y: Math.floor(dragPosition.y / dragHeight),\n        x: Math.floor(dragPosition.x / dragWidth),\n        getGridIndex: function getGridIndex() {\n            if (\n                dragPosition.y > dropAreaDimensions.getHeight ||\n                dragPosition.y < 0 ||\n                dragPosition.x > dropAreaDimensions.getWidth ||\n                dragPosition.x < 0\n            )\n                return oldIndex;\n            return this.y * cols + this.x;\n        },\n        getColIndex: function getColIndex() {\n            const items = root.query('GET_ACTIVE_ITEMS');\n            const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n            const children = items.map(item =>\n                visibleChildren.find(childView => childView.id === item.id)\n            );\n            const currentIndex = children.findIndex(child => child === view);\n            const dragHeight = getItemHeight(view);\n            const l = children.length;\n            let idx = l;\n            let childHeight = 0;\n            let childBottom = 0;\n            let childTop = 0;\n            for (let i = 0; i < l; i++) {\n                childHeight = getItemHeight(children[i]);\n                childTop = childBottom;\n                childBottom = childTop + childHeight;\n                if (dragPosition.y < childBottom) {\n                    if (currentIndex > i) {\n                        if (dragPosition.y < childTop + dragHeight) {\n                            idx = i;\n                            break;\n                        }\n                        continue;\n                    }\n                    idx = i;\n                    break;\n                }\n            }\n            return idx;\n        },\n    };\n\n    // get new index\n    const index = cols > 1 ? location.getGridIndex() : location.getColIndex();\n    root.dispatch('MOVE_ITEM', { query: view, index });\n\n    // if the index of the item changed, dispatch reorder action\n    const currentIndex = dragState.getIndex();\n\n    if (currentIndex === undefined || currentIndex !== index) {\n        dragState.setIndex(index);\n\n        if (currentIndex === undefined) return;\n\n        root.dispatch('DID_REORDER_ITEMS', {\n            items: root.query('GET_ACTIVE_ITEMS'),\n            origin: oldIndex,\n            target: index,\n        });\n    }\n};\n\n/**\n * Setup action routes\n */\nconst route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView,\n    DID_DRAG_ITEM: dragItem,\n});\n\n/**\n * Write to view\n * @param root\n * @param actions\n * @param props\n */\nconst write$5 = ({ root, props, actions, shouldOptimize }) => {\n    // route actions\n    route$2({ root, props, actions });\n\n    const { dragCoordinates } = props;\n\n    // available space on horizontal axis\n    const horizontalSpace = root.rect.element.width;\n\n    // only draw children that have dimensions\n    const visibleChildren = root.childViews.filter(child => child.rect.element.height);\n\n    // sort based on current active items\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // get index\n    const dragIndex = dragCoordinates\n        ? getItemIndexByPosition(root, children, dragCoordinates)\n        : null;\n\n    // add index is used to reserve the dropped/added item index till the actual item is rendered\n    const addIndex = root.ref.addIndex || null;\n\n    // add index no longer needed till possibly next draw\n    root.ref.addIndex = null;\n\n    let dragIndexOffset = 0;\n    let removeIndexOffset = 0;\n    let addIndexOffset = 0;\n\n    if (children.length === 0) return;\n\n    const childRect = children[0].rect.element;\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        let offsetY = 0;\n        let dragOffset = 0;\n\n        children.forEach((child, index) => {\n            if (dragIndex) {\n                let dist = index - dragIndex;\n                if (dist === -2) {\n                    dragOffset = -itemVerticalMargin * 0.25;\n                } else if (dist === -1) {\n                    dragOffset = -itemVerticalMargin * 0.75;\n                } else if (dist === 0) {\n                    dragOffset = itemVerticalMargin * 0.75;\n                } else if (dist === 1) {\n                    dragOffset = itemVerticalMargin * 0.25;\n                } else {\n                    dragOffset = 0;\n                }\n            }\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            if (!child.markedForRemoval) {\n                moveItem(child, 0, offsetY + dragOffset);\n            }\n\n            let itemHeight = child.rect.element.height + itemVerticalMargin;\n\n            let visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n\n            offsetY += visualHeight;\n        });\n    }\n    // grid\n    else {\n        let prevX = 0;\n        let prevY = 0;\n\n        children.forEach((child, index) => {\n            if (index === dragIndex) {\n                dragIndexOffset = 1;\n            }\n\n            if (index === addIndex) {\n                addIndexOffset += 1;\n            }\n\n            if (child.markedForRemoval && child.opacity < 0.5) {\n                removeIndexOffset -= 1;\n            }\n\n            const visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n\n            const indexX = visualIndex % itemsPerRow;\n            const indexY = Math.floor(visualIndex / itemsPerRow);\n\n            const offsetX = indexX * itemWidth;\n            const offsetY = indexY * itemHeight;\n\n            const vectorX = Math.sign(offsetX - prevX);\n            const vectorY = Math.sign(offsetY - prevY);\n\n            prevX = offsetX;\n            prevY = offsetY;\n\n            if (child.markedForRemoval) return;\n\n            if (shouldOptimize) {\n                child.translateX = null;\n                child.translateY = null;\n            }\n\n            moveItem(child, offsetX, offsetY, vectorX, vectorY);\n        });\n    }\n};\n\n/**\n * Filters actions that are meant specifically for a certain child of the list\n * @param child\n * @param actions\n */\nconst filterSetItemActions = (child, actions) =>\n    actions.filter(action => {\n        // if action has an id, filter out actions that don't have this child id\n        if (action.data && action.data.id) {\n            return child.id === action.data.id;\n        }\n\n        // allow all other actions\n        return true;\n    });\n\nconst list = createView({\n    create: create$8,\n    write: write$5,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: ({ root }) => {\n        root.childViews\n            .filter(view => view.markedForRemoval && view.opacity === 0 && view.resting)\n            .forEach(view => {\n                view._destroy();\n                root.removeChildView(view);\n            });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n        apis: ['dragCoordinates'],\n    },\n});\n\nconst create$9 = ({ root, props }) => {\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n};\n\nconst storeDragCoordinates = ({ root, props, action }) => {\n    if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n    props.dragCoordinates = {\n        left: action.position.scopeLeft - root.ref.list.rect.element.left,\n        top:\n            action.position.scopeTop -\n            (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop),\n    };\n};\n\nconst clearDragCoordinates = ({ props }) => {\n    props.dragCoordinates = null;\n};\n\nconst route$3 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates,\n});\n\nconst write$6 = ({ root, props, actions }) => {\n    // route actions\n    route$3({ root, props, actions });\n\n    // current drag position\n    root.ref.list.dragCoordinates = props.dragCoordinates;\n\n    // if currently overflowing but no longer received overflow\n    if (props.overflowing && !props.overflow) {\n        props.overflowing = false;\n\n        // reset overflow state\n        root.element.dataset.state = '';\n        root.height = null;\n    }\n\n    // if is not overflowing currently but does receive overflow value\n    if (props.overflow) {\n        const newHeight = Math.round(props.overflow);\n        if (newHeight !== root.height) {\n            props.overflowing = true;\n            root.element.dataset.state = 'overflow';\n            root.height = newHeight;\n        }\n    }\n};\n\nconst listScroller = createView({\n    create: create$9,\n    write: write$6,\n    name: 'list-scroller',\n    mixins: {\n        apis: ['overflow', 'dragCoordinates'],\n        styles: ['height', 'translateY'],\n        animations: {\n            translateY: 'spring',\n        },\n    },\n});\n\nconst attrToggle = (element, name, state, enabledValue = '') => {\n    if (state) {\n        attr(element, name, enabledValue);\n    } else {\n        element.removeAttribute(name);\n    }\n};\n\nconst resetFileInput = input => {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n        return;\n    }\n\n    try {\n        // for modern browsers\n        input.value = '';\n    } catch (err) {}\n\n    // for IE10\n    if (input.value) {\n        // quickly append input to temp form and reset form\n        const form = createElement$1('form');\n        const parentNode = input.parentNode;\n        const ref = input.nextSibling;\n        form.appendChild(input);\n        form.reset();\n\n        // re-inject input where it originally was\n        if (ref) {\n            parentNode.insertBefore(input, ref);\n        } else {\n            parentNode.appendChild(input);\n        }\n    }\n};\n\nconst create$a = ({ root, props }) => {\n    // set id so can be referenced from outside labels\n    root.element.id = `filepond--browser-${props.id}`;\n\n    // set name of element (is removed when a value is set)\n    attr(root.element, 'name', root.query('GET_NAME'));\n\n    // we have to link this element to the status element\n    attr(root.element, 'aria-controls', `filepond--assistant-${props.id}`);\n\n    // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n    attr(root.element, 'aria-labelledby', `filepond--drop-label-${props.id}`);\n\n    // set configurable props\n    setAcceptedFileTypes({ root, action: { value: root.query('GET_ACCEPTED_FILE_TYPES') } });\n    toggleAllowMultiple({ root, action: { value: root.query('GET_ALLOW_MULTIPLE') } });\n    toggleDirectoryFilter({ root, action: { value: root.query('GET_ALLOW_DIRECTORIES_ONLY') } });\n    toggleDisabled({ root });\n    toggleRequired({ root, action: { value: root.query('GET_REQUIRED') } });\n    setCaptureMethod({ root, action: { value: root.query('GET_CAPTURE_METHOD') } });\n\n    // handle changes to the input field\n    root.ref.handleChange = e => {\n        if (!root.element.value) {\n            return;\n        }\n\n        // extract files and move value of webkitRelativePath path to _relativePath\n        const files = Array.from(root.element.files).map(file => {\n            file._relativePath = file.webkitRelativePath;\n            return file;\n        });\n\n        // we add a little delay so the OS file select window can move out of the way before we add our file\n        setTimeout(() => {\n            // load files\n            props.onload(files);\n\n            // reset input, it's just for exposing a method to drop files, should not retain any state\n            resetFileInput(root.element);\n        }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n};\n\nconst setAcceptedFileTypes = ({ root, action }) => {\n    if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n};\n\nconst toggleAllowMultiple = ({ root, action }) => {\n    attrToggle(root.element, 'multiple', action.value);\n};\n\nconst toggleDirectoryFilter = ({ root, action }) => {\n    attrToggle(root.element, 'webkitdirectory', action.value);\n};\n\nconst toggleDisabled = ({ root }) => {\n    const isDisabled = root.query('GET_DISABLED');\n    const doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n    const disableField = isDisabled || !doesAllowBrowse;\n    attrToggle(root.element, 'disabled', disableField);\n};\n\nconst toggleRequired = ({ root, action }) => {\n    // want to remove required, always possible\n    if (!action.value) {\n        attrToggle(root.element, 'required', false);\n    }\n    // if want to make required, only possible when zero items\n    else if (root.query('GET_TOTAL_ITEMS') === 0) {\n        attrToggle(root.element, 'required', true);\n    }\n};\n\nconst setCaptureMethod = ({ root, action }) => {\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n};\n\nconst updateRequiredStatus = ({ root }) => {\n    const { element } = root;\n    // always remove the required attribute when more than zero items\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n        attrToggle(element, 'required', false);\n        attrToggle(element, 'name', false);\n    } else {\n        // add name attribute\n        attrToggle(element, 'name', true, root.query('GET_NAME'));\n\n        // remove any validation messages\n        const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n        if (shouldCheckValidity) {\n            element.setCustomValidity('');\n        }\n\n        // we only add required if the field has been deemed required\n        if (root.query('GET_REQUIRED')) {\n            attrToggle(element, 'required', true);\n        }\n    }\n};\n\nconst updateFieldValidityStatus = ({ root }) => {\n    const shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n};\n\nconst browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n        type: 'file',\n    },\n    create: create$a,\n    destroy: ({ root }) => {\n        root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n        DID_LOAD_ITEM: updateRequiredStatus,\n        DID_REMOVE_ITEM: updateRequiredStatus,\n        DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n\n        DID_SET_DISABLED: toggleDisabled,\n        DID_SET_ALLOW_BROWSE: toggleDisabled,\n        DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,\n        DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n        DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n        DID_SET_CAPTURE_METHOD: setCaptureMethod,\n        DID_SET_REQUIRED: toggleRequired,\n    }),\n});\n\nconst Key = {\n    ENTER: 13,\n    SPACE: 32,\n};\n\nconst create$b = ({ root, props }) => {\n    // create the label and link it to the file browser\n    const label = createElement$1('label');\n    attr(label, 'for', `filepond--browser-${props.id}`);\n\n    // use for labeling file input (aria-labelledby on file input)\n    attr(label, 'id', `filepond--drop-label-${props.id}`);\n\n    // hide the label for screenreaders, the input element will read the contents of the label when it's focussed. If we don't set aria-hidden the screenreader will also navigate the contents of the label separately from the input.\n    attr(label, 'aria-hidden', 'true');\n\n    // handle keys\n    root.ref.handleKeyDown = e => {\n        const isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n        if (!isActivationKey) return;\n        // stops from triggering the element a second time\n        e.preventDefault();\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    root.ref.handleClick = e => {\n        const isLabelClick = e.target === label || label.contains(e.target);\n\n        // don't want to click twice\n        if (isLabelClick) return;\n\n        // click link (will then in turn activate file input)\n        root.ref.label.click();\n    };\n\n    // attach events\n    label.addEventListener('keydown', root.ref.handleKeyDown);\n    root.element.addEventListener('click', root.ref.handleClick);\n\n    // update\n    updateLabelValue(label, props.caption);\n\n    // add!\n    root.appendChild(label);\n    root.ref.label = label;\n};\n\nconst updateLabelValue = (label, value) => {\n    label.innerHTML = value;\n    const clickable = label.querySelector('.filepond--label-action');\n    if (clickable) {\n        attr(clickable, 'tabindex', '0');\n    }\n    return value;\n};\n\nconst dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$b,\n    destroy: ({ root }) => {\n        root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);\n        root.element.removeEventListener('click', root.ref.handleClick);\n    },\n    write: createRoute({\n        DID_SET_LABEL_IDLE: ({ root, action }) => {\n            updateLabelValue(root.ref.label, action.value);\n        },\n    }),\n    mixins: {\n        styles: ['opacity', 'translateX', 'translateY'],\n        animations: {\n            opacity: { type: 'tween', duration: 150 },\n            translateX: 'spring',\n            translateY: 'spring',\n        },\n    },\n});\n\nconst blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n        styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n        animations: {\n            scaleX: 'spring',\n            scaleY: 'spring',\n            translateX: 'spring',\n            translateY: 'spring',\n            opacity: { type: 'tween', duration: 250 },\n        },\n    },\n});\n\nconst addBlob = ({ root }) => {\n    const centerX = root.rect.element.width * 0.5;\n    const centerY = root.rect.element.height * 0.5;\n\n    root.ref.blob = root.appendChildView(\n        root.createChildView(blob, {\n            opacity: 0,\n            scaleX: 2.5,\n            scaleY: 2.5,\n            translateX: centerX,\n            translateY: centerY,\n        })\n    );\n};\n\nconst moveBlob = ({ root, action }) => {\n    if (!root.ref.blob) {\n        addBlob({ root });\n        return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n};\n\nconst hideBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.opacity = 0;\n};\n\nconst explodeBlob = ({ root }) => {\n    if (!root.ref.blob) {\n        return;\n    }\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n};\n\nconst write$7 = ({ root, props, actions }) => {\n    route$4({ root, props, actions });\n\n    const { blob } = root.ref;\n\n    if (actions.length === 0 && blob && blob.opacity === 0) {\n        root.removeChildView(blob);\n        root.ref.blob = null;\n    }\n};\n\nconst route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob,\n});\n\nconst drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$7,\n});\n\nconst setInputFiles = (element, files) => {\n    try {\n        // Create a DataTransfer instance and add a newly created file\n        const dataTransfer = new DataTransfer();\n        files.forEach(file => {\n            if (file instanceof File) {\n                dataTransfer.items.add(file);\n            } else {\n                dataTransfer.items.add(\n                    new File([file], file.name, {\n                        type: file.type,\n                    })\n                );\n            }\n        });\n\n        // Assign the DataTransfer files list to the file input\n        element.files = dataTransfer.files;\n    } catch (err) {\n        return false;\n    }\n    return true;\n};\n\nconst create$c = ({ root }) => (root.ref.fields = {});\n\nconst getField = (root, id) => root.ref.fields[id];\n\nconst syncFieldPositionsWithItems = root => {\n    root.query('GET_ACTIVE_ITEMS').forEach(item => {\n        if (!root.ref.fields[item.id]) return;\n        root.element.appendChild(root.ref.fields[item.id]);\n    });\n};\n\nconst didReorderItems = ({ root }) => syncFieldPositionsWithItems(root);\n\nconst didAddItem = ({ root, action }) => {\n    const fileItem = root.query('GET_ITEM', action.id);\n    const isLocalFile = fileItem.origin === FileOrigin.LOCAL;\n    const shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');\n    const dataContainer = createElement$1('input');\n    dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    dataContainer.disabled = root.query('GET_DISABLED');\n    root.ref.fields[action.id] = dataContainer;\n    syncFieldPositionsWithItems(root);\n};\n\nconst didLoadItem$1 = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n\n    // store server ref in hidden input\n    if (action.serverFileReference !== null) field.value = action.serverFileReference;\n\n    // store file item in file input\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n\n    const fileItem = root.query('GET_ITEM', action.id);\n    setInputFiles(field, [fileItem.file]);\n};\n\nconst didPrepareOutput = ({ root, action }) => {\n    // this timeout pushes the handler after 'load'\n    if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;\n    setTimeout(() => {\n        const field = getField(root, action.id);\n        if (!field) return;\n        setInputFiles(field, [action.file]);\n    }, 0);\n};\n\nconst didSetDisabled = ({ root }) => {\n    root.element.disabled = root.query('GET_DISABLED');\n};\n\nconst didRemoveItem = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (field.parentNode) field.parentNode.removeChild(field);\n    delete root.ref.fields[action.id];\n};\n\n// only runs for server files. will refuse to update the value if the field\n// is a file field\nconst didDefineValue = ({ root, action }) => {\n    const field = getField(root, action.id);\n    if (!field) return;\n    if (action.value === null) {\n        // clear field value\n        field.removeAttribute('value');\n    } else {\n        // set field value\n        if (field.type != 'file') {\n            field.value = action.value;\n        }\n    }\n    syncFieldPositionsWithItems(root);\n};\n\nconst write$8 = createRoute({\n    DID_SET_DISABLED: didSetDisabled,\n    DID_ADD_ITEM: didAddItem,\n    DID_LOAD_ITEM: didLoadItem$1,\n    DID_REMOVE_ITEM: didRemoveItem,\n    DID_DEFINE_VALUE: didDefineValue,\n    DID_PREPARE_OUTPUT: didPrepareOutput,\n    DID_REORDER_ITEMS: didReorderItems,\n    DID_SORT_ITEMS: didReorderItems,\n});\n\nconst data = createView({\n    tag: 'fieldset',\n    name: 'data',\n    create: create$c,\n    write: write$8,\n    ignoreRect: true,\n});\n\nconst getRootNode = element => ('getRootNode' in element ? element.getRootNode() : document);\n\nconst images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\nconst text$1 = ['css', 'csv', 'html', 'txt'];\nconst map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip',\n};\n\nconst guesstimateMimeType = (extension = '') => {\n    extension = extension.toLowerCase();\n    if (images.includes(extension)) {\n        return (\n            'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension)\n        );\n    }\n    if (text$1.includes(extension)) {\n        return 'text/' + extension;\n    }\n\n    return map[extension] || '';\n};\n\nconst requestDataTransferItems = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)\n        const links = getLinks(dataTransfer);\n        if (links.length && !hasFiles(dataTransfer)) {\n            return resolve(links);\n        }\n        // try to get files from the transfer\n        getFiles(dataTransfer).then(resolve);\n    });\n\n/**\n * Test if datatransfer has files\n */\nconst hasFiles = dataTransfer => {\n    if (dataTransfer.files) return dataTransfer.files.length > 0;\n    return false;\n};\n\n/**\n * Extracts files from a DataTransfer object\n */\nconst getFiles = dataTransfer =>\n    new Promise((resolve, reject) => {\n        // get the transfer items as promises\n        const promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : [])\n\n            // only keep file system items (files and directories)\n            .filter(item => isFileSystemItem(item))\n\n            // map each item to promise\n            .map(item => getFilesFromItem(item));\n\n        // if is empty, see if we can extract some info from the files property as a fallback\n        if (!promisedFiles.length) {\n            // TODO: test for directories (should not be allowed)\n            // Use FileReader, problem is that the files property gets lost in the process\n            resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n            return;\n        }\n\n        // done!\n        Promise.all(promisedFiles)\n            .then(returnedFileGroups => {\n                // flatten groups\n                const files = [];\n                returnedFileGroups.forEach(group => {\n                    files.push.apply(files, group);\n                });\n\n                // done (filter out empty files)!\n                resolve(\n                    files\n                        .filter(file => file)\n                        .map(file => {\n                            if (!file._relativePath) file._relativePath = file.webkitRelativePath;\n                            return file;\n                        })\n                );\n            })\n            .catch(console.error);\n    });\n\nconst isFileSystemItem = item => {\n    if (isEntry(item)) {\n        const entry = getAsEntry(item);\n        if (entry) {\n            return entry.isFile || entry.isDirectory;\n        }\n    }\n    return item.kind === 'file';\n};\n\nconst getFilesFromItem = item =>\n    new Promise((resolve, reject) => {\n        if (isDirectoryEntry(item)) {\n            getFilesInDirectory(getAsEntry(item))\n                .then(resolve)\n                .catch(reject);\n            return;\n        }\n\n        resolve([item.getAsFile()]);\n    });\n\nconst getFilesInDirectory = entry =>\n    new Promise((resolve, reject) => {\n        const files = [];\n\n        // the total entries to read\n        let dirCounter = 0;\n        let fileCounter = 0;\n\n        const resolveIfDone = () => {\n            if (fileCounter === 0 && dirCounter === 0) {\n                resolve(files);\n            }\n        };\n\n        // the recursive function\n        const readEntries = dirEntry => {\n            dirCounter++;\n\n            const directoryReader = dirEntry.createReader();\n\n            // directories are returned in batches, we need to process all batches before we're done\n            const readBatch = () => {\n                directoryReader.readEntries(entries => {\n                    if (entries.length === 0) {\n                        dirCounter--;\n                        resolveIfDone();\n                        return;\n                    }\n\n                    entries.forEach(entry => {\n                        // recursively read more directories\n                        if (entry.isDirectory) {\n                            readEntries(entry);\n                        } else {\n                            // read as file\n                            fileCounter++;\n\n                            entry.file(file => {\n                                const correctedFile = correctMissingFileType(file);\n                                if (entry.fullPath) correctedFile._relativePath = entry.fullPath;\n                                files.push(correctedFile);\n                                fileCounter--;\n                                resolveIfDone();\n                            });\n                        }\n                    });\n\n                    // try to get next batch of files\n                    readBatch();\n                }, reject);\n            };\n\n            // read first batch of files\n            readBatch();\n        };\n\n        // go!\n        readEntries(entry);\n    });\n\nconst correctMissingFileType = file => {\n    if (file.type.length) return file;\n    const date = file.lastModifiedDate;\n    const name = file.name;\n    const type = guesstimateMimeType(getExtensionFromFilename(file.name));\n    if (!type.length) return file;\n    file = file.slice(0, file.size, type);\n    file.name = name;\n    file.lastModifiedDate = date;\n    return file;\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n\nconst isEntry = item => 'webkitGetAsEntry' in item;\n\nconst getAsEntry = item => item.webkitGetAsEntry();\n\n/**\n * Extracts links from a DataTransfer object\n */\nconst getLinks = dataTransfer => {\n    let links = [];\n    try {\n        // look in meta data property\n        links = getLinksFromTransferMetaData(dataTransfer);\n        if (links.length) {\n            return links;\n        }\n        links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {\n        // nope nope nope (probably IE trouble)\n    }\n    return links;\n};\n\nconst getLinksFromTransferURLData = dataTransfer => {\n    let data = dataTransfer.getData('url');\n    if (typeof data === 'string' && data.length) {\n        return [data];\n    }\n    return [];\n};\n\nconst getLinksFromTransferMetaData = dataTransfer => {\n    let data = dataTransfer.getData('text/html');\n    if (typeof data === 'string' && data.length) {\n        const matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n        if (matches) {\n            return [matches[1]];\n        }\n    }\n    return [];\n};\n\nconst dragNDropObservers = [];\n\nconst eventPosition = e => ({\n    pageLeft: e.pageX,\n    pageTop: e.pageY,\n    scopeLeft: e.offsetX || e.layerX,\n    scopeTop: e.offsetY || e.layerY,\n});\n\nconst createDragNDropClient = (element, scopeToObserve, filterElement) => {\n    const observer = getDragNDropObserver(scopeToObserve);\n\n    const client = {\n        element,\n        filterElement,\n        state: null,\n        ondrop: () => {},\n        onenter: () => {},\n        ondrag: () => {},\n        onexit: () => {},\n        onload: () => {},\n        allowdrop: () => {},\n    };\n\n    client.destroy = observer.addListener(client);\n\n    return client;\n};\n\nconst getDragNDropObserver = element => {\n    // see if already exists, if so, return\n    const observer = dragNDropObservers.find(item => item.element === element);\n    if (observer) {\n        return observer;\n    }\n\n    // create new observer, does not yet exist for this element\n    const newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n};\n\nconst createDragNDropObserver = element => {\n    const clients = [];\n\n    const routes = {\n        dragenter,\n        dragover,\n        dragleave,\n        drop,\n    };\n\n    const handlers = {};\n\n    forin(routes, (event, createHandler) => {\n        handlers[event] = createHandler(element, clients);\n        element.addEventListener(event, handlers[event], false);\n    });\n\n    const observer = {\n        element,\n        addListener: client => {\n            // add as client\n            clients.push(client);\n\n            // return removeListener function\n            return () => {\n                // remove client\n                clients.splice(clients.indexOf(client), 1);\n\n                // if no more clients, clean up observer\n                if (clients.length === 0) {\n                    dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n\n                    forin(routes, event => {\n                        element.removeEventListener(event, handlers[event], false);\n                    });\n                }\n            };\n        },\n    };\n\n    return observer;\n};\n\nconst elementFromPoint = (root, point) => {\n    if (!('elementFromPoint' in root)) {\n        root = document;\n    }\n    return root.elementFromPoint(point.x, point.y);\n};\n\nconst isEventTarget = (e, target) => {\n    // get root\n    const root = getRootNode(target);\n\n    // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n    const elementAtPosition = elementFromPoint(root, {\n        x: e.pageX - window.pageXOffset,\n        y: e.pageY - window.pageYOffset,\n    });\n\n    // test if target is the element or if one of its children is\n    return elementAtPosition === target || target.contains(elementAtPosition);\n};\n\nlet initialTarget = null;\n\nconst setDropEffect = (dataTransfer, effect) => {\n    // is in try catch as IE11 will throw error if not\n    try {\n        dataTransfer.dropEffect = effect;\n    } catch (e) {}\n};\n\nconst dragenter = (root, clients) => e => {\n    e.preventDefault();\n\n    initialTarget = e.target;\n\n    clients.forEach(client => {\n        const { element, onenter } = client;\n\n        if (isEventTarget(e, element)) {\n            client.state = 'enter';\n\n            // fire enter event\n            onenter(eventPosition(e));\n        }\n    });\n};\n\nconst dragover = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        let overDropTarget = false;\n\n        clients.some(client => {\n            const { filterElement, element, onenter, onexit, ondrag, allowdrop } = client;\n\n            // by default we can drop\n            setDropEffect(dataTransfer, 'copy');\n\n            // allow transfer of these items\n            const allowsTransfer = allowdrop(items);\n\n            // only used when can be dropped on page\n            if (!allowsTransfer) {\n                setDropEffect(dataTransfer, 'none');\n                return;\n            }\n\n            // targetting this client\n            if (isEventTarget(e, element)) {\n                overDropTarget = true;\n\n                // had no previous state, means we are entering this client\n                if (client.state === null) {\n                    client.state = 'enter';\n                    onenter(eventPosition(e));\n                    return;\n                }\n\n                // now over element (no matter if it allows the drop or not)\n                client.state = 'over';\n\n                // needs to allow transfer\n                if (filterElement && !allowsTransfer) {\n                    setDropEffect(dataTransfer, 'none');\n                    return;\n                }\n\n                // dragging\n                ondrag(eventPosition(e));\n            } else {\n                // should be over an element to drop\n                if (filterElement && !overDropTarget) {\n                    setDropEffect(dataTransfer, 'none');\n                }\n\n                // might have just left this client?\n                if (client.state) {\n                    client.state = null;\n                    onexit(eventPosition(e));\n                }\n            }\n        });\n    });\n};\n\nconst drop = (root, clients) => e => {\n    e.preventDefault();\n\n    const dataTransfer = e.dataTransfer;\n\n    requestDataTransferItems(dataTransfer).then(items => {\n        clients.forEach(client => {\n            const { filterElement, element, ondrop, onexit, allowdrop } = client;\n\n            client.state = null;\n\n            // if we're filtering on element we need to be over the element to drop\n            if (filterElement && !isEventTarget(e, element)) return;\n\n            // no transfer for this client\n            if (!allowdrop(items)) return onexit(eventPosition(e));\n\n            // we can drop these items on this client\n            ondrop(eventPosition(e), items);\n        });\n    });\n};\n\nconst dragleave = (root, clients) => e => {\n    if (initialTarget !== e.target) {\n        return;\n    }\n\n    clients.forEach(client => {\n        const { onexit } = client;\n\n        client.state = null;\n\n        onexit(eventPosition(e));\n    });\n};\n\nconst createHopper = (scope, validateItems, options) => {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper');\n\n    // shortcuts\n    const { catchesDropsOnPage, requiresDropOnElement, filterItems = items => items } = options;\n\n    // create a dnd client\n    const client = createDragNDropClient(\n        scope,\n        catchesDropsOnPage ? document.documentElement : scope,\n        requiresDropOnElement\n    );\n\n    // current client state\n    let lastState = '';\n    let currentState = '';\n\n    // determines if a file may be dropped\n    client.allowdrop = items => {\n        // TODO: if we can, throw error to indicate the items cannot by dropped\n\n        return validateItems(filterItems(items));\n    };\n\n    client.ondrop = (position, items) => {\n        const filteredItems = filterItems(items);\n\n        if (!validateItems(filteredItems)) {\n            api.ondragend(position);\n            return;\n        }\n\n        currentState = 'drag-drop';\n\n        api.onload(filteredItems, position);\n    };\n\n    client.ondrag = position => {\n        api.ondrag(position);\n    };\n\n    client.onenter = position => {\n        currentState = 'drag-over';\n\n        api.ondragstart(position);\n    };\n\n    client.onexit = position => {\n        currentState = 'drag-exit';\n\n        api.ondragend(position);\n    };\n\n    const api = {\n        updateHopperState: () => {\n            if (lastState !== currentState) {\n                scope.dataset.hopperState = currentState;\n                lastState = currentState;\n            }\n        },\n        onload: () => {},\n        ondragstart: () => {},\n        ondrag: () => {},\n        ondragend: () => {},\n        destroy: () => {\n            // destroy client\n            client.destroy();\n        },\n    };\n\n    return api;\n};\n\nlet listening = false;\nconst listeners$1 = [];\n\nconst handlePaste = e => {\n    // if is pasting in input or textarea and the target is outside of a filepond scope, ignore\n    const activeEl = document.activeElement;\n    if (activeEl && /textarea|input/i.test(activeEl.nodeName)) {\n        // test textarea or input is contained in filepond root\n        let inScope = false;\n        let element = activeEl;\n        while (element !== document.body) {\n            if (element.classList.contains('filepond--root')) {\n                inScope = true;\n                break;\n            }\n            element = element.parentNode;\n        }\n\n        if (!inScope) return;\n    }\n\n    requestDataTransferItems(e.clipboardData).then(files => {\n        // no files received\n        if (!files.length) {\n            return;\n        }\n\n        // notify listeners of received files\n        listeners$1.forEach(listener => listener(files));\n    });\n};\n\nconst listen = cb => {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n        return;\n    }\n\n    // add initial listener\n    listeners$1.push(cb);\n\n    // setup paste listener for entire page\n    if (listening) {\n        return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n};\n\nconst unlisten = listener => {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener));\n\n    // clean up\n    if (listeners$1.length === 0) {\n        document.removeEventListener('paste', handlePaste);\n        listening = false;\n    }\n};\n\nconst createPaster = () => {\n    const cb = files => {\n        api.onload(files);\n    };\n\n    const api = {\n        destroy: () => {\n            unlisten(cb);\n        },\n        onload: () => {},\n    };\n\n    listen(cb);\n\n    return api;\n};\n\n/**\n * Creates the file view\n */\nconst create$d = ({ root, props }) => {\n    root.element.id = `filepond--assistant-${props.id}`;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n};\n\nlet addFilesNotificationTimeout = null;\nlet notificationClearTimeout = null;\n\nconst filenames = [];\n\nconst assist = (root, message) => {\n    root.element.textContent = message;\n};\n\nconst clear$1 = root => {\n    root.element.textContent = '';\n};\n\nconst listModified = (root, filename, label) => {\n    const total = root.query('GET_TOTAL_ITEMS');\n    assist(\n        root,\n        `${label} ${filename}, ${total} ${\n            total === 1\n                ? root.query('GET_LABEL_FILE_COUNT_SINGULAR')\n                : root.query('GET_LABEL_FILE_COUNT_PLURAL')\n        }`\n    );\n\n    // clear group after set amount of time so the status is not read twice\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(() => {\n        clear$1(root);\n    }, 1500);\n};\n\nconst isUsingFilePond = root => root.element.parentNode.contains(document.activeElement);\n\nconst itemAdded = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    root.element.textContent = '';\n    const item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(() => {\n        listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n        filenames.length = 0;\n    }, 750);\n};\n\nconst itemRemoved = ({ root, action }) => {\n    if (!isUsingFilePond(root)) {\n        return;\n    }\n\n    const item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n};\n\nconst itemProcessed = ({ root, action }) => {\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemProcessedUndo = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n    const label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n\n    assist(root, `${filename} ${label}`);\n};\n\nconst itemError = ({ root, action }) => {\n    const item = root.query('GET_ITEM', action.id);\n    const filename = item.filename;\n\n    // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, `${action.status.main} ${filename} ${action.status.sub}`);\n};\n\nconst assistant = createView({\n    create: create$d,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n        DID_LOAD_ITEM: itemAdded,\n        DID_REMOVE_ITEM: itemRemoved,\n        DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n\n        DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n        DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n\n        DID_THROW_ITEM_REMOVE_ERROR: itemError,\n        DID_THROW_ITEM_LOAD_ERROR: itemError,\n        DID_THROW_ITEM_INVALID: itemError,\n        DID_THROW_ITEM_PROCESSING_ERROR: itemError,\n    }),\n    tag: 'span',\n    name: 'assistant',\n});\n\nconst toCamels = (string, separator = '-') =>\n    string.replace(new RegExp(`${separator}.`, 'g'), sub => sub.charAt(1).toUpperCase());\n\nconst debounce = (func, interval = 16, immidiateOnly = true) => {\n    let last = Date.now();\n    let timeout = null;\n\n    return (...args) => {\n        clearTimeout(timeout);\n\n        const dist = Date.now() - last;\n\n        const fn = () => {\n            last = Date.now();\n            func(...args);\n        };\n\n        if (dist < interval) {\n            // we need to delay by the difference between interval and dist\n            // for example: if distance is 10 ms and interval is 16 ms,\n            // we need to wait an additional 6ms before calling the function)\n            if (!immidiateOnly) {\n                timeout = setTimeout(fn, interval - dist);\n            }\n        } else {\n            // go!\n            fn();\n        }\n    };\n};\n\nconst MAX_FILES_LIMIT = 1000000;\n\nconst prevent = e => e.preventDefault();\n\nconst create$e = ({ root, props }) => {\n    // Add id\n    const id = root.query('GET_ID');\n    if (id) {\n        root.element.id = id;\n    }\n\n    // Add className\n    const className = root.query('GET_CLASS_NAME');\n    if (className) {\n        className\n            .split(' ')\n            .filter(name => name.length)\n            .forEach(name => {\n                root.element.classList.add(name);\n            });\n    }\n\n    // Field label\n    root.ref.label = root.appendChildView(\n        root.createChildView(dropLabel, {\n            ...props,\n            translateY: null,\n            caption: root.query('GET_LABEL_IDLE'),\n        })\n    );\n\n    // List of items\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, { translateY: null }));\n\n    // Background panel\n    root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'panel-root' }));\n\n    // Assistant notifies assistive tech when content changes\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, { ...props }));\n\n    // Data\n    root.ref.data = root.appendChildView(root.createChildView(data, { ...props }));\n\n    // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure);\n\n    // information on the root height or fixed height status\n    root.ref.bounds = null;\n\n    // apply initial style properties\n    root.query('GET_STYLES')\n        .filter(style => !isEmpty(style.value))\n        .map(({ name, value }) => {\n            root.element.dataset[name] = value;\n        });\n\n    // determine if width changed\n    root.ref.widthPrevious = null;\n    root.ref.widthUpdated = debounce(() => {\n        root.ref.updateHistory = [];\n        root.dispatch('DID_RESIZE_ROOT');\n    }, 250);\n\n    // history of updates\n    root.ref.previousAspectRatio = null;\n    root.ref.updateHistory = [];\n\n    // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)\n    const canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;\n    const hasPointerEvents = 'PointerEvent' in window;\n    if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {\n        root.element.addEventListener('touchmove', prevent, { passive: false });\n        root.element.addEventListener('gesturestart', prevent);\n    }\n\n    // add credits\n    const credits = root.query('GET_CREDITS');\n    const hasCredits = credits.length === 2;\n    if (hasCredits) {\n        const frag = document.createElement('a');\n        frag.className = 'filepond--credits';\n        frag.setAttribute('aria-hidden', 'true');\n        frag.href = credits[0];\n        frag.tabindex = -1;\n        frag.target = '_blank';\n        frag.rel = 'noopener noreferrer';\n        frag.textContent = credits[1];\n        root.element.appendChild(frag);\n        root.ref.credits = frag;\n    }\n};\n\nconst write$9 = ({ root, props, actions }) => {\n    // route actions\n    route$5({ root, props, actions });\n\n    // apply style properties\n    actions\n        .filter(action => /^DID_SET_STYLE_/.test(action.type))\n        .filter(action => !isEmpty(action.data.value))\n        .map(({ type, data }) => {\n            const name = toCamels(type.substring(8).toLowerCase(), '_');\n            root.element.dataset[name] = data.value;\n            root.invalidateLayout();\n        });\n\n    if (root.rect.element.hidden) return;\n\n    if (root.rect.element.width !== root.ref.widthPrevious) {\n        root.ref.widthPrevious = root.rect.element.width;\n        root.ref.widthUpdated();\n    }\n\n    // get box bounds, we do this only once\n    let bounds = root.ref.bounds;\n    if (!bounds) {\n        bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);\n\n        // destroy measure element\n        root.element.removeChild(root.ref.measure);\n        root.ref.measure = null;\n    }\n\n    // get quick references to various high level parts of the upload tool\n    const { hopper, label, list, panel } = root.ref;\n\n    // sets correct state to hopper scope\n    if (hopper) {\n        hopper.updateHopperState();\n    }\n\n    // bool to indicate if we're full or not\n    const aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    const isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    const maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    const atMaxCapacity = totalItems === maxItems;\n\n    // action used to add item\n    const addAction = actions.find(action => action.type === 'DID_ADD_ITEM');\n\n    // if reached max capacity and we've just reached it\n    if (atMaxCapacity && addAction) {\n        // get interaction type\n        const interactionMethod = addAction.data.interactionMethod;\n\n        // hide label\n        label.opacity = 0;\n\n        if (isMultiItem) {\n            label.translateY = -40;\n        } else {\n            if (interactionMethod === InteractionMethod.API) {\n                label.translateX = 40;\n            } else if (interactionMethod === InteractionMethod.BROWSE) {\n                label.translateY = 40;\n            } else {\n                label.translateY = 30;\n            }\n        }\n    } else if (!atMaxCapacity) {\n        label.opacity = 1;\n        label.translateX = 0;\n        label.translateY = 0;\n    }\n\n    const listItemMargin = calculateListItemMargin(root);\n\n    const listHeight = calculateListHeight(root);\n\n    const labelHeight = label.rect.element.height;\n    const currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n\n    const listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    const listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n\n    const visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    const boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;\n\n    // link list to label bottom position\n    list.translateY =\n        Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n        // fixed aspect ratio\n\n        // calculate height based on width\n        const width = root.rect.element.width;\n        const height = width * aspectRatio;\n\n        // clear history if aspect ratio has changed\n        if (aspectRatio !== root.ref.previousAspectRatio) {\n            root.ref.previousAspectRatio = aspectRatio;\n            root.ref.updateHistory = [];\n        }\n\n        // remember this width\n        const history = root.ref.updateHistory;\n        history.push(width);\n\n        const MAX_BOUNCES = 2;\n        if (history.length > MAX_BOUNCES * 2) {\n            const l = history.length;\n            const bottom = l - 10;\n            let bounces = 0;\n            for (let i = l; i >= bottom; i--) {\n                if (history[i] === history[i - 2]) {\n                    bounces++;\n                }\n\n                if (bounces >= MAX_BOUNCES) {\n                    // dont adjust height\n                    return;\n                }\n            }\n        }\n\n        // fix height of panel so it adheres to aspect ratio\n        panel.scalable = false;\n        panel.height = height;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            height -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = height;\n    } else if (bounds.fixedHeight) {\n        // fixed height\n\n        // fix height of panel\n        panel.scalable = false;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            bounds.fixedHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height\n        if (listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // no need to set container bounds as these are handles by CSS fixed height\n    } else if (bounds.cappedHeight) {\n        // max-height\n\n        // not a fixed height panel\n        const isCappedHeight = visualHeight >= bounds.cappedHeight;\n        const panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n        panel.scalable = true;\n        panel.height = isCappedHeight\n            ? panelHeight\n            : panelHeight - listItemMargin.top - listItemMargin.bottom;\n\n        // available height for list\n        const listAvailableHeight =\n            // the height of the panel minus the label height\n            panelHeight -\n            currentLabelHeight -\n            // the room we leave open between the end of the list and the panel bottom\n            (listMarginBottom - listItemMargin.bottom) -\n            // if we're full we need to leave some room between the top of the panel and the list\n            (atMaxCapacity ? listMarginTop : 0);\n\n        // set list height (if is overflowing)\n        if (visualHeight > bounds.cappedHeight && listHeight.visual > listAvailableHeight) {\n            list.overflow = listAvailableHeight;\n        } else {\n            list.overflow = null;\n        }\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.min(\n            bounds.cappedHeight,\n            boundsHeight - listItemMargin.top - listItemMargin.bottom\n        );\n    } else {\n        // flexible height\n\n        // not a fixed height panel\n        const itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n        panel.scalable = true;\n        panel.height = Math.max(labelHeight, visualHeight - itemMargin);\n\n        // set container bounds (so pushes siblings downwards)\n        root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n\n    // move credits to bottom\n    if (root.ref.credits && panel.heightCurrent)\n        root.ref.credits.style.transform = `translateY(${panel.heightCurrent}px)`;\n};\n\nconst calculateListItemMargin = root => {\n    const item = root.ref.list.childViews[0].childViews[0];\n    return item\n        ? {\n              top: item.rect.element.marginTop,\n              bottom: item.rect.element.marginBottom,\n          }\n        : {\n              top: 0,\n              bottom: 0,\n          };\n};\n\nconst calculateListHeight = root => {\n    let visual = 0;\n    let bounds = 0;\n\n    // get file list reference\n    const scrollList = root.ref.list;\n    const itemList = scrollList.childViews[0];\n    const visibleChildren = itemList.childViews.filter(child => child.rect.element.height);\n    const children = root\n        .query('GET_ACTIVE_ITEMS')\n        .map(item => visibleChildren.find(child => child.id === item.id))\n        .filter(item => item);\n\n    // no children, done!\n    if (children.length === 0) return { visual, bounds };\n\n    const horizontalSpace = itemList.rect.element.width;\n    const dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);\n\n    const childRect = children[0].rect.element;\n\n    const itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    const itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n\n    const itemWidth = childRect.width + itemHorizontalMargin;\n    const itemHeight = childRect.height + itemVerticalMargin;\n\n    const newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n    const removedItem = children.find(child => child.markedForRemoval && child.opacity < 0.45)\n        ? -1\n        : 0;\n    const verticalItemCount = children.length + newItem + removedItem;\n    const itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);\n\n    // stack\n    if (itemsPerRow === 1) {\n        children.forEach(item => {\n            const height = item.rect.element.height + itemVerticalMargin;\n            bounds += height;\n            visual += height * item.opacity;\n        });\n    }\n    // grid\n    else {\n        bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n        visual = bounds;\n    }\n\n    return { visual, bounds };\n};\n\nconst calculateRootBoundingBoxHeight = root => {\n    const height = root.ref.measureHeight || null;\n    const cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    const fixedHeight = height === 0 ? null : height;\n\n    return {\n        cappedHeight,\n        fixedHeight,\n    };\n};\n\nconst exceedsMaxFiles = (root, items) => {\n    const allowReplace = root.query('GET_ALLOW_REPLACE');\n    const allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    const totalItems = root.query('GET_TOTAL_ITEMS');\n    let maxItems = root.query('GET_MAX_FILES');\n\n    // total amount of items being dragged\n    const totalBrowseItems = items.length;\n\n    // if does not allow multiple items and dragging more than one item\n    if (!allowMultiple && totalBrowseItems > 1) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    // limit max items to one if not allowed to drop multiple items\n    maxItems = allowMultiple ? maxItems : 1;\n\n    if (!allowMultiple && allowReplace) {\n        // There is only one item, so there is room to replace or add an item\n        return false;\n    }\n\n    // no more room?\n    const hasMaxItems = isInt(maxItems);\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n        root.dispatch('DID_THROW_MAX_FILES', {\n            source: items,\n            error: createResponse('warning', 0, 'Max files'),\n        });\n        return true;\n    }\n\n    return false;\n};\n\nconst getDragIndex = (list, children, position) => {\n    const itemList = list.childViews[0];\n    return getItemIndexByPosition(itemList, children, {\n        left: position.scopeLeft - itemList.rect.element.left,\n        top:\n            position.scopeTop -\n            (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop),\n    });\n};\n\n/**\n * Enable or disable file drop functionality\n */\nconst toggleDrop = root => {\n    const isAllowed = root.query('GET_ALLOW_DROP');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.hopper) {\n        const hopper = createHopper(\n            root.element,\n            items => {\n                // allow quick validation of dropped items\n                const beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || (() => true);\n\n                // all items should be validated by all filters as valid\n                const dropValidation = root.query('GET_DROP_VALIDATION');\n                return dropValidation\n                    ? items.every(\n                          item =>\n                              applyFilters('ALLOW_HOPPER_ITEM', item, {\n                                  query: root.query,\n                              }).every(result => result === true) && beforeDropFile(item)\n                      )\n                    : true;\n            },\n            {\n                filterItems: items => {\n                    const ignoredFiles = root.query('GET_IGNORED_FILES');\n                    return items.filter(item => {\n                        if (isFile(item)) {\n                            return !ignoredFiles.includes(item.name.toLowerCase());\n                        }\n                        return true;\n                    });\n                },\n                catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n                requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT'),\n            }\n        );\n\n        hopper.onload = (items, position) => {\n            // get item children elements and sort based on list sort\n            const list = root.ref.list.childViews[0];\n            const visibleChildren = list.childViews.filter(child => child.rect.element.height);\n            const children = root\n                .query('GET_ACTIVE_ITEMS')\n                .map(item => visibleChildren.find(child => child.id === item.id))\n                .filter(item => item);\n\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // go\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: getDragIndex(root.ref.list, children, position),\n                    interactionMethod: InteractionMethod.DROP,\n                });\n            });\n\n            root.dispatch('DID_DROP', { position });\n\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        hopper.ondragstart = position => {\n            root.dispatch('DID_START_DRAG', { position });\n        };\n\n        hopper.ondrag = debounce(position => {\n            root.dispatch('DID_DRAG', { position });\n        });\n\n        hopper.ondragend = position => {\n            root.dispatch('DID_END_DRAG', { position });\n        };\n\n        root.ref.hopper = hopper;\n\n        root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!enabled && root.ref.hopper) {\n        root.ref.hopper.destroy();\n        root.ref.hopper = null;\n        root.removeChildView(root.ref.drip);\n    }\n};\n\n/**\n * Enable or disable browse functionality\n */\nconst toggleBrowse = (root, props) => {\n    const isAllowed = root.query('GET_ALLOW_BROWSE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.browser) {\n        root.ref.browser = root.appendChildView(\n            root.createChildView(browser, {\n                ...props,\n                onload: items => {\n                    applyFilterChain('ADD_ITEMS', items, {\n                        dispatch: root.dispatch,\n                    }).then(queue => {\n                        // these files don't fit so stop here\n                        if (exceedsMaxFiles(root, queue)) return false;\n\n                        // add items!\n                        root.dispatch('ADD_ITEMS', {\n                            items: queue,\n                            index: -1,\n                            interactionMethod: InteractionMethod.BROWSE,\n                        });\n                    });\n                },\n            }),\n            0\n        );\n    } else if (!enabled && root.ref.browser) {\n        root.removeChildView(root.ref.browser);\n        root.ref.browser = null;\n    }\n};\n\n/**\n * Enable or disable paste functionality\n */\nconst togglePaste = root => {\n    const isAllowed = root.query('GET_ALLOW_PASTE');\n    const isDisabled = root.query('GET_DISABLED');\n    const enabled = isAllowed && !isDisabled;\n    if (enabled && !root.ref.paster) {\n        root.ref.paster = createPaster();\n        root.ref.paster.onload = items => {\n            applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(queue => {\n                // these files don't fit so stop here\n                if (exceedsMaxFiles(root, queue)) return false;\n\n                // add items!\n                root.dispatch('ADD_ITEMS', {\n                    items: queue,\n                    index: -1,\n                    interactionMethod: InteractionMethod.PASTE,\n                });\n            });\n        };\n    } else if (!enabled && root.ref.paster) {\n        root.ref.paster.destroy();\n        root.ref.paster = null;\n    }\n};\n\n/**\n * Route actions\n */\nconst route$5 = createRoute({\n    DID_SET_ALLOW_BROWSE: ({ root, props }) => {\n        toggleBrowse(root, props);\n    },\n    DID_SET_ALLOW_DROP: ({ root }) => {\n        toggleDrop(root);\n    },\n    DID_SET_ALLOW_PASTE: ({ root }) => {\n        togglePaste(root);\n    },\n    DID_SET_DISABLED: ({ root, props }) => {\n        toggleDrop(root);\n        togglePaste(root);\n        toggleBrowse(root, props);\n        const isDisabled = root.query('GET_DISABLED');\n        if (isDisabled) {\n            root.element.dataset.disabled = 'disabled';\n        } else {\n            // delete root.element.dataset.disabled; <= this does not work on iOS 10\n            root.element.removeAttribute('data-disabled');\n        }\n    },\n});\n\nconst root = createView({\n    name: 'root',\n    read: ({ root }) => {\n        if (root.ref.measure) {\n            root.ref.measureHeight = root.ref.measure.offsetHeight;\n        }\n    },\n    create: create$e,\n    write: write$9,\n    destroy: ({ root }) => {\n        if (root.ref.paster) {\n            root.ref.paster.destroy();\n        }\n        if (root.ref.hopper) {\n            root.ref.hopper.destroy();\n        }\n        root.element.removeEventListener('touchmove', prevent);\n        root.element.removeEventListener('gesturestart', prevent);\n    },\n    mixins: {\n        styles: ['height'],\n    },\n});\n\n// creates the app\nconst createApp = (initialOptions = {}) => {\n    // let element\n    let originalElement = null;\n\n    // get default options\n    const defaultOptions = getOptions();\n\n    // create the data store, this will contain all our app info\n    const store = createStore(\n        // initial state (should be serializable)\n        createInitialState(defaultOptions),\n\n        // queries\n        [queries, createOptionQueries(defaultOptions)],\n\n        // action handlers\n        [actions, createOptionActions(defaultOptions)]\n    );\n\n    // set initial options\n    store.dispatch('SET_OPTIONS', { options: initialOptions });\n\n    // kick thread if visibility changes\n    const visibilityHandler = () => {\n        if (document.hidden) return;\n        store.dispatch('KICK');\n    };\n    document.addEventListener('visibilitychange', visibilityHandler);\n\n    // re-render on window resize start and finish\n    let resizeDoneTimer = null;\n    let isResizing = false;\n    let isResizingHorizontally = false;\n    let initialWindowWidth = null;\n    let currentWindowWidth = null;\n    const resizeHandler = () => {\n        if (!isResizing) {\n            isResizing = true;\n        }\n        clearTimeout(resizeDoneTimer);\n        resizeDoneTimer = setTimeout(() => {\n            isResizing = false;\n            initialWindowWidth = null;\n            currentWindowWidth = null;\n            if (isResizingHorizontally) {\n                isResizingHorizontally = false;\n                store.dispatch('DID_STOP_RESIZE');\n            }\n        }, 500);\n    };\n    window.addEventListener('resize', resizeHandler);\n\n    // render initial view\n    const view = root(store, { id: getUniqueId() });\n\n    //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n    let isResting = false;\n    let isHidden = false;\n\n    const readWriteApi = {\n        // necessary for update loop\n\n        /**\n         * Reads from dom (never call manually)\n         * @private\n         */\n        _read: () => {\n            // test if we're resizing horizontally\n            // TODO: see if we can optimize this by measuring root rect\n            if (isResizing) {\n                currentWindowWidth = window.innerWidth;\n                if (!initialWindowWidth) {\n                    initialWindowWidth = currentWindowWidth;\n                }\n\n                if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n                    store.dispatch('DID_START_RESIZE');\n                    isResizingHorizontally = true;\n                }\n            }\n\n            if (isHidden && isResting) {\n                // test if is no longer hidden\n                isResting = view.element.offsetParent === null;\n            }\n\n            // if resting, no need to read as numbers will still all be correct\n            if (isResting) return;\n\n            // read view data\n            view._read();\n\n            // if is hidden we need to know so we exit rest mode when revealed\n            isHidden = view.rect.element.hidden;\n        },\n\n        /**\n         * Writes to dom (never call manually)\n         * @private\n         */\n        _write: ts => {\n            // get all actions from store\n            const actions = store\n                .processActionQueue()\n\n                // filter out set actions (these will automatically trigger DID_SET)\n                .filter(action => !/^SET_/.test(action.type));\n\n            // if was idling and no actions stop here\n            if (isResting && !actions.length) return;\n\n            // some actions might trigger events\n            routeActionsToEvents(actions);\n\n            // update the view\n            isResting = view._write(ts, actions, isResizingHorizontally);\n\n            // will clean up all archived items\n            removeReleasedItems(store.query('GET_ITEMS'));\n\n            // now idling\n            if (isResting) {\n                store.processDispatchQueue();\n            }\n        },\n    };\n\n    //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n    const createEvent = name => data => {\n        // create default event\n        const event = {\n            type: name,\n        };\n\n        // no data to add\n        if (!data) {\n            return event;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('error')) {\n            event.error = data.error ? { ...data.error } : null;\n        }\n\n        if (data.status) {\n            event.status = { ...data.status };\n        }\n\n        if (data.file) {\n            event.output = data.file;\n        }\n\n        // only source is available, else add item if possible\n        if (data.source) {\n            event.file = data.source;\n        } else if (data.item || data.id) {\n            const item = data.item ? data.item : store.query('GET_ITEM', data.id);\n            event.file = item ? createItemAPI(item) : null;\n        }\n\n        // map all items in a possible items array\n        if (data.items) {\n            event.items = data.items.map(createItemAPI);\n        }\n\n        // if this is a progress event add the progress amount\n        if (/progress/.test(name)) {\n            event.progress = data.progress;\n        }\n\n        // copy relevant props\n        if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {\n            event.origin = data.origin;\n            event.target = data.target;\n        }\n\n        return event;\n    };\n\n    const eventRoutes = {\n        DID_DESTROY: createEvent('destroy'),\n\n        DID_INIT: createEvent('init'),\n\n        DID_THROW_MAX_FILES: createEvent('warning'),\n\n        DID_INIT_ITEM: createEvent('initfile'),\n        DID_START_ITEM_LOAD: createEvent('addfilestart'),\n        DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n        DID_LOAD_ITEM: createEvent('addfile'),\n\n        DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n\n        DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n\n        DID_PREPARE_OUTPUT: createEvent('preparefile'),\n\n        DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n        DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n        DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n        DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n        DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n        DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n\n        DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n\n        DID_REMOVE_ITEM: createEvent('removefile'),\n\n        DID_UPDATE_ITEMS: createEvent('updatefiles'),\n\n        DID_ACTIVATE_ITEM: createEvent('activatefile'),\n\n        DID_REORDER_ITEMS: createEvent('reorderfiles'),\n    };\n\n    const exposeEvent = event => {\n        // create event object to be dispatched\n        const detail = { pond: exports, ...event };\n        delete detail.type;\n        view.element.dispatchEvent(\n            new CustomEvent(`FilePond:${event.type}`, {\n                // event info\n                detail,\n\n                // event behaviour\n                bubbles: true,\n                cancelable: true,\n                composed: true, // triggers listeners outside of shadow root\n            })\n        );\n\n        // event object to params used for `on()` event handlers and callbacks `oninit()`\n        const params = [];\n\n        // if is possible error event, make it the first param\n        if (event.hasOwnProperty('error')) {\n            params.push(event.error);\n        }\n\n        // file is always section\n        if (event.hasOwnProperty('file')) {\n            params.push(event.file);\n        }\n\n        // append other props\n        const filtered = ['type', 'error', 'file'];\n        Object.keys(event)\n            .filter(key => !filtered.includes(key))\n            .forEach(key => params.push(event[key]));\n\n        // on(type, () => { })\n        exports.fire(event.type, ...params);\n\n        // oninit = () => {}\n        const handler = store.query(`GET_ON${event.type.toUpperCase()}`);\n        if (handler) {\n            handler(...params);\n        }\n    };\n\n    const routeActionsToEvents = actions => {\n        if (!actions.length) return;\n        actions\n            .filter(action => eventRoutes[action.type])\n            .forEach(action => {\n                const routes = eventRoutes[action.type];\n                (Array.isArray(routes) ? routes : [routes]).forEach(route => {\n                    // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init\n                    if (action.type === 'DID_INIT_ITEM') {\n                        exposeEvent(route(action.data));\n                    } else {\n                        setTimeout(() => {\n                            exposeEvent(route(action.data));\n                        }, 0);\n                    }\n                });\n            });\n    };\n\n    //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n    const setOptions = options => store.dispatch('SET_OPTIONS', { options });\n\n    const getFile = query => store.query('GET_ACTIVE_ITEM', query);\n\n    const prepareFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PREPARE', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const addFile = (source, options = {}) =>\n        new Promise((resolve, reject) => {\n            addFiles([{ source, options }], { index: options.index })\n                .then(items => resolve(items && items[0]))\n                .catch(reject);\n        });\n\n    const isFilePondFile = obj => obj.file && obj.id;\n\n    const removeFile = (query, options) => {\n        // if only passed options\n        if (typeof query === 'object' && !isFilePondFile(query) && !options) {\n            options = query;\n            query = undefined;\n        }\n\n        // request item removal\n        store.dispatch('REMOVE_ITEM', { ...options, query });\n\n        // see if item has been removed\n        return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    const addFiles = (...args) =>\n        new Promise((resolve, reject) => {\n            const sources = [];\n            const options = {};\n\n            // user passed a sources array\n            if (isArray(args[0])) {\n                sources.push.apply(sources, args[0]);\n                Object.assign(options, args[1] || {});\n            } else {\n                // user passed sources as arguments, last one might be options object\n                const lastArgument = args[args.length - 1];\n                if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n                    Object.assign(options, args.pop());\n                }\n\n                // add rest to sources\n                sources.push(...args);\n            }\n\n            store.dispatch('ADD_ITEMS', {\n                items: sources,\n                index: options.index,\n                interactionMethod: InteractionMethod.API,\n                success: resolve,\n                failure: reject,\n            });\n        });\n\n    const getFiles = () => store.query('GET_ACTIVE_ITEMS');\n\n    const processFile = query =>\n        new Promise((resolve, reject) => {\n            store.dispatch('REQUEST_ITEM_PROCESSING', {\n                query,\n                success: item => {\n                    resolve(item);\n                },\n                failure: error => {\n                    reject(error);\n                },\n            });\n        });\n\n    const prepareFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        const items = queries.length ? queries : getFiles();\n        return Promise.all(items.map(prepareFile));\n    };\n\n    const processFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n        if (!queries.length) {\n            const files = getFiles().filter(\n                item =>\n                    !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) &&\n                    item.status !== ItemStatus.PROCESSING &&\n                    item.status !== ItemStatus.PROCESSING_COMPLETE &&\n                    item.status !== ItemStatus.PROCESSING_REVERT_ERROR\n            );\n            return Promise.all(files.map(processFile));\n        }\n        return Promise.all(queries.map(processFile));\n    };\n\n    const removeFiles = (...args) => {\n        const queries = Array.isArray(args[0]) ? args[0] : args;\n\n        let options;\n        if (typeof queries[queries.length - 1] === 'object') {\n            options = queries.pop();\n        } else if (Array.isArray(args[0])) {\n            options = args[1];\n        }\n\n        const files = getFiles();\n\n        if (!queries.length) return Promise.all(files.map(file => removeFile(file, options)));\n\n        // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n        const mappedQueries = queries\n            .map(query => (isNumber(query) ? (files[query] ? files[query].id : null) : query))\n            .filter(query => query);\n\n        return mappedQueries.map(q => removeFile(q, options));\n    };\n\n    const exports = {\n        // supports events\n        ...on(),\n\n        // inject private api methods\n        ...readWriteApi,\n\n        // inject all getters and setters\n        ...createOptionAPI(store, defaultOptions),\n\n        /**\n         * Override options defined in options object\n         * @param options\n         */\n        setOptions,\n\n        /**\n         * Load the given file\n         * @param source - the source of the file (either a File, base64 data uri or url)\n         * @param options - object, { index: 0 }\n         */\n        addFile,\n\n        /**\n         * Load the given files\n         * @param sources - the sources of the files to load\n         * @param options - object, { index: 0 }\n         */\n        addFiles,\n\n        /**\n         * Returns the file objects matching the given query\n         * @param query { string, number, null }\n         */\n        getFile,\n\n        /**\n         * Upload file with given name\n         * @param query { string, number, null  }\n         */\n        processFile,\n\n        /**\n         * Request prepare output for file with given name\n         * @param query { string, number, null  }\n         */\n        prepareFile,\n\n        /**\n         * Removes a file by its name\n         * @param query { string, number, null  }\n         */\n        removeFile,\n\n        /**\n         * Moves a file to a new location in the files list\n         */\n        moveFile: (query, index) => store.dispatch('MOVE_ITEM', { query, index }),\n\n        /**\n         * Returns all files (wrapped in public api)\n         */\n        getFiles,\n\n        /**\n         * Starts uploading all files\n         */\n        processFiles,\n\n        /**\n         * Clears all files from the files list\n         */\n        removeFiles,\n\n        /**\n         * Starts preparing output of all files\n         */\n        prepareFiles,\n\n        /**\n         * Sort list of files\n         */\n        sort: compare => store.dispatch('SORT', { compare }),\n\n        /**\n         * Browse the file system for a file\n         */\n        browse: () => {\n            // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n            var input = view.element.querySelector('input[type=file]');\n            if (input) {\n                input.click();\n            }\n        },\n\n        /**\n         * Destroys the app\n         */\n        destroy: () => {\n            // request destruction\n            exports.fire('destroy', view.element);\n\n            // stop active processes (file uploads, fetches, stuff like that)\n            // loop over items and depending on states call abort for ongoing processes\n            store.dispatch('ABORT_ALL');\n\n            // destroy view\n            view._destroy();\n\n            // stop listening to resize\n            window.removeEventListener('resize', resizeHandler);\n\n            // stop listening to the visiblitychange event\n            document.removeEventListener('visibilitychange', visibilityHandler);\n\n            // dispatch destroy\n            store.dispatch('DID_DESTROY');\n        },\n\n        /**\n         * Inserts the plugin before the target element\n         */\n        insertBefore: element => insertBefore(view.element, element),\n\n        /**\n         * Inserts the plugin after the target element\n         */\n        insertAfter: element => insertAfter(view.element, element),\n\n        /**\n         * Appends the plugin to the target element\n         */\n        appendTo: element => element.appendChild(view.element),\n\n        /**\n         * Replaces an element with the app\n         */\n        replaceElement: element => {\n            // insert the app before the element\n            insertBefore(view.element, element);\n\n            // remove the original element\n            element.parentNode.removeChild(element);\n\n            // remember original element\n            originalElement = element;\n        },\n\n        /**\n         * Restores the original element\n         */\n        restoreElement: () => {\n            if (!originalElement) {\n                return; // no element to restore\n            }\n\n            // restore original element\n            insertAfter(originalElement, view.element);\n\n            // remove our element\n            view.element.parentNode.removeChild(view.element);\n\n            // remove reference\n            originalElement = null;\n        },\n\n        /**\n         * Returns true if the app root is attached to given element\n         * @param element\n         */\n        isAttachedTo: element => view.element === element || originalElement === element,\n\n        /**\n         * Returns the root element\n         */\n        element: {\n            get: () => view.element,\n        },\n\n        /**\n         * Returns the current pond status\n         */\n        status: {\n            get: () => store.query('GET_STATUS'),\n        },\n    };\n\n    // Done!\n    store.dispatch('DID_INIT');\n\n    // create actual api object\n    return createObject(exports);\n};\n\nconst createAppObject = (customOptions = {}) => {\n    // default options\n    const defaultOptions = {};\n    forin(getOptions(), (key, value) => {\n        defaultOptions[key] = value[0];\n    });\n\n    // set app options\n    const app = createApp({\n        // default options\n        ...defaultOptions,\n\n        // custom options\n        ...customOptions,\n    });\n\n    // return the plugin instance\n    return app;\n};\n\nconst lowerCaseFirstLetter = string => string.charAt(0).toLowerCase() + string.slice(1);\n\nconst attributeNameToPropertyName = attributeName => toCamels(attributeName.replace(/^data-/, ''));\n\nconst mapObject = (object, propertyMap) => {\n    // remove unwanted\n    forin(propertyMap, (selector, mapping) => {\n        forin(object, (property, value) => {\n            // create regexp shortcut\n            const selectorRegExp = new RegExp(selector);\n\n            // tests if\n            const matches = selectorRegExp.test(property);\n\n            // no match, skip\n            if (!matches) {\n                return;\n            }\n\n            // if there's a mapping, the original property is always removed\n            delete object[property];\n\n            // should only remove, we done!\n            if (mapping === false) {\n                return;\n            }\n\n            // move value to new property\n            if (isString(mapping)) {\n                object[mapping] = value;\n                return;\n            }\n\n            // move to group\n            const group = mapping.group;\n            if (isObject(mapping) && !object[group]) {\n                object[group] = {};\n            }\n\n            object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n        });\n\n        // do submapping\n        if (mapping.mapping) {\n            mapObject(object[mapping.group], mapping.mapping);\n        }\n    });\n};\n\nconst getAttributesAsObject = (node, attributeMapping = {}) => {\n    // turn attributes into object\n    const attributes = [];\n    forin(node.attributes, index => {\n        attributes.push(node.attributes[index]);\n    });\n\n    const output = attributes\n        .filter(attribute => attribute.name)\n        .reduce((obj, attribute) => {\n            const value = attr(node, attribute.name);\n\n            obj[attributeNameToPropertyName(attribute.name)] =\n                value === attribute.name ? true : value;\n            return obj;\n        }, {});\n\n    // do mapping of object properties\n    mapObject(output, attributeMapping);\n\n    return output;\n};\n\nconst createAppAtElement = (element, options = {}) => {\n    // how attributes of the input element are mapped to the options for the plugin\n    const attributeMapping = {\n        // translate to other name\n        '^class$': 'className',\n        '^multiple$': 'allowMultiple',\n        '^capture$': 'captureMethod',\n        '^webkitdirectory$': 'allowDirectoriesOnly',\n\n        // group under single property\n        '^server': {\n            group: 'server',\n            mapping: {\n                '^process': {\n                    group: 'process',\n                },\n                '^revert': {\n                    group: 'revert',\n                },\n                '^fetch': {\n                    group: 'fetch',\n                },\n                '^restore': {\n                    group: 'restore',\n                },\n                '^load': {\n                    group: 'load',\n                },\n            },\n        },\n\n        // don't include in object\n        '^type$': false,\n        '^files$': false,\n    };\n\n    // add additional option translators\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);\n\n    // create final options object by setting options object and then overriding options supplied on element\n    const mergedOptions = {\n        ...options,\n    };\n\n    const attributeOptions = getAttributesAsObject(\n        element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element,\n        attributeMapping\n    );\n\n    // merge with options object\n    Object.keys(attributeOptions).forEach(key => {\n        if (isObject(attributeOptions[key])) {\n            if (!isObject(mergedOptions[key])) {\n                mergedOptions[key] = {};\n            }\n            Object.assign(mergedOptions[key], attributeOptions[key]);\n        } else {\n            mergedOptions[key] = attributeOptions[key];\n        }\n    });\n\n    // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n    mergedOptions.files = (options.files || []).concat(\n        Array.from(element.querySelectorAll('input:not([type=file])')).map(input => ({\n            source: input.value,\n            options: {\n                type: input.dataset.type,\n            },\n        }))\n    );\n\n    // build plugin\n    const app = createAppObject(mergedOptions);\n\n    // add already selected files\n    if (element.files) {\n        Array.from(element.files).forEach(file => {\n            app.addFile(file);\n        });\n    }\n\n    // replace the target element\n    app.replaceElement(element);\n\n    // expose\n    return app;\n};\n\n// if an element is passed, we create the instance at that element, if not, we just create an up object\nconst createApp$1 = (...args) =>\n    isNode(args[0]) ? createAppAtElement(...args) : createAppObject(...args);\n\nconst PRIVATE_METHODS = ['fire', '_read', '_write'];\n\nconst createAppAPI = app => {\n    const api = {};\n\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n\n    return api;\n};\n\n/**\n * Replaces placeholders in given string with replacements\n * @param string - \"Foo {bar}\"\"\n * @param replacements - { \"bar\": 10 }\n */\nconst replaceInString = (string, replacements) =>\n    string.replace(/(?:{([a-zA-Z]+)})/g, (match, group) => replacements[group]);\n\nconst createWorker = fn => {\n    const workerBlob = new Blob(['(', fn.toString(), ')()'], {\n        type: 'application/javascript',\n    });\n    const workerURL = URL.createObjectURL(workerBlob);\n    const worker = new Worker(workerURL);\n\n    return {\n        transfer: (message, cb) => {},\n        post: (message, cb, transferList) => {\n            const id = getUniqueId();\n\n            worker.onmessage = e => {\n                if (e.data.id === id) {\n                    cb(e.data.message);\n                }\n            };\n\n            worker.postMessage(\n                {\n                    id,\n                    message,\n                },\n                transferList\n            );\n        },\n        terminate: () => {\n            worker.terminate();\n            URL.revokeObjectURL(workerURL);\n        },\n    };\n};\n\nconst loadImage = url =>\n    new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = e => {\n            reject(e);\n        };\n        img.src = url;\n    });\n\nconst renameFile = (file, name) => {\n    const renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n};\n\nconst copyFile = file => renameFile(file, file.name);\n\n// already registered plugins (can't register twice)\nconst registeredPlugins = [];\n\n// pass utils to plugin\nconst createAppPlugin = plugin => {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n        return;\n    }\n\n    // remember this plugin\n    registeredPlugins.push(plugin);\n\n    // setup!\n    const pluginOutline = plugin({\n        addFilter,\n        utils: {\n            Type,\n            forin,\n            isString,\n            isFile,\n            toNaturalFileSize,\n            replaceInString,\n            getExtensionFromFilename,\n            getFilenameWithoutExtension,\n            guesstimateMimeType,\n            getFileFromBlob,\n            getFilenameFromURL,\n            createRoute,\n            createWorker,\n            createView,\n            createItemAPI,\n            loadImage,\n            copyFile,\n            renameFile,\n            createBlob,\n            applyFilterChain,\n            text,\n            getNumericAspectRatioFromString,\n        },\n        views: {\n            fileActionButton,\n        },\n    });\n\n    // add plugin options to default options\n    extendDefaultOptions(pluginOutline.options);\n};\n\n// feature detection used by supported() method\nconst isOperaMini = () => Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\nconst hasPromises = () => 'Promise' in window;\nconst hasBlobSlice = () => 'slice' in Blob.prototype;\nconst hasCreateObjectURL = () => 'URL' in window && 'createObjectURL' in window.URL;\nconst hasVisibility = () => 'visibilityState' in document;\nconst hasTiming = () => 'performance' in window; // iOS 8.x\nconst hasCSSSupports = () => 'supports' in (window.CSS || {}); // use to detect Safari 9+\nconst isIE11 = () => /MSIE|Trident/.test(window.navigator.userAgent);\n\nconst supported = (() => {\n    // Runs immediately and then remembers result for subsequent calls\n    const isSupported =\n        // Has to be a browser\n        isBrowser() &&\n        // Can't run on Opera Mini due to lack of everything\n        !isOperaMini() &&\n        // Require these APIs to feature detect a modern browser\n        hasVisibility() &&\n        hasPromises() &&\n        hasBlobSlice() &&\n        hasCreateObjectURL() &&\n        hasTiming() &&\n        // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)\n        (hasCSSSupports() || isIE11());\n\n    return () => isSupported;\n})();\n\n/**\n * Plugin internal state (over all instances)\n */\nconst state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: [],\n};\n\n// plugin name\nconst name = 'filepond';\n\n/**\n * Public Plugin methods\n */\nconst fn = () => {};\nlet Status$1 = {};\nlet FileStatus = {};\nlet FileOrigin$1 = {};\nlet OptionTypes = {};\nlet create$f = fn;\nlet destroy = fn;\nlet parse = fn;\nlet find = fn;\nlet registerPlugin = fn;\nlet getOptions$1 = fn;\nlet setOptions$1 = fn;\n\n// if not supported, no API\nif (supported()) {\n    // start painter and fire load event\n    createPainter(\n        () => {\n            state.apps.forEach(app => app._read());\n        },\n        ts => {\n            state.apps.forEach(app => app._write(ts));\n        }\n    );\n\n    // fire loaded event so we know when FilePond is available\n    const dispatch = () => {\n        // let others know we have area ready\n        document.dispatchEvent(\n            new CustomEvent('FilePond:loaded', {\n                detail: {\n                    supported,\n                    create: create$f,\n                    destroy,\n                    parse,\n                    find,\n                    registerPlugin,\n                    setOptions: setOptions$1,\n                },\n            })\n        );\n\n        // clean up event\n        document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n        // move to back of execution queue, FilePond should have been exported by then\n        setTimeout(() => dispatch(), 0);\n    } else {\n        document.addEventListener('DOMContentLoaded', dispatch);\n    }\n\n    // updates the OptionTypes object based on the current options\n    const updateOptionTypes = () =>\n        forin(getOptions(), (key, value) => {\n            OptionTypes[key] = value[1];\n        });\n\n    Status$1 = { ...Status };\n    FileOrigin$1 = { ...FileOrigin };\n    FileStatus = { ...ItemStatus };\n\n    OptionTypes = {};\n    updateOptionTypes();\n\n    // create method, creates apps and adds them to the app array\n    create$f = (...args) => {\n        const app = createApp$1(...args);\n        app.on('destroy', destroy);\n        state.apps.push(app);\n        return createAppAPI(app);\n    };\n\n    // destroys apps and removes them from the app array\n    destroy = hook => {\n        // returns true if the app was destroyed successfully\n        const indexToRemove = state.apps.findIndex(app => app.isAttachedTo(hook));\n        if (indexToRemove >= 0) {\n            // remove from apps\n            const app = state.apps.splice(indexToRemove, 1)[0];\n\n            // restore original dom element\n            app.restoreElement();\n\n            return true;\n        }\n\n        return false;\n    };\n\n    // parses the given context for plugins (does not include the context element itself)\n    parse = context => {\n        // get all possible hooks\n        const matchedHooks = Array.from(context.querySelectorAll(`.${name}`));\n\n        // filter out already active hooks\n        const newHooks = matchedHooks.filter(\n            newHook => !state.apps.find(app => app.isAttachedTo(newHook))\n        );\n\n        // create new instance for each hook\n        return newHooks.map(hook => create$f(hook));\n    };\n\n    // returns an app based on the given element hook\n    find = hook => {\n        const app = state.apps.find(app => app.isAttachedTo(hook));\n        if (!app) {\n            return null;\n        }\n        return createAppAPI(app);\n    };\n\n    // adds a plugin extension\n    registerPlugin = (...plugins) => {\n        // register plugins\n        plugins.forEach(createAppPlugin);\n\n        // update OptionTypes, each plugin might have extended the default options\n        updateOptionTypes();\n    };\n\n    getOptions$1 = () => {\n        const opts = {};\n        forin(getOptions(), (key, value) => {\n            opts[key] = value[0];\n        });\n        return opts;\n    };\n\n    setOptions$1 = opts => {\n        if (isObject(opts)) {\n            // update existing plugins\n            state.apps.forEach(app => {\n                app.setOptions(opts);\n            });\n\n            // override defaults\n            setOptions(opts);\n        }\n\n        // return new options\n        return getOptions$1();\n    };\n}\n\nexport {\n    FileOrigin$1 as FileOrigin,\n    FileStatus,\n    OptionTypes,\n    Status$1 as Status,\n    create$f as create,\n    destroy,\n    find,\n    getOptions$1 as getOptions,\n    parse,\n    registerPlugin,\n    setOptions$1 as setOptions,\n    supported,\n};\n","/*!\n * FilePondPluginFileValidateSize 2.2.8\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const { Type, replaceInString, toNaturalFileSize } = utils;\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n            return true;\n        }\n\n        const sizeMax = query('GET_MAX_FILE_SIZE');\n        if (sizeMax !== null && file.size > sizeMax) {\n            return false;\n        }\n\n        const sizeMin = query('GET_MIN_FILE_SIZE');\n        if (sizeMin !== null && file.size < sizeMin) {\n            return false;\n        }\n\n        return true;\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                // if not allowed, all fine, exit\n                if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {\n                    return resolve(file);\n                }\n\n                // check if file should be filtered\n                const fileFilter = query('GET_FILE_VALIDATE_SIZE_FILTER');\n                if (fileFilter && !fileFilter(file)) {\n                    return resolve(file);\n                }\n\n                // reject or resolve based on file size\n                const sizeMax = query('GET_MAX_FILE_SIZE');\n                if (sizeMax !== null && file.size > sizeMax) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMax,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // reject or resolve based on file size\n                const sizeMin = query('GET_MIN_FILE_SIZE');\n                if (sizeMin !== null && file.size < sizeMin) {\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),\n                            sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {\n                                filesize: toNaturalFileSize(\n                                    sizeMin,\n                                    '.',\n                                    query('GET_FILE_SIZE_BASE'),\n                                    query('GET_FILE_SIZE_LABELS', query)\n                                ),\n                            }),\n                        },\n                    });\n                    return;\n                }\n\n                // returns the current option value\n                const totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');\n                if (totalSizeMax !== null) {\n                    // get the current total file size\n                    const currentTotalSize = query('GET_ACTIVE_ITEMS').reduce((total, item) => {\n                        return total + item.fileSize;\n                    }, 0);\n\n                    // get the size of the new file\n                    if (currentTotalSize > totalSizeMax) {\n                        reject({\n                            status: {\n                                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),\n                                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {\n                                    filesize: toNaturalFileSize(\n                                        totalSizeMax,\n                                        '.',\n                                        query('GET_FILE_SIZE_BASE'),\n                                        query('GET_FILE_SIZE_LABELS', query)\n                                    ),\n                                }),\n                            },\n                        });\n                        return;\n                    }\n                }\n\n                // file is fine, let's pass it back\n                resolve(file);\n            })\n    );\n\n    return {\n        options: {\n            // Enable or disable file type validation\n            allowFileSizeValidation: [true, Type.BOOLEAN],\n\n            // Max individual file size in bytes\n            maxFileSize: [null, Type.INT],\n\n            // Min individual file size in bytes\n            minFileSize: [null, Type.INT],\n\n            // Max total file size in bytes\n            maxTotalFileSize: [null, Type.INT],\n\n            // Filter the files that need to be validated for size\n            fileValidateSizeFilter: [null, Type.FUNCTION],\n\n            // error labels\n            labelMinFileSizeExceeded: ['File is too small', Type.STRING],\n            labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],\n\n            labelMaxFileSizeExceeded: ['File is too large', Type.STRING],\n            labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],\n\n            labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],\n            labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n","/*!\n * FilePondPluginFileValidateType 1.2.9\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\nconst plugin = ({ addFilter, utils }) => {\n    // get quick reference to Type utils\n    const {\n        Type,\n        isString,\n        replaceInString,\n        guesstimateMimeType,\n        getExtensionFromFilename,\n        getFilenameFromURL,\n    } = utils;\n\n    const mimeTypeMatchesWildCard = (mimeType, wildcard) => {\n        const mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image\n        const wildcardGroup = wildcard.slice(0, -2); // image/* -> image\n        return mimeTypeGroup === wildcardGroup;\n    };\n\n    const isValidMimeType = (acceptedTypes, userInputType) =>\n        acceptedTypes.some(acceptedType => {\n            // accepted is wildcard mime type\n            if (/\\*$/.test(acceptedType)) {\n                return mimeTypeMatchesWildCard(userInputType, acceptedType);\n            }\n\n            // is normal mime type\n            return acceptedType === userInputType;\n        });\n\n    const getItemType = item => {\n        // if the item is a url we guess the mime type by the extension\n        let type = '';\n        if (isString(item)) {\n            const filename = getFilenameFromURL(item);\n            const extension = getExtensionFromFilename(filename);\n            if (extension) {\n                type = guesstimateMimeType(extension);\n            }\n        } else {\n            type = item.type;\n        }\n\n        return type;\n    };\n\n    const validateFile = (item, acceptedFileTypes, typeDetector) => {\n        // no types defined, everything is allowed \\o/\n        if (acceptedFileTypes.length === 0) {\n            return true;\n        }\n\n        // gets the item type\n        const type = getItemType(item);\n\n        // no type detector, test now\n        if (!typeDetector) {\n            return isValidMimeType(acceptedFileTypes, type);\n        }\n\n        // use type detector\n        return new Promise((resolve, reject) => {\n            typeDetector(item, type)\n                .then(detectedType => {\n                    if (isValidMimeType(acceptedFileTypes, detectedType)) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                })\n                .catch(reject);\n        });\n    };\n\n    const applyMimeTypeMap = map => acceptedFileType =>\n        map[acceptedFileType] === null ? false : map[acceptedFileType] || acceptedFileType;\n\n    // setup attribute mapping for accept\n    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', map =>\n        Object.assign(map, {\n            accept: 'acceptedFileTypes',\n        })\n    );\n\n    // filtering if an item is allowed in hopper\n    addFilter('ALLOW_HOPPER_ITEM', (file, { query }) => {\n        // if we are not doing file type validation exit\n        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n            return true;\n        }\n\n        // we validate the file against the accepted file types\n        return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));\n    });\n\n    // called for each file that is loaded\n    // right before it is set to the item state\n    // should return a promise\n    addFilter(\n        'LOAD_FILE',\n        (file, { query }) =>\n            new Promise((resolve, reject) => {\n                if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {\n                    resolve(file);\n                    return;\n                }\n\n                const acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES');\n\n                // custom type detector method\n                const typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE');\n\n                // if invalid, exit here\n                const validationResult = validateFile(file, acceptedFileTypes, typeDetector);\n\n                const handleRejection = () => {\n                    const acceptedFileTypesMapped = acceptedFileTypes\n                        .map(\n                            applyMimeTypeMap(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP')\n                            )\n                        )\n                        .filter(label => label !== false);\n\n                    const acceptedFileTypesMappedUnique = acceptedFileTypesMapped.filter(\n                        (item, index) => acceptedFileTypesMapped.indexOf(item) === index\n                    );\n\n                    reject({\n                        status: {\n                            main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),\n                            sub: replaceInString(\n                                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'),\n                                {\n                                    allTypes: acceptedFileTypesMappedUnique.join(', '),\n                                    allButLastType: acceptedFileTypesMappedUnique\n                                        .slice(0, -1)\n                                        .join(', '),\n                                    lastType:\n                                        acceptedFileTypesMappedUnique[\n                                            acceptedFileTypesMappedUnique.length - 1\n                                        ],\n                                }\n                            ),\n                        },\n                    });\n                };\n\n                // has returned new filename immidiately\n                if (typeof validationResult === 'boolean') {\n                    if (!validationResult) {\n                        return handleRejection();\n                    }\n                    return resolve(file);\n                }\n\n                // is promise\n                validationResult\n                    .then(() => {\n                        resolve(file);\n                    })\n                    .catch(handleRejection);\n            })\n    );\n\n    // expose plugin\n    return {\n        // default options\n        options: {\n            // Enable or disable file type validation\n            allowFileTypeValidation: [true, Type.BOOLEAN],\n\n            // What file types to accept\n            acceptedFileTypes: [[], Type.ARRAY],\n            // - must be comma separated\n            // - mime types: image/png, image/jpeg, image/gif\n            // - extensions: .png, .jpg, .jpeg ( not enabled yet )\n            // - wildcards: image/*\n\n            // label to show when a type is not allowed\n            labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],\n\n            // nicer label\n            fileValidateTypeLabelExpectedTypes: [\n                'Expects {allButLastType} or {lastType}',\n                Type.STRING,\n            ],\n\n            // map mime types to extensions\n            fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],\n\n            // Custom function to detect type of file\n            fileValidateTypeDetectType: [null, Type.FUNCTION],\n        },\n    };\n};\n\n// fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\nconst isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nif (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));\n}\n\nexport default plugin;\n"],"names":["queries","actions","state","data","query","name","isBrowser","animations","animator","fn","styles","write","create","destroy","store","props","read","root","listeners","item","value","error","option","blob","file","res","headers","chunk","ondata","onerror","serverFileReference","key","success","result","failure","isAsync","map","action","e","drop","location","currentIndex","dragHeight","itemHeight","entry","list","panel","defaultOptions","route","setOptions","getFiles","plugin","app","addFilter","Type","replaceInString","toNaturalFileSize","isString","guesstimateMimeType","getExtensionFromFilename","getFilenameFromURL"],"mappings":"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","x_google_ignoreList":[0,1,2]}